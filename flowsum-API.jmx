<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.2.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="FlowSum_Java_API" enabled="true">
      <stringProp name="TestPlan.comments">内容斜杠、反斜杠未加，后续补充、appkey与appId未自动关联不知道表需要手动关联</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="Content-Type" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie 管理器" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">172.16.3.40</stringProp>
        <stringProp name="HTTPSampler.port">8762</stringProp>
        <stringProp name="HTTPSampler.protocol">http</stringProp>
        <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="appkey" elementType="Argument">
            <stringProp name="Argument.name">appkey</stringProp>
            <stringProp name="Argument.value">B4B8D7283D107E7C</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">测试appkey-秒下款</stringProp>
          </elementProp>
          <elementProp name="uuid" elementType="Argument">
            <stringProp name="Argument.name">uuid</stringProp>
            <stringProp name="Argument.value">${__RandomString(${__Random(12,36,)},0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">手机唯一标识，不变且唯一正则=[a-z0-9A-Z]{12,36}//随机位数12--36</stringProp>
          </elementProp>
          <elementProp name="uuid1" elementType="Argument">
            <stringProp name="Argument.name">uuid1</stringProp>
            <stringProp name="Argument.value">${__RandomString(30,0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,)}</stringProp>
            <stringProp name="Argument.desc">手机唯一标识，不变且唯一正则=[a-z0-9A-Z]{12,36}//固定30位</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="version" elementType="Argument">
            <stringProp name="Argument.name">version</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.desc">内部版本正则=[0-9]{1,2}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="os" elementType="Argument">
            <stringProp name="Argument.name">os</stringProp>
            <stringProp name="Argument.value">Android</stringProp>
            <stringProp name="Argument.desc">平台ios/Android</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="channel" elementType="Argument">
            <stringProp name="Argument.name">channel</stringProp>
            <stringProp name="Argument.value">14</stringProp>
            <stringProp name="Argument.desc">渠道id，安智渠道</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="token0" elementType="Argument">
            <stringProp name="Argument.name">token0</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.desc">登录凭证，登录前不需要，登录后需要</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="data" elementType="Argument">
            <stringProp name="Argument.name">data</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.desc">业务数据，必填</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="latitude" elementType="Argument">
            <stringProp name="Argument.name">latitude</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.desc">纬度</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="longitude" elementType="Argument">
            <stringProp name="Argument.name">longitude</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.desc">经度</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="isLogin" elementType="Argument">
            <stringProp name="Argument.name">isLogin</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.desc">是否强登录，0-弱登录，1-强登录</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="phone11" elementType="Argument">
            <stringProp name="Argument.name">phone11</stringProp>
            <stringProp name="Argument.value">${__time(/100,)}</stringProp>
            <stringProp name="Argument.desc">手机号${__time(/100,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="aeskey" elementType="Argument">
            <stringProp name="Argument.name">aeskey</stringProp>
            <stringProp name="Argument.value">HUVoOAqKfqPY6FzSe2H5S+zLHll18zCRaUOdPwCFJWKAw2skB4iKozQpq6ZqzMOlTMWh226GfDuRjRNND2hI7FlfMzXnha8pOQjXEV98j7OZiIIufipL+rr+XGGMI9g+SeWWkoompoL8TMurm1q7wrN9aBsc1MpyY0+OY7Jadgs=</stringProp>
            <stringProp name="Argument.desc">AES密钥</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="privatekey" elementType="Argument">
            <stringProp name="Argument.name">privatekey</stringProp>
            <stringProp name="Argument.value">MIICdgIBADANBgkqhkiG9w0BAQEFAASCAmAwggJcAgEAAoGBAIMDVNIUnKJxUldoemtYTYaATmzOl4Ic1SUgc2phkbc2zZ3VJYpoGcppNjobZqOiAaojqmfOTIW2tOt2agersJfZ7JX2INrwb7kYkv7tNfMtnuu49bemgGy425A/eVY5m6B5FgUYmr/cOlUSWiGsZKd5XsNqY9C49znZ7GktuVj/AgMBAAECgYBZrBkNZdBEG15pt3g7Kwh9LCsBrHHlO8jkDY8R3FB5X8hi5HY6gsBMW7EjGogpLgUHqDvFq12TFBhHJhiywWAvxNleS8F8tkxhmDEpJVbbhh/CpOxNFEo2CTiqLW5SI86KAQGWWa1uwxsaw56J589Lvomlkz1BmNYQERwHpPpR6QJBALqhE5sF4uSRTmJHSpDJ+OSyvDRZnVFgcneFS+tM9Q5pQO114y/OM9o/FRPng4SV29OY9AgK1MpZwe5Tw2W9xsMCQQCztgetTgtMIR8EPOprul7B0wTapjFfxcazgfmIMKafXABX6p/MksQ4Bxk3XiwXyXqmETXtuzEHm61O+8qaVRkVAkAVCqYoO1Cqjot03y7UBkGOn2xCxrvK+gHN4fR+Ug3rEwjj/P+hWzFTcPtSZC7a2v6O69bPtVDqg5Yu5bjJFs17AkEAnR/GTowx7Hn4+GeaPl5Qgv7Q+6ra+HWfaUt2tNB0nlh+JGALH34i+SmbroEz5AhQp+ncUOKd150RRkF3vsAwkQJAZ4b1NKzZjDeUVQyGKiQ8N4z10iyxq/3FWoKV3ImgcP5dktJdjUf4ra5uE6hfOr8M9ZmvPakrfGdNGGFUy+zijA==</stringProp>
            <stringProp name="Argument.desc">密钥</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="phone" elementType="Argument">
            <stringProp name="Argument.name">phone</stringProp>
            <stringProp name="Argument.value">18680875677</stringProp>
            <stringProp name="Argument.desc">短信通道黑名单号码-----用于接口测试，避免过度发送短信</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="phone00" elementType="Argument">
            <stringProp name="Argument.name">phone00</stringProp>
            <stringProp name="Argument.value">13389663064</stringProp>
            <stringProp name="Argument.desc">调试手机号</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ip_add" elementType="Argument">
            <stringProp name="Argument.name">ip_add</stringProp>
            <stringProp name="Argument.value">172.16.0.101</stringProp>
            <stringProp name="Argument.desc">本机ip地址---pvuv检查sql用</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="appid" elementType="Argument">
            <stringProp name="Argument.name">appid</stringProp>
            <stringProp name="Argument.value">10000042</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="数据库配置_测试库" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="enviorment" elementType="Argument">
            <stringProp name="Argument.name">enviorment</stringProp>
            <stringProp name="Argument.value">测试</stringProp>
            <stringProp name="Argument.desc">所属环境</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="connDataBaseURL_sms" elementType="Argument">
            <stringProp name="Argument.name">connDataBaseURL_sms</stringProp>
            <stringProp name="Argument.value">jdbc:mysql://172.16.0.196:3306/db_sms_test?useUnicode=true&amp;characterEncoding=UTF-8&amp;allowMultiQueries=true</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">测试短信数据库</stringProp>
          </elementProp>
          <elementProp name="connDataBaseAcct" elementType="Argument">
            <stringProp name="Argument.name">connDataBaseAcct</stringProp>
            <stringProp name="Argument.value">root</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="connDataBasePwd" elementType="Argument">
            <stringProp name="Argument.name">connDataBasePwd</stringProp>
            <stringProp name="Argument.value">root</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">密码</stringProp>
          </elementProp>
          <elementProp name="connDataBaseURL_flowsum" elementType="Argument">
            <stringProp name="Argument.name">connDataBaseURL_flowsum</stringProp>
            <stringProp name="Argument.value">jdbc:mysql://172.16.0.196:3306/flowsum?useUnicode=true&amp;characterEncoding=UTF-8&amp;allowMultiQueries=true</stringProp>
            <stringProp name="Argument.desc">测试flowsum数据库</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="短信库----jdbc连接" enabled="true">
        <stringProp name="dataSource">db_sms_test</stringProp>
        <stringProp name="poolMax">0</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="checkQuery">select 1</stringProp>
        <stringProp name="dbUrl">${connDataBaseURL_sms}</stringProp>
        <stringProp name="driver">com.mysql.jdbc.Driver</stringProp>
        <stringProp name="username">${connDataBaseAcct}</stringProp>
        <stringProp name="password">root</stringProp>
        <boolProp name="preinit">false</boolProp>
        <stringProp name="initQuery"></stringProp>
        <stringProp name="connectionProperties"></stringProp>
      </JDBCDataSource>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="flowsum----jdbc连接" enabled="true">
        <stringProp name="dataSource">flowsum_jdbc</stringProp>
        <stringProp name="poolMax">0</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="checkQuery">select 1</stringProp>
        <stringProp name="dbUrl">${connDataBaseURL_flowsum}</stringProp>
        <stringProp name="driver">com.mysql.jdbc.Driver</stringProp>
        <stringProp name="username">${connDataBaseAcct}</stringProp>
        <stringProp name="password">root</stringProp>
        <boolProp name="preinit">false</boolProp>
        <stringProp name="initQuery"></stringProp>
        <stringProp name="connectionProperties"></stringProp>
      </JDBCDataSource>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="整体流程--秒进斗金，安智渠道" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="生成随机身份证号码" enabled="false"/>
        <hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="身份证生成（只有全国部分地区随机，1980年之后）" enabled="true">
            <stringProp name="TestPlan.comments">F:\\   test文件中</stringProp>
            <stringProp name="BeanShellSampler.query">import java.util.*;
        StringBuilder generater = new StringBuilder();
        
        Map areaCode = new HashMap();
 
  
        areaCode.put(&quot;北京市&quot;, 110000);
        areaCode.put(&quot;市辖区&quot;, 110100);
        areaCode.put(&quot;东城区&quot;, 110101);
        areaCode.put(&quot;西城区&quot;, 110102);
        areaCode.put(&quot;崇文区&quot;, 110103);
        areaCode.put(&quot;宣武区&quot;, 110104);
        areaCode.put(&quot;朝阳区&quot;, 110105);
        areaCode.put(&quot;丰台区&quot;, 110106);
        areaCode.put(&quot;石景山区&quot;, 110107);
        areaCode.put(&quot;清河门区&quot;, 210905);
        areaCode.put(&quot;细河区&quot;, 210911);
        areaCode.put(&quot;彰武县&quot;, 210922);
        areaCode.put(&quot;辽阳市&quot;, 211000);
        areaCode.put(&quot;市辖区&quot;, 211001);
        areaCode.put(&quot;白塔区&quot;, 211002);
        areaCode.put(&quot;文圣区&quot;, 211003);
        areaCode.put(&quot;宏伟区&quot;, 211004);
        areaCode.put(&quot;新北区&quot;, 320411);
        areaCode.put(&quot;武进区&quot;, 320412);
        areaCode.put(&quot;溧阳市&quot;, 320481);
        areaCode.put(&quot;金坛市&quot;, 320482);
        areaCode.put(&quot;苏州市&quot;, 320500);
        areaCode.put(&quot;市辖区&quot;, 320501);
        areaCode.put(&quot;鹤壁市&quot;, 410600);
        areaCode.put(&quot;市辖区&quot;, 410601);
        areaCode.put(&quot;鹤山区&quot;, 410602);
        areaCode.put(&quot;山城区&quot;, 410603);
        areaCode.put(&quot;淇滨区&quot;, 410611);
        areaCode.put(&quot;浚　县&quot;, 410621);
        areaCode.put(&quot;淇　县&quot;, 410622);
        areaCode.put(&quot;新乡市&quot;, 410700);
        areaCode.put(&quot;青白江区&quot;, 510113);
        areaCode.put(&quot;新都区&quot;, 510114);
        areaCode.put(&quot;温江区&quot;, 510115);
        areaCode.put(&quot;金堂县&quot;, 510121);
        areaCode.put(&quot;双流县&quot;, 510122);
        areaCode.put(&quot;郫　县&quot;, 510124);
        areaCode.put(&quot;大邑县&quot;, 510129);
        areaCode.put(&quot;蒲江县&quot;, 510131);
        areaCode.put(&quot;新津县&quot;, 510132);
        areaCode.put(&quot;乾　县&quot;, 610424);
        areaCode.put(&quot;礼泉县&quot;, 610425);
        areaCode.put(&quot;永寿县&quot;, 610426);
        areaCode.put(&quot;彬　县&quot;, 610427);
        areaCode.put(&quot;长武县&quot;, 610428);
        areaCode.put(&quot;旬邑县&quot;, 610429);
        areaCode.put(&quot;淳化县&quot;, 610430);
        areaCode.put(&quot;武功县&quot;, 610431);
        areaCode.put(&quot;兴平市&quot;, 610481);
        areaCode.put(&quot;渭南市&quot;, 610500);
        
        //地区号
        String  randomAreaCode=&quot;&quot;;
        int index = (int) (Math.random() * areaCode.size());
         Collection values = areaCode.values();
         Iterator it = values.iterator();
        int i = 0;
        int code = 0;
        while (i &lt; index &amp;&amp; it.hasNext()) {
            i++;
            randomAreaCode = it.next().toString();
        }
        generater.append(randomAreaCode);
        //生日
        String randomBirthday=&quot;&quot;;
        Calendar birthday = Calendar.getInstance();
        birthday.set(Calendar.YEAR, (int) (Math.random() * 20) + 1980);
        birthday.set(Calendar.MONTH, (int) (Math.random() * 12));
        birthday.set(Calendar.DATE, (int) (Math.random() * 31));
        StringBuilder builder = new StringBuilder();
        builder.append(birthday.get(Calendar.YEAR));
        long month = birthday.get(Calendar.MONTH) + 1;
        if (month &lt; 10) {
            builder.append(&quot;0&quot;);
        }
        builder.append(month);
        long date = birthday.get(Calendar.DATE);
        if (date &lt; 10) {
            builder.append(&quot;0&quot;);
        }
        builder.append(date);
        randomBirthday= builder.toString();
         generater.append(randomBirthday);
         
      //随机码
      String randomCode=&quot;&quot;;
      int code = (int) (Math.random() * 1000);
        if (code &lt; 10) {
            randomCode= &quot;00&quot; + code;
        } else if (code &lt; 100) {
            randomCode= &quot;0&quot; + code;
        } else {
            randomCode= &quot;&quot; + code;
        }
     
        generater.append(randomCode);
     //验证码
        char[]  chars= generater.toString().toCharArray();
        int[] c = { 7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2 };
        char[] r = { &apos;1&apos;, &apos;0&apos;, &apos;X&apos;, &apos;9&apos;, &apos;8&apos;, &apos;7&apos;, &apos;6&apos;, &apos;5&apos;, &apos;4&apos;, &apos;3&apos;, &apos;2&apos; };
        int[] n = new int[17];
        int result = 0;
        for (int i = 0; i &lt; n.length; i++) {
            n[i] = Integer.parseInt(chars[i] + &quot;&quot;);
        }
        for (int i = 0; i &lt; n.length; i++) {
            result += c[i] * n[i];
        }
        char validateCode = r[result % 11];
        generater.append(validateCode);
 
    
        vars.put(&quot;idCard&quot;,generater.toString()) ;
        SampleResult.setResponseData(generater.toString());</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="身份证生成（只有全国部分地区随机，小于18岁）" enabled="false">
            <stringProp name="TestPlan.comments">F:\\   test文件中</stringProp>
            <stringProp name="BeanShellSampler.query">import java.util.*;
        StringBuilder generater = new StringBuilder();
        
        Map areaCode = new HashMap();
 
  
        areaCode.put(&quot;北京市&quot;, 110000);
        areaCode.put(&quot;市辖区&quot;, 110100);
        areaCode.put(&quot;东城区&quot;, 110101);
        areaCode.put(&quot;西城区&quot;, 110102);
        areaCode.put(&quot;崇文区&quot;, 110103);
        areaCode.put(&quot;宣武区&quot;, 110104);
        areaCode.put(&quot;朝阳区&quot;, 110105);
        areaCode.put(&quot;丰台区&quot;, 110106);
        areaCode.put(&quot;石景山区&quot;, 110107);
        areaCode.put(&quot;清河门区&quot;, 210905);
        areaCode.put(&quot;细河区&quot;, 210911);
        areaCode.put(&quot;彰武县&quot;, 210922);
        areaCode.put(&quot;辽阳市&quot;, 211000);
        areaCode.put(&quot;市辖区&quot;, 211001);
        areaCode.put(&quot;白塔区&quot;, 211002);
        areaCode.put(&quot;文圣区&quot;, 211003);
        areaCode.put(&quot;宏伟区&quot;, 211004);
        areaCode.put(&quot;新北区&quot;, 320411);
        areaCode.put(&quot;武进区&quot;, 320412);
        areaCode.put(&quot;溧阳市&quot;, 320481);
        areaCode.put(&quot;金坛市&quot;, 320482);
        areaCode.put(&quot;苏州市&quot;, 320500);
        areaCode.put(&quot;市辖区&quot;, 320501);
        areaCode.put(&quot;鹤壁市&quot;, 410600);
        areaCode.put(&quot;市辖区&quot;, 410601);
        areaCode.put(&quot;鹤山区&quot;, 410602);
        areaCode.put(&quot;山城区&quot;, 410603);
        areaCode.put(&quot;淇滨区&quot;, 410611);
        areaCode.put(&quot;浚　县&quot;, 410621);
        areaCode.put(&quot;淇　县&quot;, 410622);
        areaCode.put(&quot;新乡市&quot;, 410700);
        areaCode.put(&quot;青白江区&quot;, 510113);
        areaCode.put(&quot;新都区&quot;, 510114);
        areaCode.put(&quot;温江区&quot;, 510115);
        areaCode.put(&quot;金堂县&quot;, 510121);
        areaCode.put(&quot;双流县&quot;, 510122);
        areaCode.put(&quot;郫　县&quot;, 510124);
        areaCode.put(&quot;大邑县&quot;, 510129);
        areaCode.put(&quot;蒲江县&quot;, 510131);
        areaCode.put(&quot;新津县&quot;, 510132);
        areaCode.put(&quot;乾　县&quot;, 610424);
        areaCode.put(&quot;礼泉县&quot;, 610425);
        areaCode.put(&quot;永寿县&quot;, 610426);
        areaCode.put(&quot;彬　县&quot;, 610427);
        areaCode.put(&quot;长武县&quot;, 610428);
        areaCode.put(&quot;旬邑县&quot;, 610429);
        areaCode.put(&quot;淳化县&quot;, 610430);
        areaCode.put(&quot;武功县&quot;, 610431);
        areaCode.put(&quot;兴平市&quot;, 610481);
        areaCode.put(&quot;渭南市&quot;, 610500);
        
        //地区号
        String  randomAreaCode=&quot;&quot;;
        int index = (int) (Math.random() * areaCode.size());
         Collection values = areaCode.values();
         Iterator it = values.iterator();
        int i = 0;
        int code = 0;
        while (i &lt; index &amp;&amp; it.hasNext()) {
            i++;
            randomAreaCode = it.next().toString();
        }
        generater.append(randomAreaCode);
        //生日
        String randomBirthday=&quot;&quot;;
        Calendar birthday = Calendar.getInstance();
        birthday.set(Calendar.YEAR, (int) (Math.random() * 10) + 2002);
        birthday.set(Calendar.MONTH, (int) (Math.random() * 12));
        birthday.set(Calendar.DATE, (int) (Math.random() * 31));
        StringBuilder builder = new StringBuilder();
        builder.append(birthday.get(Calendar.YEAR));
        long month = birthday.get(Calendar.MONTH) + 1;
        if (month &lt; 10) {
            builder.append(&quot;0&quot;);
        }
        builder.append(month);
        long date = birthday.get(Calendar.DATE);
        if (date &lt; 10) {
            builder.append(&quot;0&quot;);
        }
        builder.append(date);
        randomBirthday= builder.toString();
         generater.append(randomBirthday);
         
      //随机码
      String randomCode=&quot;&quot;;
      int code = (int) (Math.random() * 1000);
        if (code &lt; 10) {
            randomCode= &quot;00&quot; + code;
        } else if (code &lt; 100) {
            randomCode= &quot;0&quot; + code;
        } else {
            randomCode= &quot;&quot; + code;
        }
     
        generater.append(randomCode);
     //验证码
        char[]  chars= generater.toString().toCharArray();
        int[] c = { 7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2 };
        char[] r = { &apos;1&apos;, &apos;0&apos;, &apos;X&apos;, &apos;9&apos;, &apos;8&apos;, &apos;7&apos;, &apos;6&apos;, &apos;5&apos;, &apos;4&apos;, &apos;3&apos;, &apos;2&apos; };
        int[] n = new int[17];
        int result = 0;
        for (int i = 0; i &lt; n.length; i++) {
            n[i] = Integer.parseInt(chars[i] + &quot;&quot;);
        }
        for (int i = 0; i &lt; n.length; i++) {
            result += c[i] * n[i];
        }
        char validateCode = r[result % 11];
        generater.append(validateCode);
 
    
        vars.put(&quot;gove_iden_num&quot;,generater.toString()) ;
        SampleResult.setResponseData(generater.toString());</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="身份证生成（全国随机，1980年之后）" enabled="false">
            <stringProp name="TestPlan.comments">F:\\   test文件中</stringProp>
            <stringProp name="BeanShellSampler.query">import java.util.*;
        StringBuilder generater = new StringBuilder();
        
        Map areaCode = new HashMap();
   
		areaCode.put(&quot;北京市&quot;, 110000);
		areaCode.put(&quot;市辖区&quot;, 110100);
		areaCode.put(&quot;东城区&quot;, 110101);
		areaCode.put(&quot;西城区&quot;, 110102);
		areaCode.put(&quot;崇文区&quot;, 110103);
		areaCode.put(&quot;宣武区&quot;, 110104);
		areaCode.put(&quot;朝阳区&quot;, 110105);
		areaCode.put(&quot;丰台区&quot;, 110106);
		areaCode.put(&quot;石景山区&quot;, 110107);
		areaCode.put(&quot;海淀区&quot;, 110108);
		areaCode.put(&quot;门头沟区&quot;, 110109);
		areaCode.put(&quot;房山区&quot;, 110111);
		areaCode.put(&quot;通州区&quot;, 110112);
		areaCode.put(&quot;顺义区&quot;, 110113);
		areaCode.put(&quot;昌平区&quot;, 110114);
		areaCode.put(&quot;大兴区&quot;, 110115);
		areaCode.put(&quot;怀柔区&quot;, 110116);
		areaCode.put(&quot;平谷区&quot;, 110117);
		areaCode.put(&quot;县&quot;, 110200);
		areaCode.put(&quot;密云县&quot;, 110228);
		areaCode.put(&quot;延庆县&quot;, 110229);
		areaCode.put(&quot;天津市&quot;, 120000);
		areaCode.put(&quot;市辖区&quot;, 120100);
		areaCode.put(&quot;和平区&quot;, 120101);
		areaCode.put(&quot;河东区&quot;, 120102);
		areaCode.put(&quot;河西区&quot;, 120103);
		areaCode.put(&quot;南开区&quot;, 120104);
		areaCode.put(&quot;河北区&quot;, 120105);
		areaCode.put(&quot;红桥区&quot;, 120106);
		areaCode.put(&quot;东丽区&quot;, 120110);
		areaCode.put(&quot;西青区&quot;, 120111);
		areaCode.put(&quot;津南区&quot;, 120112);
		areaCode.put(&quot;北辰区&quot;, 120113);
		areaCode.put(&quot;武清区&quot;, 120114);
		areaCode.put(&quot;宝坻区&quot;, 120115);
		areaCode.put(&quot;县&quot;, 120200);
		areaCode.put(&quot;宁河县&quot;, 120221);
		areaCode.put(&quot;静海县&quot;, 120223);
		areaCode.put(&quot;蓟　县&quot;, 120225);
		areaCode.put(&quot;河北省&quot;, 130000);
		areaCode.put(&quot;石家庄市&quot;, 130100);
		areaCode.put(&quot;市辖区&quot;, 130101);
		areaCode.put(&quot;长安区&quot;, 130102);
		areaCode.put(&quot;桥东区&quot;, 130103);
		areaCode.put(&quot;桥西区&quot;, 130104);
		areaCode.put(&quot;新华区&quot;, 130105);
		areaCode.put(&quot;井陉矿区&quot;, 130107);
		areaCode.put(&quot;裕华区&quot;, 130108);
		areaCode.put(&quot;井陉县&quot;, 130121);
		areaCode.put(&quot;正定县&quot;, 130123);
		areaCode.put(&quot;栾城县&quot;, 130124);
		areaCode.put(&quot;行唐县&quot;, 130125);
		areaCode.put(&quot;灵寿县&quot;, 130126);
		areaCode.put(&quot;高邑县&quot;, 130127);
		areaCode.put(&quot;深泽县&quot;, 130128);
		areaCode.put(&quot;赞皇县&quot;, 130129);
		areaCode.put(&quot;无极县&quot;, 130130);
		areaCode.put(&quot;平山县&quot;, 130131);
		areaCode.put(&quot;元氏县&quot;, 130132);
		areaCode.put(&quot;赵　县&quot;, 130133);
		areaCode.put(&quot;辛集市&quot;, 130181);
		areaCode.put(&quot;藁城市&quot;, 130182);
		areaCode.put(&quot;晋州市&quot;, 130183);
		areaCode.put(&quot;新乐市&quot;, 130184);
		areaCode.put(&quot;鹿泉市&quot;, 130185);
		areaCode.put(&quot;唐山市&quot;, 130200);
		areaCode.put(&quot;市辖区&quot;, 130201);
		areaCode.put(&quot;路南区&quot;, 130202);
		areaCode.put(&quot;路北区&quot;, 130203);
		areaCode.put(&quot;古冶区&quot;, 130204);
		areaCode.put(&quot;开平区&quot;, 130205);
		areaCode.put(&quot;丰南区&quot;, 130207);
		areaCode.put(&quot;丰润区&quot;, 130208);
		areaCode.put(&quot;滦　县&quot;, 130223);
		areaCode.put(&quot;滦南县&quot;, 130224);
		areaCode.put(&quot;乐亭县&quot;, 130225);
		areaCode.put(&quot;迁西县&quot;, 130227);
		areaCode.put(&quot;玉田县&quot;, 130229);
		areaCode.put(&quot;唐海县&quot;, 130230);
		areaCode.put(&quot;遵化市&quot;, 130281);
		areaCode.put(&quot;迁安市&quot;, 130283);
		areaCode.put(&quot;秦皇岛市&quot;, 130300);
		areaCode.put(&quot;市辖区&quot;, 130301);
		areaCode.put(&quot;海港区&quot;, 130302);
		areaCode.put(&quot;山海关区&quot;, 130303);
		areaCode.put(&quot;北戴河区&quot;, 130304);
		areaCode.put(&quot;青龙满族自治县&quot;, 130321);
		areaCode.put(&quot;昌黎县&quot;, 130322);
		areaCode.put(&quot;抚宁县&quot;, 130323);
		areaCode.put(&quot;卢龙县&quot;, 130324);
		areaCode.put(&quot;邯郸市&quot;, 130400);
		areaCode.put(&quot;市辖区&quot;, 130401);
		areaCode.put(&quot;邯山区&quot;, 130402);
		areaCode.put(&quot;丛台区&quot;, 130403);
		areaCode.put(&quot;复兴区&quot;, 130404);
		areaCode.put(&quot;峰峰矿区&quot;, 130406);
		areaCode.put(&quot;邯郸县&quot;, 130421);
		areaCode.put(&quot;临漳县&quot;, 130423);
		areaCode.put(&quot;成安县&quot;, 130424);
		areaCode.put(&quot;大名县&quot;, 130425);
		areaCode.put(&quot;涉　县&quot;, 130426);
		areaCode.put(&quot;磁　县&quot;, 130427);
		areaCode.put(&quot;肥乡县&quot;, 130428);
		areaCode.put(&quot;永年县&quot;, 130429);
		areaCode.put(&quot;邱　县&quot;, 130430);
		areaCode.put(&quot;鸡泽县&quot;, 130431);
		areaCode.put(&quot;广平县&quot;, 130432);
		areaCode.put(&quot;馆陶县&quot;, 130433);
		areaCode.put(&quot;魏　县&quot;, 130434);
		areaCode.put(&quot;曲周县&quot;, 130435);
		areaCode.put(&quot;武安市&quot;, 130481);
		areaCode.put(&quot;邢台市&quot;, 130500);
		areaCode.put(&quot;市辖区&quot;, 130501);
		areaCode.put(&quot;桥东区&quot;, 130502);
		areaCode.put(&quot;桥西区&quot;, 130503);
		areaCode.put(&quot;邢台县&quot;, 130521);
		areaCode.put(&quot;临城县&quot;, 130522);
		areaCode.put(&quot;内丘县&quot;, 130523);
		areaCode.put(&quot;柏乡县&quot;, 130524);
		areaCode.put(&quot;隆尧县&quot;, 130525);
		areaCode.put(&quot;任　县&quot;, 130526);
		areaCode.put(&quot;南和县&quot;, 130527);
		areaCode.put(&quot;宁晋县&quot;, 130528);
		areaCode.put(&quot;巨鹿县&quot;, 130529);
		areaCode.put(&quot;新河县&quot;, 130530);
		areaCode.put(&quot;广宗县&quot;, 130531);
		areaCode.put(&quot;平乡县&quot;, 130532);
		areaCode.put(&quot;威　县&quot;, 130533);
		areaCode.put(&quot;清河县&quot;, 130534);
		areaCode.put(&quot;临西县&quot;, 130535);
		areaCode.put(&quot;南宫市&quot;, 130581);
		areaCode.put(&quot;沙河市&quot;, 130582);
		areaCode.put(&quot;保定市&quot;, 130600);
		areaCode.put(&quot;市辖区&quot;, 130601);
		areaCode.put(&quot;新市区&quot;, 130602);
		areaCode.put(&quot;北市区&quot;, 130603);
		areaCode.put(&quot;南市区&quot;, 130604);
		areaCode.put(&quot;满城县&quot;, 130621);
		areaCode.put(&quot;清苑县&quot;, 130622);
		areaCode.put(&quot;涞水县&quot;, 130623);
		areaCode.put(&quot;阜平县&quot;, 130624);
		areaCode.put(&quot;徐水县&quot;, 130625);
		areaCode.put(&quot;定兴县&quot;, 130626);
		areaCode.put(&quot;唐　县&quot;, 130627);
		areaCode.put(&quot;高阳县&quot;, 130628);
		areaCode.put(&quot;容城县&quot;, 130629);
		areaCode.put(&quot;涞源县&quot;, 130630);
		areaCode.put(&quot;望都县&quot;, 130631);
		areaCode.put(&quot;安新县&quot;, 130632);
		areaCode.put(&quot;易　县&quot;, 130633);
		areaCode.put(&quot;曲阳县&quot;, 130634);
		areaCode.put(&quot;蠡　县&quot;, 130635);
		areaCode.put(&quot;顺平县&quot;, 130636);
		areaCode.put(&quot;博野县&quot;, 130637);
		areaCode.put(&quot;雄　县&quot;, 130638);
		areaCode.put(&quot;涿州市&quot;, 130681);
		areaCode.put(&quot;定州市&quot;, 130682);
		areaCode.put(&quot;安国市&quot;, 130683);
		areaCode.put(&quot;高碑店市&quot;, 130684);
		areaCode.put(&quot;张家口市&quot;, 130700);
		areaCode.put(&quot;市辖区&quot;, 130701);
		areaCode.put(&quot;桥东区&quot;, 130702);
		areaCode.put(&quot;桥西区&quot;, 130703);
		areaCode.put(&quot;宣化区&quot;, 130705);
		areaCode.put(&quot;下花园区&quot;, 130706);
		areaCode.put(&quot;宣化县&quot;, 130721);
		areaCode.put(&quot;张北县&quot;, 130722);
		areaCode.put(&quot;康保县&quot;, 130723);
		areaCode.put(&quot;沽源县&quot;, 130724);
		areaCode.put(&quot;尚义县&quot;, 130725);
		areaCode.put(&quot;蔚　县&quot;, 130726);
		areaCode.put(&quot;阳原县&quot;, 130727);
		areaCode.put(&quot;怀安县&quot;, 130728);
		areaCode.put(&quot;万全县&quot;, 130729);
		areaCode.put(&quot;怀来县&quot;, 130730);
		areaCode.put(&quot;涿鹿县&quot;, 130731);
		areaCode.put(&quot;赤城县&quot;, 130732);
		areaCode.put(&quot;崇礼县&quot;, 130733);
		areaCode.put(&quot;承德市&quot;, 130800);
		areaCode.put(&quot;市辖区&quot;, 130801);
		areaCode.put(&quot;双桥区&quot;, 130802);
		areaCode.put(&quot;双滦区&quot;, 130803);
		areaCode.put(&quot;鹰手营子矿区&quot;, 130804);
		areaCode.put(&quot;承德县&quot;, 130821);
		areaCode.put(&quot;兴隆县&quot;, 130822);
		areaCode.put(&quot;平泉县&quot;, 130823);
		areaCode.put(&quot;滦平县&quot;, 130824);
		areaCode.put(&quot;隆化县&quot;, 130825);
		areaCode.put(&quot;丰宁满族自治县&quot;, 130826);
		areaCode.put(&quot;宽城满族自治县&quot;, 130827);
		areaCode.put(&quot;围场满族蒙古族自治县&quot;, 130828);
		areaCode.put(&quot;沧州市&quot;, 130900);
		areaCode.put(&quot;市辖区&quot;, 130901);
		areaCode.put(&quot;新华区&quot;, 130902);
		areaCode.put(&quot;运河区&quot;, 130903);
		areaCode.put(&quot;沧　县&quot;, 130921);
		areaCode.put(&quot;青　县&quot;, 130922);
		areaCode.put(&quot;东光县&quot;, 130923);
		areaCode.put(&quot;海兴县&quot;, 130924);
		areaCode.put(&quot;盐山县&quot;, 130925);
		areaCode.put(&quot;肃宁县&quot;, 130926);
		areaCode.put(&quot;南皮县&quot;, 130927);
		areaCode.put(&quot;吴桥县&quot;, 130928);
		areaCode.put(&quot;献　县&quot;, 130929);
		areaCode.put(&quot;孟村回族自治县&quot;, 130930);
		areaCode.put(&quot;泊头市&quot;, 130981);
		areaCode.put(&quot;任丘市&quot;, 130982);
		areaCode.put(&quot;黄骅市&quot;, 130983);
		areaCode.put(&quot;河间市&quot;, 130984);
		areaCode.put(&quot;廊坊市&quot;, 131000);
		areaCode.put(&quot;市辖区&quot;, 131001);
		areaCode.put(&quot;安次区&quot;, 131002);
		areaCode.put(&quot;广阳区&quot;, 131003);
		areaCode.put(&quot;固安县&quot;, 131022);
		areaCode.put(&quot;永清县&quot;, 131023);
		areaCode.put(&quot;香河县&quot;, 131024);
		areaCode.put(&quot;大城县&quot;, 131025);
		areaCode.put(&quot;文安县&quot;, 131026);
		areaCode.put(&quot;大厂回族自治县&quot;, 131028);
		areaCode.put(&quot;霸州市&quot;, 131081);
		areaCode.put(&quot;三河市&quot;, 131082);
		areaCode.put(&quot;衡水市&quot;, 131100);
		areaCode.put(&quot;市辖区&quot;, 131101);
		areaCode.put(&quot;桃城区&quot;, 131102);
		areaCode.put(&quot;枣强县&quot;, 131121);
		areaCode.put(&quot;武邑县&quot;, 131122);
		areaCode.put(&quot;武强县&quot;, 131123);
		areaCode.put(&quot;饶阳县&quot;, 131124);
		areaCode.put(&quot;安平县&quot;, 131125);
		areaCode.put(&quot;故城县&quot;, 131126);
		areaCode.put(&quot;景　县&quot;, 131127);
		areaCode.put(&quot;阜城县&quot;, 131128);
		areaCode.put(&quot;冀州市&quot;, 131181);
		areaCode.put(&quot;深州市&quot;, 131182);
		areaCode.put(&quot;山西省&quot;, 140000);
		areaCode.put(&quot;太原市&quot;, 140100);
		areaCode.put(&quot;市辖区&quot;, 140101);
		areaCode.put(&quot;小店区&quot;, 140105);
		areaCode.put(&quot;迎泽区&quot;, 140106);
		areaCode.put(&quot;杏花岭区&quot;, 140107);
		areaCode.put(&quot;尖草坪区&quot;, 140108);
		areaCode.put(&quot;万柏林区&quot;, 140109);
		areaCode.put(&quot;晋源区&quot;, 140110);
		areaCode.put(&quot;清徐县&quot;, 140121);
		areaCode.put(&quot;阳曲县&quot;, 140122);
		areaCode.put(&quot;娄烦县&quot;, 140123);
		areaCode.put(&quot;古交市&quot;, 140181);
		areaCode.put(&quot;大同市&quot;, 140200);
		areaCode.put(&quot;市辖区&quot;, 140201);
		areaCode.put(&quot;城　区&quot;, 140202);
		areaCode.put(&quot;矿　区&quot;, 140203);
		areaCode.put(&quot;南郊区&quot;, 140211);
		areaCode.put(&quot;新荣区&quot;, 140212);
		areaCode.put(&quot;阳高县&quot;, 140221);
		areaCode.put(&quot;天镇县&quot;, 140222);
		areaCode.put(&quot;广灵县&quot;, 140223);
		areaCode.put(&quot;灵丘县&quot;, 140224);
		areaCode.put(&quot;浑源县&quot;, 140225);
		areaCode.put(&quot;左云县&quot;, 140226);
		areaCode.put(&quot;大同县&quot;, 140227);
		areaCode.put(&quot;阳泉市&quot;, 140300);
		areaCode.put(&quot;市辖区&quot;, 140301);
		areaCode.put(&quot;城　区&quot;, 140302);
		areaCode.put(&quot;矿　区&quot;, 140303);
		areaCode.put(&quot;郊　区&quot;, 140311);
		areaCode.put(&quot;平定县&quot;, 140321);
		areaCode.put(&quot;盂　县&quot;, 140322);
		areaCode.put(&quot;长治市&quot;, 140400);
		areaCode.put(&quot;市辖区&quot;, 140401);
		areaCode.put(&quot;城　区&quot;, 140402);
		areaCode.put(&quot;郊　区&quot;, 140411);
		areaCode.put(&quot;长治县&quot;, 140421);
		areaCode.put(&quot;襄垣县&quot;, 140423);
		areaCode.put(&quot;屯留县&quot;, 140424);
		areaCode.put(&quot;平顺县&quot;, 140425);
		areaCode.put(&quot;黎城县&quot;, 140426);
		areaCode.put(&quot;壶关县&quot;, 140427);
		areaCode.put(&quot;长子县&quot;, 140428);
		areaCode.put(&quot;武乡县&quot;, 140429);
		areaCode.put(&quot;沁　县&quot;, 140430);
		areaCode.put(&quot;沁源县&quot;, 140431);
		areaCode.put(&quot;潞城市&quot;, 140481);
		areaCode.put(&quot;晋城市&quot;, 140500);
		areaCode.put(&quot;市辖区&quot;, 140501);
		areaCode.put(&quot;城　区&quot;, 140502);
		areaCode.put(&quot;沁水县&quot;, 140521);
		areaCode.put(&quot;阳城县&quot;, 140522);
		areaCode.put(&quot;陵川县&quot;, 140524);
		areaCode.put(&quot;泽州县&quot;, 140525);
		areaCode.put(&quot;高平市&quot;, 140581);
		areaCode.put(&quot;朔州市&quot;, 140600);
		areaCode.put(&quot;市辖区&quot;, 140601);
		areaCode.put(&quot;朔城区&quot;, 140602);
		areaCode.put(&quot;平鲁区&quot;, 140603);
		areaCode.put(&quot;山阴县&quot;, 140621);
		areaCode.put(&quot;应　县&quot;, 140622);
		areaCode.put(&quot;右玉县&quot;, 140623);
		areaCode.put(&quot;怀仁县&quot;, 140624);
		areaCode.put(&quot;晋中市&quot;, 140700);
		areaCode.put(&quot;市辖区&quot;, 140701);
		areaCode.put(&quot;榆次区&quot;, 140702);
		areaCode.put(&quot;榆社县&quot;, 140721);
		areaCode.put(&quot;左权县&quot;, 140722);
		areaCode.put(&quot;和顺县&quot;, 140723);
		areaCode.put(&quot;昔阳县&quot;, 140724);
		areaCode.put(&quot;寿阳县&quot;, 140725);
		areaCode.put(&quot;太谷县&quot;, 140726);
		areaCode.put(&quot;祁　县&quot;, 140727);
		areaCode.put(&quot;平遥县&quot;, 140728);
		areaCode.put(&quot;灵石县&quot;, 140729);
		areaCode.put(&quot;介休市&quot;, 140781);
		areaCode.put(&quot;运城市&quot;, 140800);
		areaCode.put(&quot;市辖区&quot;, 140801);
		areaCode.put(&quot;盐湖区&quot;, 140802);
		areaCode.put(&quot;临猗县&quot;, 140821);
		areaCode.put(&quot;万荣县&quot;, 140822);
		areaCode.put(&quot;闻喜县&quot;, 140823);
		areaCode.put(&quot;稷山县&quot;, 140824);
		areaCode.put(&quot;新绛县&quot;, 140825);
		areaCode.put(&quot;绛　县&quot;, 140826);
		areaCode.put(&quot;垣曲县&quot;, 140827);
		areaCode.put(&quot;夏　县&quot;, 140828);
		areaCode.put(&quot;平陆县&quot;, 140829);
		areaCode.put(&quot;芮城县&quot;, 140830);
		areaCode.put(&quot;永济市&quot;, 140881);
		areaCode.put(&quot;河津市&quot;, 140882);
		areaCode.put(&quot;忻州市&quot;, 140900);
		areaCode.put(&quot;市辖区&quot;, 140901);
		areaCode.put(&quot;忻府区&quot;, 140902);
		areaCode.put(&quot;定襄县&quot;, 140921);
		areaCode.put(&quot;五台县&quot;, 140922);
		areaCode.put(&quot;代　县&quot;, 140923);
		areaCode.put(&quot;繁峙县&quot;, 140924);
		areaCode.put(&quot;宁武县&quot;, 140925);
		areaCode.put(&quot;静乐县&quot;, 140926);
		areaCode.put(&quot;神池县&quot;, 140927);
		areaCode.put(&quot;五寨县&quot;, 140928);
		areaCode.put(&quot;岢岚县&quot;, 140929);
		areaCode.put(&quot;河曲县&quot;, 140930);
		areaCode.put(&quot;保德县&quot;, 140931);
		areaCode.put(&quot;偏关县&quot;, 140932);
		areaCode.put(&quot;原平市&quot;, 140981);
		areaCode.put(&quot;临汾市&quot;, 141000);
		areaCode.put(&quot;市辖区&quot;, 141001);
		areaCode.put(&quot;尧都区&quot;, 141002);
		areaCode.put(&quot;曲沃县&quot;, 141021);
		areaCode.put(&quot;翼城县&quot;, 141022);
		areaCode.put(&quot;襄汾县&quot;, 141023);
		areaCode.put(&quot;洪洞县&quot;, 141024);
		areaCode.put(&quot;古　县&quot;, 141025);
		areaCode.put(&quot;安泽县&quot;, 141026);
		areaCode.put(&quot;浮山县&quot;, 141027);
		areaCode.put(&quot;吉　县&quot;, 141028);
		areaCode.put(&quot;乡宁县&quot;, 141029);
		areaCode.put(&quot;大宁县&quot;, 141030);
		areaCode.put(&quot;隰　县&quot;, 141031);
		areaCode.put(&quot;永和县&quot;, 141032);
		areaCode.put(&quot;蒲　县&quot;, 141033);
		areaCode.put(&quot;汾西县&quot;, 141034);
		areaCode.put(&quot;侯马市&quot;, 141081);
		areaCode.put(&quot;霍州市&quot;, 141082);
		areaCode.put(&quot;吕梁市&quot;, 141100);
		areaCode.put(&quot;市辖区&quot;, 141101);
		areaCode.put(&quot;离石区&quot;, 141102);
		areaCode.put(&quot;文水县&quot;, 141121);
		areaCode.put(&quot;交城县&quot;, 141122);
		areaCode.put(&quot;兴　县&quot;, 141123);
		areaCode.put(&quot;临　县&quot;, 141124);
		areaCode.put(&quot;柳林县&quot;, 141125);
		areaCode.put(&quot;石楼县&quot;, 141126);
		areaCode.put(&quot;岚　县&quot;, 141127);
		areaCode.put(&quot;方山县&quot;, 141128);
		areaCode.put(&quot;中阳县&quot;, 141129);
		areaCode.put(&quot;交口县&quot;, 141130);
		areaCode.put(&quot;孝义市&quot;, 141181);
		areaCode.put(&quot;汾阳市&quot;, 141182);
		areaCode.put(&quot;内蒙古自治区&quot;, 150000);
		areaCode.put(&quot;呼和浩特市&quot;, 150100);
		areaCode.put(&quot;市辖区&quot;, 150101);
		areaCode.put(&quot;新城区&quot;, 150102);
		areaCode.put(&quot;回民区&quot;, 150103);
		areaCode.put(&quot;玉泉区&quot;, 150104);
		areaCode.put(&quot;赛罕区&quot;, 150105);
		areaCode.put(&quot;土默特左旗&quot;, 150121);
		areaCode.put(&quot;托克托县&quot;, 150122);
		areaCode.put(&quot;和林格尔县&quot;, 150123);
		areaCode.put(&quot;清水河县&quot;, 150124);
		areaCode.put(&quot;武川县&quot;, 150125);
		areaCode.put(&quot;包头市&quot;, 150200);
		areaCode.put(&quot;市辖区&quot;, 150201);
		areaCode.put(&quot;东河区&quot;, 150202);
		areaCode.put(&quot;昆都仑区&quot;, 150203);
		areaCode.put(&quot;青山区&quot;, 150204);
		areaCode.put(&quot;石拐区&quot;, 150205);
		areaCode.put(&quot;白云鄂博矿区&quot;, 150206);
		areaCode.put(&quot;九原区&quot;, 150207);
		areaCode.put(&quot;土默特右旗&quot;, 150221);
		areaCode.put(&quot;固阳县&quot;, 150222);
		areaCode.put(&quot;达尔罕茂明安联合旗&quot;, 150223);
		areaCode.put(&quot;乌海市&quot;, 150300);
		areaCode.put(&quot;市辖区&quot;, 150301);
		areaCode.put(&quot;海勃湾区&quot;, 150302);
		areaCode.put(&quot;海南区&quot;, 150303);
		areaCode.put(&quot;乌达区&quot;, 150304);
		areaCode.put(&quot;赤峰市&quot;, 150400);
		areaCode.put(&quot;市辖区&quot;, 150401);
		areaCode.put(&quot;红山区&quot;, 150402);
		areaCode.put(&quot;元宝山区&quot;, 150403);
		areaCode.put(&quot;松山区&quot;, 150404);
		areaCode.put(&quot;阿鲁科尔沁旗&quot;, 150421);
		areaCode.put(&quot;巴林左旗&quot;, 150422);
		areaCode.put(&quot;巴林右旗&quot;, 150423);
		areaCode.put(&quot;林西县&quot;, 150424);
		areaCode.put(&quot;克什克腾旗&quot;, 150425);
		areaCode.put(&quot;翁牛特旗&quot;, 150426);
		areaCode.put(&quot;喀喇沁旗&quot;, 150428);
		areaCode.put(&quot;宁城县&quot;, 150429);
		areaCode.put(&quot;敖汉旗&quot;, 150430);
		areaCode.put(&quot;通辽市&quot;, 150500);
		areaCode.put(&quot;市辖区&quot;, 150501);
		areaCode.put(&quot;科尔沁区&quot;, 150502);
		areaCode.put(&quot;科尔沁左翼中旗&quot;, 150521);
		areaCode.put(&quot;科尔沁左翼后旗&quot;, 150522);
		areaCode.put(&quot;开鲁县&quot;, 150523);
		areaCode.put(&quot;库伦旗&quot;, 150524);
		areaCode.put(&quot;奈曼旗&quot;, 150525);
		areaCode.put(&quot;扎鲁特旗&quot;, 150526);
		areaCode.put(&quot;霍林郭勒市&quot;, 150581);
		areaCode.put(&quot;鄂尔多斯市&quot;, 150600);
		areaCode.put(&quot;市辖区&quot;, 150601);
		areaCode.put(&quot;  东胜区&quot;, 150602);
		areaCode.put(&quot;达拉特旗&quot;, 150621);
		areaCode.put(&quot;准格尔旗&quot;, 150622);
		areaCode.put(&quot;鄂托克前旗&quot;, 150623);
		areaCode.put(&quot;鄂托克旗&quot;, 150624);
		areaCode.put(&quot;杭锦旗&quot;, 150625);
		areaCode.put(&quot;乌审旗&quot;, 150626);
		areaCode.put(&quot;伊金霍洛旗&quot;, 150627);
		areaCode.put(&quot;呼伦贝尔市&quot;, 150700);
		areaCode.put(&quot;市辖区&quot;, 150701);
		areaCode.put(&quot;海拉尔区&quot;, 150702);
		areaCode.put(&quot;阿荣旗&quot;, 150721);
		areaCode.put(&quot;莫力达瓦达斡尔族自治旗&quot;, 150722);
		areaCode.put(&quot;鄂伦春自治旗&quot;, 150723);
		areaCode.put(&quot;鄂温克族自治旗&quot;, 150724);
		areaCode.put(&quot;陈巴尔虎旗&quot;, 150725);
		areaCode.put(&quot;新巴尔虎左旗&quot;, 150726);
		areaCode.put(&quot;新巴尔虎右旗&quot;, 150727);
		areaCode.put(&quot;满洲里市&quot;, 150781);
		areaCode.put(&quot;牙克石市&quot;, 150782);
		areaCode.put(&quot;扎兰屯市&quot;, 150783);
		areaCode.put(&quot;额尔古纳市&quot;, 150784);
		areaCode.put(&quot;根河市&quot;, 150785);
		areaCode.put(&quot;巴彦淖尔市&quot;, 150800);
		areaCode.put(&quot;市辖区&quot;, 150801);
		areaCode.put(&quot;临河区&quot;, 150802);
		areaCode.put(&quot;五原县&quot;, 150821);
		areaCode.put(&quot;磴口县&quot;, 150822);
		areaCode.put(&quot;乌拉特前旗&quot;, 150823);
		areaCode.put(&quot;乌拉特中旗&quot;, 150824);
		areaCode.put(&quot;乌拉特后旗&quot;, 150825);
		areaCode.put(&quot;杭锦后旗&quot;, 150826);
		areaCode.put(&quot;乌兰察布市&quot;, 150900);
		areaCode.put(&quot;市辖区&quot;, 150901);
		areaCode.put(&quot;集宁区&quot;, 150902);
		areaCode.put(&quot;卓资县&quot;, 150921);
		areaCode.put(&quot;化德县&quot;, 150922);
		areaCode.put(&quot;商都县&quot;, 150923);
		areaCode.put(&quot;兴和县&quot;, 150924);
		areaCode.put(&quot;凉城县&quot;, 150925);
		areaCode.put(&quot;察哈尔右翼前旗&quot;, 150926);
		areaCode.put(&quot;察哈尔右翼中旗&quot;, 150927);
		areaCode.put(&quot;察哈尔右翼后旗&quot;, 150928);
		areaCode.put(&quot;四子王旗&quot;, 150929);
		areaCode.put(&quot;丰镇市&quot;, 150981);
		areaCode.put(&quot;兴安盟&quot;, 152200);
		areaCode.put(&quot;乌兰浩特市&quot;, 152201);
		areaCode.put(&quot;阿尔山市&quot;, 152202);
		areaCode.put(&quot;科尔沁右翼前旗&quot;, 152221);
		areaCode.put(&quot;科尔沁右翼中旗&quot;, 152222);
		areaCode.put(&quot;扎赉特旗&quot;, 152223);
		areaCode.put(&quot;突泉县&quot;, 152224);
		areaCode.put(&quot;锡林郭勒盟&quot;, 152500);
		areaCode.put(&quot;二连浩特市&quot;, 152501);
		areaCode.put(&quot;锡林浩特市&quot;, 152502);
		areaCode.put(&quot;阿巴嘎旗&quot;, 152522);
		areaCode.put(&quot;苏尼特左旗&quot;, 152523);
		areaCode.put(&quot;苏尼特右旗&quot;, 152524);
		areaCode.put(&quot;东乌珠穆沁旗&quot;, 152525);
		areaCode.put(&quot;西乌珠穆沁旗&quot;, 152526);
		areaCode.put(&quot;太仆寺旗&quot;, 152527);
		areaCode.put(&quot;镶黄旗&quot;, 152528);
		areaCode.put(&quot;正镶白旗&quot;, 152529);
		areaCode.put(&quot;正蓝旗&quot;, 152530);
		areaCode.put(&quot;多伦县&quot;, 152531);
		areaCode.put(&quot;阿拉善盟&quot;, 152900);
		areaCode.put(&quot;阿拉善左旗&quot;, 152921);
		areaCode.put(&quot;阿拉善右旗&quot;, 152922);
		areaCode.put(&quot;额济纳旗&quot;, 152923);
		areaCode.put(&quot;辽宁省&quot;, 210000);
		areaCode.put(&quot;沈阳市&quot;, 210100);
		areaCode.put(&quot;市辖区&quot;, 210101);
		areaCode.put(&quot;和平区&quot;, 210102);
		areaCode.put(&quot;沈河区&quot;, 210103);
		areaCode.put(&quot;大东区&quot;, 210104);
		areaCode.put(&quot;皇姑区&quot;, 210105);
		areaCode.put(&quot;铁西区&quot;, 210106);
		areaCode.put(&quot;苏家屯区&quot;, 210111);
		areaCode.put(&quot;东陵区&quot;, 210112);
		areaCode.put(&quot;沈北新区&quot;, 210113);
		areaCode.put(&quot;于洪区&quot;, 210114);
		areaCode.put(&quot;辽中县&quot;, 210122);
		areaCode.put(&quot;康平县&quot;, 210123);
		areaCode.put(&quot;法库县&quot;, 210124);
		areaCode.put(&quot;新民市&quot;, 210181);
		areaCode.put(&quot;大连市&quot;, 210200);
		areaCode.put(&quot;市辖区&quot;, 210201);
		areaCode.put(&quot;中山区&quot;, 210202);
		areaCode.put(&quot;西岗区&quot;, 210203);
		areaCode.put(&quot;沙河口区&quot;, 210204);
		areaCode.put(&quot;甘井子区&quot;, 210211);
		areaCode.put(&quot;旅顺口区&quot;, 210212);
		areaCode.put(&quot;金州区&quot;, 210213);
		areaCode.put(&quot;长海县&quot;, 210224);
		areaCode.put(&quot;瓦房店市&quot;, 210281);
		areaCode.put(&quot;普兰店市&quot;, 210282);
		areaCode.put(&quot;庄河市&quot;, 210283);
		areaCode.put(&quot;鞍山市&quot;, 210300);
		areaCode.put(&quot;市辖区&quot;, 210301);
		areaCode.put(&quot;铁东区&quot;, 210302);
		areaCode.put(&quot;铁西区&quot;, 210303);
		areaCode.put(&quot;立山区&quot;, 210304);
		areaCode.put(&quot;千山区&quot;, 210311);
		areaCode.put(&quot;台安县&quot;, 210321);
		areaCode.put(&quot;岫岩满族自治县&quot;, 210323);
		areaCode.put(&quot;海城市&quot;, 210381);
		areaCode.put(&quot;抚顺市&quot;, 210400);
		areaCode.put(&quot;市辖区&quot;, 210401);
		areaCode.put(&quot;新抚区&quot;, 210402);
		areaCode.put(&quot;东洲区&quot;, 210403);
		areaCode.put(&quot;望花区&quot;, 210404);
		areaCode.put(&quot;顺城区&quot;, 210411);
		areaCode.put(&quot;抚顺县&quot;, 210421);
		areaCode.put(&quot;新宾满族自治县&quot;, 210422);
		areaCode.put(&quot;清原满族自治县&quot;, 210423);
		areaCode.put(&quot;本溪市&quot;, 210500);
		areaCode.put(&quot;市辖区&quot;, 210501);
		areaCode.put(&quot;平山区&quot;, 210502);
		areaCode.put(&quot;溪湖区&quot;, 210503);
		areaCode.put(&quot;明山区&quot;, 210504);
		areaCode.put(&quot;南芬区&quot;, 210505);
		areaCode.put(&quot;本溪满族自治县&quot;, 210521);
		areaCode.put(&quot;桓仁满族自治县&quot;, 210522);
		areaCode.put(&quot;丹东市&quot;, 210600);
		areaCode.put(&quot;市辖区&quot;, 210601);
		areaCode.put(&quot;元宝区&quot;, 210602);
		areaCode.put(&quot;振兴区&quot;, 210603);
		areaCode.put(&quot;振安区&quot;, 210604);
		areaCode.put(&quot;宽甸满族自治县&quot;, 210624);
		areaCode.put(&quot;东港市&quot;, 210681);
		areaCode.put(&quot;凤城市&quot;, 210682);
		areaCode.put(&quot;锦州市&quot;, 210700);
		areaCode.put(&quot;市辖区&quot;, 210701);
		areaCode.put(&quot;古塔区&quot;, 210702);
		areaCode.put(&quot;凌河区&quot;, 210703);
		areaCode.put(&quot;太和区&quot;, 210711);
		areaCode.put(&quot;黑山县&quot;, 210726);
		areaCode.put(&quot;义　县&quot;, 210727);
		areaCode.put(&quot;凌海市&quot;, 210781);
		areaCode.put(&quot;北镇市&quot;, 210782);
		areaCode.put(&quot;营口市&quot;, 210800);
		areaCode.put(&quot;市辖区&quot;, 210801);
		areaCode.put(&quot;站前区&quot;, 210802);
		areaCode.put(&quot;西市区&quot;, 210803);
		areaCode.put(&quot;鲅鱼圈区&quot;, 210804);
		areaCode.put(&quot;老边区&quot;, 210811);
		areaCode.put(&quot;盖州市&quot;, 210881);
		areaCode.put(&quot;大石桥市&quot;, 210882);
		areaCode.put(&quot;阜新市&quot;, 210900);
		areaCode.put(&quot;市辖区&quot;, 210901);
		areaCode.put(&quot;海州区&quot;, 210902);
		areaCode.put(&quot;新邱区&quot;, 210903);
		areaCode.put(&quot;太平区&quot;, 210904);
		areaCode.put(&quot;清河门区&quot;, 210905);
		areaCode.put(&quot;细河区&quot;, 210911);
		areaCode.put(&quot;阜新蒙古族自治县&quot;, 210921);
		areaCode.put(&quot;彰武县&quot;, 210922);
		areaCode.put(&quot;辽阳市&quot;, 211000);
		areaCode.put(&quot;市辖区&quot;, 211001);
		areaCode.put(&quot;白塔区&quot;, 211002);
		areaCode.put(&quot;文圣区&quot;, 211003);
		areaCode.put(&quot;宏伟区&quot;, 211004);
		areaCode.put(&quot;弓长岭区&quot;, 211005);
		areaCode.put(&quot;太子河区&quot;, 211011);
		areaCode.put(&quot;辽阳县&quot;, 211021);
		areaCode.put(&quot;灯塔市&quot;, 211081);
		areaCode.put(&quot;盘锦市&quot;, 211100);
		areaCode.put(&quot;市辖区&quot;, 211101);
		areaCode.put(&quot;双台子区&quot;, 211102);
		areaCode.put(&quot;兴隆台区&quot;, 211103);
		areaCode.put(&quot;大洼县&quot;, 211121);
		areaCode.put(&quot;盘山县&quot;, 211122);
		areaCode.put(&quot;铁岭市&quot;, 211200);
		areaCode.put(&quot;市辖区&quot;, 211201);
		areaCode.put(&quot;银州区&quot;, 211202);
		areaCode.put(&quot;清河区&quot;, 211204);
		areaCode.put(&quot;铁岭县&quot;, 211221);
		areaCode.put(&quot;西丰县&quot;, 211223);
		areaCode.put(&quot;昌图县&quot;, 211224);
		areaCode.put(&quot;调兵山市&quot;, 211281);
		areaCode.put(&quot;开原市&quot;, 211282);
		areaCode.put(&quot;朝阳市&quot;, 211300);
		areaCode.put(&quot;市辖区&quot;, 211301);
		areaCode.put(&quot;双塔区&quot;, 211302);
		areaCode.put(&quot;龙城区&quot;, 211303);
		areaCode.put(&quot;朝阳县&quot;, 211321);
		areaCode.put(&quot;建平县&quot;, 211322);
		areaCode.put(&quot;喀喇沁左翼蒙古族自治县&quot;, 211324);
		areaCode.put(&quot;北票市&quot;, 211381);
		areaCode.put(&quot;凌源市&quot;, 211382);
		areaCode.put(&quot;葫芦岛市&quot;, 211400);
		areaCode.put(&quot;市辖区&quot;, 211401);
		areaCode.put(&quot;连山区&quot;, 211402);
		areaCode.put(&quot;龙港区&quot;, 211403);
		areaCode.put(&quot;南票区&quot;, 211404);
		areaCode.put(&quot;绥中县&quot;, 211421);
		areaCode.put(&quot;建昌县&quot;, 211422);
		areaCode.put(&quot;兴城市&quot;, 211481);
		areaCode.put(&quot;吉林省&quot;, 220000);
		areaCode.put(&quot;长春市&quot;, 220100);
		areaCode.put(&quot;市辖区&quot;, 220101);
		areaCode.put(&quot;南关区&quot;, 220102);
		areaCode.put(&quot;宽城区&quot;, 220103);
		areaCode.put(&quot;朝阳区&quot;, 220104);
		areaCode.put(&quot;二道区&quot;, 220105);
		areaCode.put(&quot;绿园区&quot;, 220106);
		areaCode.put(&quot;双阳区&quot;, 220112);
		areaCode.put(&quot;农安县&quot;, 220122);
		areaCode.put(&quot;九台市&quot;, 220181);
		areaCode.put(&quot;榆树市&quot;, 220182);
		areaCode.put(&quot;德惠市&quot;, 220183);
		areaCode.put(&quot;吉林市&quot;, 220200);
		areaCode.put(&quot;市辖区&quot;, 220201);
		areaCode.put(&quot;昌邑区&quot;, 220202);
		areaCode.put(&quot;龙潭区&quot;, 220203);
		areaCode.put(&quot;船营区&quot;, 220204);
		areaCode.put(&quot;丰满区&quot;, 220211);
		areaCode.put(&quot;永吉县&quot;, 220221);
		areaCode.put(&quot;蛟河市&quot;, 220281);
		areaCode.put(&quot;桦甸市&quot;, 220282);
		areaCode.put(&quot;舒兰市&quot;, 220283);
		areaCode.put(&quot;磐石市&quot;, 220284);
		areaCode.put(&quot;四平市&quot;, 220300);
		areaCode.put(&quot;市辖区&quot;, 220301);
		areaCode.put(&quot;铁西区&quot;, 220302);
		areaCode.put(&quot;铁东区&quot;, 220303);
		areaCode.put(&quot;梨树县&quot;, 220322);
		areaCode.put(&quot;伊通满族自治县&quot;, 220323);
		areaCode.put(&quot;公主岭市&quot;, 220381);
		areaCode.put(&quot;双辽市&quot;, 220382);
		areaCode.put(&quot;辽源市&quot;, 220400);
		areaCode.put(&quot;市辖区&quot;, 220401);
		areaCode.put(&quot;龙山区&quot;, 220402);
		areaCode.put(&quot;西安区&quot;, 220403);
		areaCode.put(&quot;东丰县&quot;, 220421);
		areaCode.put(&quot;东辽县&quot;, 220422);
		areaCode.put(&quot;通化市&quot;, 220500);
		areaCode.put(&quot;市辖区&quot;, 220501);
		areaCode.put(&quot;东昌区&quot;, 220502);
		areaCode.put(&quot;二道江区&quot;, 220503);
		areaCode.put(&quot;通化县&quot;, 220521);
		areaCode.put(&quot;辉南县&quot;, 220523);
		areaCode.put(&quot;柳河县&quot;, 220524);
		areaCode.put(&quot;梅河口市&quot;, 220581);
		areaCode.put(&quot;集安市&quot;, 220582);
		areaCode.put(&quot;白山市&quot;, 220600);
		areaCode.put(&quot;市辖区&quot;, 220601);
		areaCode.put(&quot;八道江区&quot;, 220602);
		areaCode.put(&quot;  江源区&quot;, 220605);
		areaCode.put(&quot;抚松县&quot;, 220621);
		areaCode.put(&quot;靖宇县&quot;, 220622);
		areaCode.put(&quot;长白朝鲜族自治县&quot;, 220623);
		areaCode.put(&quot;临江市&quot;, 220681);
		areaCode.put(&quot;松原市&quot;, 220700);
		areaCode.put(&quot;市辖区&quot;, 220701);
		areaCode.put(&quot;宁江区&quot;, 220702);
		areaCode.put(&quot;前郭尔罗斯蒙古族自治县&quot;, 220721);
		areaCode.put(&quot;长岭县&quot;, 220722);
		areaCode.put(&quot;乾安县&quot;, 220723);
		areaCode.put(&quot;扶余县&quot;, 220724);
		areaCode.put(&quot;白城市&quot;, 220800);
		areaCode.put(&quot;市辖区&quot;, 220801);
		areaCode.put(&quot;洮北区&quot;, 220802);
		areaCode.put(&quot;镇赉县&quot;, 220821);
		areaCode.put(&quot;通榆县&quot;, 220822);
		areaCode.put(&quot;洮南市&quot;, 220881);
		areaCode.put(&quot;大安市&quot;, 220882);
		areaCode.put(&quot;延边朝鲜族自治州&quot;, 222400);
		areaCode.put(&quot;延吉市&quot;, 222401);
		areaCode.put(&quot;图们市&quot;, 222402);
		areaCode.put(&quot;敦化市&quot;, 222403);
		areaCode.put(&quot;珲春市&quot;, 222404);
		areaCode.put(&quot;龙井市&quot;, 222405);
		areaCode.put(&quot;和龙市&quot;, 222406);
		areaCode.put(&quot;汪清县&quot;, 222424);
		areaCode.put(&quot;安图县&quot;, 222426);
		areaCode.put(&quot;黑龙江省&quot;, 230000);
		areaCode.put(&quot;哈尔滨市&quot;, 230100);
		areaCode.put(&quot;市辖区&quot;, 230101);
		areaCode.put(&quot;道里区&quot;, 230102);
		areaCode.put(&quot;南岗区&quot;, 230103);
		areaCode.put(&quot;道外区&quot;, 230104);
		areaCode.put(&quot;平房区&quot;, 230108);
		areaCode.put(&quot;松北区&quot;, 230109);
		areaCode.put(&quot;香坊区&quot;, 230110);
		areaCode.put(&quot;呼兰区&quot;, 230111);
		areaCode.put(&quot;依兰县&quot;, 230123);
		areaCode.put(&quot;方正县&quot;, 230124);
		areaCode.put(&quot;宾　县&quot;, 230125);
		areaCode.put(&quot;巴彦县&quot;, 230126);
		areaCode.put(&quot;木兰县&quot;, 230127);
		areaCode.put(&quot;通河县&quot;, 230128);
		areaCode.put(&quot;延寿县&quot;, 230129);
		areaCode.put(&quot;双城市&quot;, 230182);
		areaCode.put(&quot;尚志市&quot;, 230183);
		areaCode.put(&quot;五常市&quot;, 230184);
		areaCode.put(&quot;齐齐哈尔市&quot;, 230200);
		areaCode.put(&quot;市辖区&quot;, 230201);
		areaCode.put(&quot;龙沙区&quot;, 230202);
		areaCode.put(&quot;建华区&quot;, 230203);
		areaCode.put(&quot;铁锋区&quot;, 230204);
		areaCode.put(&quot;昂昂溪区&quot;, 230205);
		areaCode.put(&quot;富拉尔基区&quot;, 230206);
		areaCode.put(&quot;碾子山区&quot;, 230207);
		areaCode.put(&quot;梅里斯达斡尔族区&quot;, 230208);
		areaCode.put(&quot;龙江县&quot;, 230221);
		areaCode.put(&quot;依安县&quot;, 230223);
		areaCode.put(&quot;泰来县&quot;, 230224);
		areaCode.put(&quot;甘南县&quot;, 230225);
		areaCode.put(&quot;富裕县&quot;, 230227);
		areaCode.put(&quot;克山县&quot;, 230229);
		areaCode.put(&quot;克东县&quot;, 230230);
		areaCode.put(&quot;拜泉县&quot;, 230231);
		areaCode.put(&quot;讷河市&quot;, 230281);
		areaCode.put(&quot;鸡西市&quot;, 230300);
		areaCode.put(&quot;市辖区&quot;, 230301);
		areaCode.put(&quot;鸡冠区&quot;, 230302);
		areaCode.put(&quot;恒山区&quot;, 230303);
		areaCode.put(&quot;滴道区&quot;, 230304);
		areaCode.put(&quot;梨树区&quot;, 230305);
		areaCode.put(&quot;城子河区&quot;, 230306);
		areaCode.put(&quot;麻山区&quot;, 230307);
		areaCode.put(&quot;鸡东县&quot;, 230321);
		areaCode.put(&quot;虎林市&quot;, 230381);
		areaCode.put(&quot;密山市&quot;, 230382);
		areaCode.put(&quot;鹤岗市&quot;, 230400);
		areaCode.put(&quot;市辖区&quot;, 230401);
		areaCode.put(&quot;向阳区&quot;, 230402);
		areaCode.put(&quot;工农区&quot;, 230403);
		areaCode.put(&quot;南山区&quot;, 230404);
		areaCode.put(&quot;兴安区&quot;, 230405);
		areaCode.put(&quot;东山区&quot;, 230406);
		areaCode.put(&quot;兴山区&quot;, 230407);
		areaCode.put(&quot;萝北县&quot;, 230421);
		areaCode.put(&quot;绥滨县&quot;, 230422);
		areaCode.put(&quot;双鸭山市&quot;, 230500);
		areaCode.put(&quot;市辖区&quot;, 230501);
		areaCode.put(&quot;尖山区&quot;, 230502);
		areaCode.put(&quot;岭东区&quot;, 230503);
		areaCode.put(&quot;四方台区&quot;, 230505);
		areaCode.put(&quot;宝山区&quot;, 230506);
		areaCode.put(&quot;集贤县&quot;, 230521);
		areaCode.put(&quot;友谊县&quot;, 230522);
		areaCode.put(&quot;宝清县&quot;, 230523);
		areaCode.put(&quot;饶河县&quot;, 230524);
		areaCode.put(&quot;大庆市&quot;, 230600);
		areaCode.put(&quot;市辖区&quot;, 230601);
		areaCode.put(&quot;萨尔图区&quot;, 230602);
		areaCode.put(&quot;龙凤区&quot;, 230603);
		areaCode.put(&quot;让胡路区&quot;, 230604);
		areaCode.put(&quot;红岗区&quot;, 230605);
		areaCode.put(&quot;大同区&quot;, 230606);
		areaCode.put(&quot;肇州县&quot;, 230621);
		areaCode.put(&quot;肇源县&quot;, 230622);
		areaCode.put(&quot;林甸县&quot;, 230623);
		areaCode.put(&quot;杜尔伯特蒙古族自治县&quot;, 230624);
		areaCode.put(&quot;伊春市&quot;, 230700);
		areaCode.put(&quot;市辖区&quot;, 230701);
		areaCode.put(&quot;伊春区&quot;, 230702);
		areaCode.put(&quot;南岔区&quot;, 230703);
		areaCode.put(&quot;友好区&quot;, 230704);
		areaCode.put(&quot;西林区&quot;, 230705);
		areaCode.put(&quot;翠峦区&quot;, 230706);
		areaCode.put(&quot;新青区&quot;, 230707);
		areaCode.put(&quot;美溪区&quot;, 230708);
		areaCode.put(&quot;金山屯区&quot;, 230709);
		areaCode.put(&quot;五营区&quot;, 230710);
		areaCode.put(&quot;乌马河区&quot;, 230711);
		areaCode.put(&quot;汤旺河区&quot;, 230712);
		areaCode.put(&quot;带岭区&quot;, 230713);
		areaCode.put(&quot;乌伊岭区&quot;, 230714);
		areaCode.put(&quot;红星区&quot;, 230715);
		areaCode.put(&quot;上甘岭区&quot;, 230716);
		areaCode.put(&quot;嘉荫县&quot;, 230722);
		areaCode.put(&quot;铁力市&quot;, 230781);
		areaCode.put(&quot;佳木斯市&quot;, 230800);
		areaCode.put(&quot;市辖区&quot;, 230801);
		areaCode.put(&quot;向阳区&quot;, 230803);
		areaCode.put(&quot;前进区&quot;, 230804);
		areaCode.put(&quot;东风区&quot;, 230805);
		areaCode.put(&quot;郊　区&quot;, 230811);
		areaCode.put(&quot;桦南县&quot;, 230822);
		areaCode.put(&quot;桦川县&quot;, 230826);
		areaCode.put(&quot;汤原县&quot;, 230828);
		areaCode.put(&quot;抚远县&quot;, 230833);
		areaCode.put(&quot;同江市&quot;, 230881);
		areaCode.put(&quot;富锦市&quot;, 230882);
		areaCode.put(&quot;七台河市&quot;, 230900);
		areaCode.put(&quot;市辖区&quot;, 230901);
		areaCode.put(&quot;新兴区&quot;, 230902);
		areaCode.put(&quot;桃山区&quot;, 230903);
		areaCode.put(&quot;茄子河区&quot;, 230904);
		areaCode.put(&quot;勃利县&quot;, 230921);
		areaCode.put(&quot;牡丹江市&quot;, 231000);
		areaCode.put(&quot;市辖区&quot;, 231001);
		areaCode.put(&quot;东安区&quot;, 231002);
		areaCode.put(&quot;阳明区&quot;, 231003);
		areaCode.put(&quot;爱民区&quot;, 231004);
		areaCode.put(&quot;西安区&quot;, 231005);
		areaCode.put(&quot;东宁县&quot;, 231024);
		areaCode.put(&quot;林口县&quot;, 231025);
		areaCode.put(&quot;绥芬河市&quot;, 231081);
		areaCode.put(&quot;海林市&quot;, 231083);
		areaCode.put(&quot;宁安市&quot;, 231084);
		areaCode.put(&quot;穆棱市&quot;, 231085);
		areaCode.put(&quot;黑河市&quot;, 231100);
		areaCode.put(&quot;市辖区&quot;, 231101);
		areaCode.put(&quot;爱辉区&quot;, 231102);
		areaCode.put(&quot;嫩江县&quot;, 231121);
		areaCode.put(&quot;逊克县&quot;, 231123);
		areaCode.put(&quot;孙吴县&quot;, 231124);
		areaCode.put(&quot;北安市&quot;, 231181);
		areaCode.put(&quot;五大连池市&quot;, 231182);
		areaCode.put(&quot;绥化市&quot;, 231200);
		areaCode.put(&quot;市辖区&quot;, 231201);
		areaCode.put(&quot;北林区&quot;, 231202);
		areaCode.put(&quot;望奎县&quot;, 231221);
		areaCode.put(&quot;兰西县&quot;, 231222);
		areaCode.put(&quot;青冈县&quot;, 231223);
		areaCode.put(&quot;庆安县&quot;, 231224);
		areaCode.put(&quot;明水县&quot;, 231225);
		areaCode.put(&quot;绥棱县&quot;, 231226);
		areaCode.put(&quot;安达市&quot;, 231281);
		areaCode.put(&quot;肇东市&quot;, 231282);
		areaCode.put(&quot;海伦市&quot;, 231283);
		areaCode.put(&quot;大兴安岭地区&quot;, 232700);
		areaCode.put(&quot;呼玛县&quot;, 232721);
		areaCode.put(&quot;塔河县&quot;, 232722);
		areaCode.put(&quot;漠河县&quot;, 232723);
		areaCode.put(&quot;上海市&quot;, 310000);
		areaCode.put(&quot;市辖区&quot;, 310100);
		areaCode.put(&quot;黄浦区&quot;, 310101);
		areaCode.put(&quot;卢湾区&quot;, 310103);
		areaCode.put(&quot;徐汇区&quot;, 310104);
		areaCode.put(&quot;长宁区&quot;, 310105);
		areaCode.put(&quot;静安区&quot;, 310106);
		areaCode.put(&quot;普陀区&quot;, 310107);
		areaCode.put(&quot;闸北区&quot;, 310108);
		areaCode.put(&quot;虹口区&quot;, 310109);
		areaCode.put(&quot;杨浦区&quot;, 310110);
		areaCode.put(&quot;闵行区&quot;, 310112);
		areaCode.put(&quot;宝山区&quot;, 310113);
		areaCode.put(&quot;嘉定区&quot;, 310114);
		areaCode.put(&quot;浦东新区 (*)&quot;, 310115);
		areaCode.put(&quot;金山区&quot;, 310116);
		areaCode.put(&quot;松江区&quot;, 310117);
		areaCode.put(&quot;青浦区&quot;, 310118);
		areaCode.put(&quot;奉贤区&quot;, 310120);
		areaCode.put(&quot;县&quot;, 310200);
		areaCode.put(&quot;崇明县&quot;, 310230);
		areaCode.put(&quot;江苏省&quot;, 320000);
		areaCode.put(&quot;南京市&quot;, 320100);
		areaCode.put(&quot;市辖区&quot;, 320101);
		areaCode.put(&quot;玄武区&quot;, 320102);
		areaCode.put(&quot;白下区&quot;, 320103);
		areaCode.put(&quot;秦淮区&quot;, 320104);
		areaCode.put(&quot;建邺区&quot;, 320105);
		areaCode.put(&quot;鼓楼区&quot;, 320106);
		areaCode.put(&quot;下关区&quot;, 320107);
		areaCode.put(&quot;浦口区&quot;, 320111);
		areaCode.put(&quot;栖霞区&quot;, 320113);
		areaCode.put(&quot;雨花台区&quot;, 320114);
		areaCode.put(&quot;江宁区&quot;, 320115);
		areaCode.put(&quot;六合区&quot;, 320116);
		areaCode.put(&quot;溧水县&quot;, 320124);
		areaCode.put(&quot;高淳县&quot;, 320125);
		areaCode.put(&quot;无锡市&quot;, 320200);
		areaCode.put(&quot;市辖区&quot;, 320201);
		areaCode.put(&quot;崇安区&quot;, 320202);
		areaCode.put(&quot;南长区&quot;, 320203);
		areaCode.put(&quot;北塘区&quot;, 320204);
		areaCode.put(&quot;锡山区&quot;, 320205);
		areaCode.put(&quot;惠山区&quot;, 320206);
		areaCode.put(&quot;滨湖区&quot;, 320211);
		areaCode.put(&quot;江阴市&quot;, 320281);
		areaCode.put(&quot;宜兴市&quot;, 320282);
		areaCode.put(&quot;徐州市&quot;, 320300);
		areaCode.put(&quot;市辖区&quot;, 320301);
		areaCode.put(&quot;鼓楼区&quot;, 320302);
		areaCode.put(&quot;云龙区&quot;, 320303);
		areaCode.put(&quot;九里区&quot;, 320304);
		areaCode.put(&quot;贾汪区&quot;, 320305);
		areaCode.put(&quot;泉山区&quot;, 320311);
		areaCode.put(&quot;丰　县&quot;, 320321);
		areaCode.put(&quot;沛　县&quot;, 320322);
		areaCode.put(&quot;铜山县&quot;, 320323);
		areaCode.put(&quot;睢宁县&quot;, 320324);
		areaCode.put(&quot;新沂市&quot;, 320381);
		areaCode.put(&quot;邳州市&quot;, 320382);
		areaCode.put(&quot;常州市&quot;, 320400);
		areaCode.put(&quot;市辖区&quot;, 320401);
		areaCode.put(&quot;天宁区&quot;, 320402);
		areaCode.put(&quot;钟楼区&quot;, 320404);
		areaCode.put(&quot;戚墅堰区&quot;, 320405);
		areaCode.put(&quot;新北区&quot;, 320411);
		areaCode.put(&quot;武进区&quot;, 320412);
		areaCode.put(&quot;溧阳市&quot;, 320481);
		areaCode.put(&quot;金坛市&quot;, 320482);
		areaCode.put(&quot;苏州市&quot;, 320500);
		areaCode.put(&quot;市辖区&quot;, 320501);
		areaCode.put(&quot;沧浪区&quot;, 320502);
		areaCode.put(&quot;平江区&quot;, 320503);
		areaCode.put(&quot;金阊区&quot;, 320504);
		areaCode.put(&quot;虎丘区&quot;, 320505);
		areaCode.put(&quot;吴中区&quot;, 320506);
		areaCode.put(&quot;相城区&quot;, 320507);
		areaCode.put(&quot;常熟市&quot;, 320581);
		areaCode.put(&quot;张家港市&quot;, 320582);
		areaCode.put(&quot;昆山市&quot;, 320583);
		areaCode.put(&quot;吴江市&quot;, 320584);
		areaCode.put(&quot;太仓市&quot;, 320585);
		areaCode.put(&quot;南通市&quot;, 320600);
		areaCode.put(&quot;市辖区&quot;, 320601);
		areaCode.put(&quot;崇川区&quot;, 320602);
		areaCode.put(&quot;港闸区&quot;, 320611);
		areaCode.put(&quot;海安县&quot;, 320621);
		areaCode.put(&quot;如东县&quot;, 320623);
		areaCode.put(&quot;启东市&quot;, 320681);
		areaCode.put(&quot;如皋市&quot;, 320682);
		areaCode.put(&quot;海门市&quot;, 320684);
		areaCode.put(&quot;连云港市&quot;, 320700);
		areaCode.put(&quot;市辖区&quot;, 320701);
		areaCode.put(&quot;连云区&quot;, 320703);
		areaCode.put(&quot;新浦区&quot;, 320705);
		areaCode.put(&quot;海州区&quot;, 320706);
		areaCode.put(&quot;赣榆县&quot;, 320721);
		areaCode.put(&quot;东海县&quot;, 320722);
		areaCode.put(&quot;灌云县&quot;, 320723);
		areaCode.put(&quot;灌南县&quot;, 320724);
		areaCode.put(&quot;淮安市&quot;, 320800);
		areaCode.put(&quot;市辖区&quot;, 320801);
		areaCode.put(&quot;清河区&quot;, 320802);
		areaCode.put(&quot;楚州区&quot;, 320803);
		areaCode.put(&quot;淮阴区&quot;, 320804);
		areaCode.put(&quot;清浦区&quot;, 320811);
		areaCode.put(&quot;涟水县&quot;, 320826);
		areaCode.put(&quot;洪泽县&quot;, 320829);
		areaCode.put(&quot;盱眙县&quot;, 320830);
		areaCode.put(&quot;金湖县&quot;, 320831);
		areaCode.put(&quot;盐城市&quot;, 320900);
		areaCode.put(&quot;市辖区&quot;, 320901);
		areaCode.put(&quot;亭湖区&quot;, 320902);
		areaCode.put(&quot;盐都区&quot;, 320903);
		areaCode.put(&quot;响水县&quot;, 320921);
		areaCode.put(&quot;滨海县&quot;, 320922);
		areaCode.put(&quot;阜宁县&quot;, 320923);
		areaCode.put(&quot;射阳县&quot;, 320924);
		areaCode.put(&quot;建湖县&quot;, 320925);
		areaCode.put(&quot;东台市&quot;, 320981);
		areaCode.put(&quot;大丰市&quot;, 320982);
		areaCode.put(&quot;扬州市&quot;, 321000);
		areaCode.put(&quot;市辖区&quot;, 321001);
		areaCode.put(&quot;广陵区&quot;, 321002);
		areaCode.put(&quot;邗江区&quot;, 321003);
		areaCode.put(&quot;维扬区&quot;, 321011);
		areaCode.put(&quot;宝应县&quot;, 321023);
		areaCode.put(&quot;仪征市&quot;, 321081);
		areaCode.put(&quot;高邮市&quot;, 321084);
		areaCode.put(&quot;江都市&quot;, 321088);
		areaCode.put(&quot;镇江市&quot;, 321100);
		areaCode.put(&quot;市辖区&quot;, 321101);
		areaCode.put(&quot;京口区&quot;, 321102);
		areaCode.put(&quot;润州区&quot;, 321111);
		areaCode.put(&quot;丹徒区&quot;, 321112);
		areaCode.put(&quot;丹阳市&quot;, 321181);
		areaCode.put(&quot;扬中市&quot;, 321182);
		areaCode.put(&quot;句容市&quot;, 321183);
		areaCode.put(&quot;泰州市&quot;, 321200);
		areaCode.put(&quot;市辖区&quot;, 321201);
		areaCode.put(&quot;海陵区&quot;, 321202);
		areaCode.put(&quot;高港区&quot;, 321203);
		areaCode.put(&quot;兴化市&quot;, 321281);
		areaCode.put(&quot;靖江市&quot;, 321282);
		areaCode.put(&quot;泰兴市&quot;, 321283);
		areaCode.put(&quot;姜堰市&quot;, 321284);
		areaCode.put(&quot;宿迁市&quot;, 321300);
		areaCode.put(&quot;市辖区&quot;, 321301);
		areaCode.put(&quot;宿城区&quot;, 321302);
		areaCode.put(&quot;宿豫区&quot;, 321311);
		areaCode.put(&quot;沭阳县&quot;, 321322);
		areaCode.put(&quot;泗阳县&quot;, 321323);
		areaCode.put(&quot;泗洪县&quot;, 321324);
		areaCode.put(&quot;浙江省&quot;, 330000);
		areaCode.put(&quot;杭州市&quot;, 330100);
		areaCode.put(&quot;市辖区&quot;, 330101);
		areaCode.put(&quot;上城区&quot;, 330102);
		areaCode.put(&quot;下城区&quot;, 330103);
		areaCode.put(&quot;江干区&quot;, 330104);
		areaCode.put(&quot;拱墅区&quot;, 330105);
		areaCode.put(&quot;西湖区&quot;, 330106);
		areaCode.put(&quot;滨江区&quot;, 330108);
		areaCode.put(&quot;萧山区&quot;, 330109);
		areaCode.put(&quot;余杭区&quot;, 330110);
		areaCode.put(&quot;桐庐县&quot;, 330122);
		areaCode.put(&quot;淳安县&quot;, 330127);
		areaCode.put(&quot;建德市&quot;, 330182);
		areaCode.put(&quot;富阳市&quot;, 330183);
		areaCode.put(&quot;临安市&quot;, 330185);
		areaCode.put(&quot;宁波市&quot;, 330200);
		areaCode.put(&quot;市辖区&quot;, 330201);
		areaCode.put(&quot;海曙区&quot;, 330203);
		areaCode.put(&quot;江东区&quot;, 330204);
		areaCode.put(&quot;江北区&quot;, 330205);
		areaCode.put(&quot;北仑区&quot;, 330206);
		areaCode.put(&quot;镇海区&quot;, 330211);
		areaCode.put(&quot;鄞州区&quot;, 330212);
		areaCode.put(&quot;象山县&quot;, 330225);
		areaCode.put(&quot;宁海县&quot;, 330226);
		areaCode.put(&quot;余姚市&quot;, 330281);
		areaCode.put(&quot;慈溪市&quot;, 330282);
		areaCode.put(&quot;奉化市&quot;, 330283);
		areaCode.put(&quot;温州市&quot;, 330300);
		areaCode.put(&quot;市辖区&quot;, 330301);
		areaCode.put(&quot;鹿城区&quot;, 330302);
		areaCode.put(&quot;龙湾区&quot;, 330303);
		areaCode.put(&quot;瓯海区&quot;, 330304);
		areaCode.put(&quot;洞头县&quot;, 330322);
		areaCode.put(&quot;永嘉县&quot;, 330324);
		areaCode.put(&quot;平阳县&quot;, 330326);
		areaCode.put(&quot;苍南县&quot;, 330327);
		areaCode.put(&quot;文成县&quot;, 330328);
		areaCode.put(&quot;泰顺县&quot;, 330329);
		areaCode.put(&quot;瑞安市&quot;, 330381);
		areaCode.put(&quot;乐清市&quot;, 330382);
		areaCode.put(&quot;嘉兴市&quot;, 330400);
		areaCode.put(&quot;市辖区&quot;, 330401);
		areaCode.put(&quot;南湖区&quot;, 330402);
		areaCode.put(&quot;秀洲区&quot;, 330411);
		areaCode.put(&quot;嘉善县&quot;, 330421);
		areaCode.put(&quot;海盐县&quot;, 330424);
		areaCode.put(&quot;海宁市&quot;, 330481);
		areaCode.put(&quot;平湖市&quot;, 330482);
		areaCode.put(&quot;桐乡市&quot;, 330483);
		areaCode.put(&quot;湖州市&quot;, 330500);
		areaCode.put(&quot;市辖区&quot;, 330501);
		areaCode.put(&quot;吴兴区&quot;, 330502);
		areaCode.put(&quot;南浔区&quot;, 330503);
		areaCode.put(&quot;德清县&quot;, 330521);
		areaCode.put(&quot;长兴县&quot;, 330522);
		areaCode.put(&quot;安吉县&quot;, 330523);
		areaCode.put(&quot;绍兴市&quot;, 330600);
		areaCode.put(&quot;市辖区&quot;, 330601);
		areaCode.put(&quot;越城区&quot;, 330602);
		areaCode.put(&quot;绍兴县&quot;, 330621);
		areaCode.put(&quot;新昌县&quot;, 330624);
		areaCode.put(&quot;诸暨市&quot;, 330681);
		areaCode.put(&quot;上虞市&quot;, 330682);
		areaCode.put(&quot;嵊州市&quot;, 330683);
		areaCode.put(&quot;金华市&quot;, 330700);
		areaCode.put(&quot;市辖区&quot;, 330701);
		areaCode.put(&quot;婺城区&quot;, 330702);
		areaCode.put(&quot;金东区&quot;, 330703);
		areaCode.put(&quot;武义县&quot;, 330723);
		areaCode.put(&quot;浦江县&quot;, 330726);
		areaCode.put(&quot;磐安县&quot;, 330727);
		areaCode.put(&quot;兰溪市&quot;, 330781);
		areaCode.put(&quot;义乌市&quot;, 330782);
		areaCode.put(&quot;东阳市&quot;, 330783);
		areaCode.put(&quot;永康市&quot;, 330784);
		areaCode.put(&quot;衢州市&quot;, 330800);
		areaCode.put(&quot;市辖区&quot;, 330801);
		areaCode.put(&quot;柯城区&quot;, 330802);
		areaCode.put(&quot;衢江区&quot;, 330803);
		areaCode.put(&quot;常山县&quot;, 330822);
		areaCode.put(&quot;开化县&quot;, 330824);
		areaCode.put(&quot;龙游县&quot;, 330825);
		areaCode.put(&quot;江山市&quot;, 330881);
		areaCode.put(&quot;舟山市&quot;, 330900);
		areaCode.put(&quot;市辖区&quot;, 330901);
		areaCode.put(&quot;定海区&quot;, 330902);
		areaCode.put(&quot;普陀区&quot;, 330903);
		areaCode.put(&quot;岱山县&quot;, 330921);
		areaCode.put(&quot;嵊泗县&quot;, 330922);
		areaCode.put(&quot;台州市&quot;, 331000);
		areaCode.put(&quot;市辖区&quot;, 331001);
		areaCode.put(&quot;椒江区&quot;, 331002);
		areaCode.put(&quot;黄岩区&quot;, 331003);
		areaCode.put(&quot;路桥区&quot;, 331004);
		areaCode.put(&quot;玉环县&quot;, 331021);
		areaCode.put(&quot;三门县&quot;, 331022);
		areaCode.put(&quot;天台县&quot;, 331023);
		areaCode.put(&quot;仙居县&quot;, 331024);
		areaCode.put(&quot;温岭市&quot;, 331081);
		areaCode.put(&quot;临海市&quot;, 331082);
		areaCode.put(&quot;丽水市&quot;, 331100);
		areaCode.put(&quot;市辖区&quot;, 331101);
		areaCode.put(&quot;莲都区&quot;, 331102);
		areaCode.put(&quot;青田县&quot;, 331121);
		areaCode.put(&quot;缙云县&quot;, 331122);
		areaCode.put(&quot;遂昌县&quot;, 331123);
		areaCode.put(&quot;松阳县&quot;, 331124);
		areaCode.put(&quot;云和县&quot;, 331125);
		areaCode.put(&quot;庆元县&quot;, 331126);
		areaCode.put(&quot;景宁畲族自治县&quot;, 331127);
		areaCode.put(&quot;龙泉市&quot;, 331181);
		areaCode.put(&quot;安徽省&quot;, 340000);
		areaCode.put(&quot;合肥市&quot;, 340100);
		areaCode.put(&quot;市辖区&quot;, 340101);
		areaCode.put(&quot;瑶海区&quot;, 340102);
		areaCode.put(&quot;庐阳区&quot;, 340103);
		areaCode.put(&quot;蜀山区&quot;, 340104);
		areaCode.put(&quot;包河区&quot;, 340111);
		areaCode.put(&quot;长丰县&quot;, 340121);
		areaCode.put(&quot;肥东县&quot;, 340122);
		areaCode.put(&quot;肥西县&quot;, 340123);
		areaCode.put(&quot;芜湖市&quot;, 340200);
		areaCode.put(&quot;市辖区&quot;, 340201);
		areaCode.put(&quot;镜湖区&quot;, 340202);
		areaCode.put(&quot;弋江区&quot;, 340203);
		areaCode.put(&quot;鸠江区&quot;, 340207);
		areaCode.put(&quot;三山区&quot;, 340208);
		areaCode.put(&quot;芜湖县&quot;, 340221);
		areaCode.put(&quot;繁昌县&quot;, 340222);
		areaCode.put(&quot;南陵县&quot;, 340223);
		areaCode.put(&quot;蚌埠市&quot;, 340300);
		areaCode.put(&quot;市辖区&quot;, 340301);
		areaCode.put(&quot;龙子湖区&quot;, 340302);
		areaCode.put(&quot;蚌山区&quot;, 340303);
		areaCode.put(&quot;禹会区&quot;, 340304);
		areaCode.put(&quot;淮上区&quot;, 340311);
		areaCode.put(&quot;怀远县&quot;, 340321);
		areaCode.put(&quot;五河县&quot;, 340322);
		areaCode.put(&quot;固镇县&quot;, 340323);
		areaCode.put(&quot;淮南市&quot;, 340400);
		areaCode.put(&quot;市辖区&quot;, 340401);
		areaCode.put(&quot;大通区&quot;, 340402);
		areaCode.put(&quot;田家庵区&quot;, 340403);
		areaCode.put(&quot;谢家集区&quot;, 340404);
		areaCode.put(&quot;八公山区&quot;, 340405);
		areaCode.put(&quot;潘集区&quot;, 340406);
		areaCode.put(&quot;凤台县&quot;, 340421);
		areaCode.put(&quot;马鞍山市&quot;, 340500);
		areaCode.put(&quot;市辖区&quot;, 340501);
		areaCode.put(&quot;金家庄区&quot;, 340502);
		areaCode.put(&quot;花山区&quot;, 340503);
		areaCode.put(&quot;雨山区&quot;, 340504);
		areaCode.put(&quot;当涂县&quot;, 340521);
		areaCode.put(&quot;淮北市&quot;, 340600);
		areaCode.put(&quot;市辖区&quot;, 340601);
		areaCode.put(&quot;杜集区&quot;, 340602);
		areaCode.put(&quot;相山区&quot;, 340603);
		areaCode.put(&quot;烈山区&quot;, 340604);
		areaCode.put(&quot;濉溪县&quot;, 340621);
		areaCode.put(&quot;铜陵市&quot;, 340700);
		areaCode.put(&quot;市辖区&quot;, 340701);
		areaCode.put(&quot;铜官山区&quot;, 340702);
		areaCode.put(&quot;狮子山区&quot;, 340703);
		areaCode.put(&quot;郊　区&quot;, 340711);
		areaCode.put(&quot;铜陵县&quot;, 340721);
		areaCode.put(&quot;安庆市&quot;, 340800);
		areaCode.put(&quot;市辖区&quot;, 340801);
		areaCode.put(&quot;迎江区&quot;, 340802);
		areaCode.put(&quot;大观区&quot;, 340803);
		areaCode.put(&quot;宜秀区&quot;, 340811);
		areaCode.put(&quot;怀宁县&quot;, 340822);
		areaCode.put(&quot;枞阳县&quot;, 340823);
		areaCode.put(&quot;潜山县&quot;, 340824);
		areaCode.put(&quot;太湖县&quot;, 340825);
		areaCode.put(&quot;宿松县&quot;, 340826);
		areaCode.put(&quot;望江县&quot;, 340827);
		areaCode.put(&quot;岳西县&quot;, 340828);
		areaCode.put(&quot;桐城市&quot;, 340881);
		areaCode.put(&quot;黄山市&quot;, 341000);
		areaCode.put(&quot;市辖区&quot;, 341001);
		areaCode.put(&quot;屯溪区&quot;, 341002);
		areaCode.put(&quot;黄山区&quot;, 341003);
		areaCode.put(&quot;徽州区&quot;, 341004);
		areaCode.put(&quot;歙　县&quot;, 341021);
		areaCode.put(&quot;休宁县&quot;, 341022);
		areaCode.put(&quot;黟　县&quot;, 341023);
		areaCode.put(&quot;祁门县&quot;, 341024);
		areaCode.put(&quot;滁州市&quot;, 341100);
		areaCode.put(&quot;市辖区&quot;, 341101);
		areaCode.put(&quot;琅琊区&quot;, 341102);
		areaCode.put(&quot;南谯区&quot;, 341103);
		areaCode.put(&quot;来安县&quot;, 341122);
		areaCode.put(&quot;全椒县&quot;, 341124);
		areaCode.put(&quot;定远县&quot;, 341125);
		areaCode.put(&quot;凤阳县&quot;, 341126);
		areaCode.put(&quot;天长市&quot;, 341181);
		areaCode.put(&quot;明光市&quot;, 341182);
		areaCode.put(&quot;阜阳市&quot;, 341200);
		areaCode.put(&quot;市辖区&quot;, 341201);
		areaCode.put(&quot;颍州区&quot;, 341202);
		areaCode.put(&quot;颍东区&quot;, 341203);
		areaCode.put(&quot;颍泉区&quot;, 341204);
		areaCode.put(&quot;临泉县&quot;, 341221);
		areaCode.put(&quot;太和县&quot;, 341222);
		areaCode.put(&quot;阜南县&quot;, 341225);
		areaCode.put(&quot;颍上县&quot;, 341226);
		areaCode.put(&quot;界首市&quot;, 341282);
		areaCode.put(&quot;宿州市&quot;, 341300);
		areaCode.put(&quot;市辖区&quot;, 341301);
		areaCode.put(&quot;埇桥区&quot;, 341302);
		areaCode.put(&quot;砀山县&quot;, 341321);
		areaCode.put(&quot;萧　县&quot;, 341322);
		areaCode.put(&quot;灵璧县&quot;, 341323);
		areaCode.put(&quot;泗　县&quot;, 341324);
		areaCode.put(&quot;巢湖市&quot;, 341400);
		areaCode.put(&quot;市辖区&quot;, 341401);
		areaCode.put(&quot;居巢区&quot;, 341402);
		areaCode.put(&quot;庐江县&quot;, 341421);
		areaCode.put(&quot;无为县&quot;, 341422);
		areaCode.put(&quot;含山县&quot;, 341423);
		areaCode.put(&quot;和　县&quot;, 341424);
		areaCode.put(&quot;六安市&quot;, 341500);
		areaCode.put(&quot;市辖区&quot;, 341501);
		areaCode.put(&quot;金安区&quot;, 341502);
		areaCode.put(&quot;裕安区&quot;, 341503);
		areaCode.put(&quot;寿　县&quot;, 341521);
		areaCode.put(&quot;霍邱县&quot;, 341522);
		areaCode.put(&quot;舒城县&quot;, 341523);
		areaCode.put(&quot;金寨县&quot;, 341524);
		areaCode.put(&quot;霍山县&quot;, 341525);
		areaCode.put(&quot;亳州市&quot;, 341600);
		areaCode.put(&quot;市辖区&quot;, 341601);
		areaCode.put(&quot;谯城区&quot;, 341602);
		areaCode.put(&quot;涡阳县&quot;, 341621);
		areaCode.put(&quot;蒙城县&quot;, 341622);
		areaCode.put(&quot;利辛县&quot;, 341623);
		areaCode.put(&quot;池州市&quot;, 341700);
		areaCode.put(&quot;市辖区&quot;, 341701);
		areaCode.put(&quot;贵池区&quot;, 341702);
		areaCode.put(&quot;东至县&quot;, 341721);
		areaCode.put(&quot;石台县&quot;, 341722);
		areaCode.put(&quot;青阳县&quot;, 341723);
		areaCode.put(&quot;宣城市&quot;, 341800);
		areaCode.put(&quot;市辖区&quot;, 341801);
		areaCode.put(&quot;宣州区&quot;, 341802);
		areaCode.put(&quot;郎溪县&quot;, 341821);
		areaCode.put(&quot;广德县&quot;, 341822);
		areaCode.put(&quot;泾　县&quot;, 341823);
		areaCode.put(&quot;绩溪县&quot;, 341824);
		areaCode.put(&quot;旌德县&quot;, 341825);
		areaCode.put(&quot;宁国市&quot;, 341881);
		areaCode.put(&quot;福建省&quot;, 350000);
		areaCode.put(&quot;福州市&quot;, 350100);
		areaCode.put(&quot;市辖区&quot;, 350101);
		areaCode.put(&quot;鼓楼区&quot;, 350102);
		areaCode.put(&quot;台江区&quot;, 350103);
		areaCode.put(&quot;仓山区&quot;, 350104);
		areaCode.put(&quot;马尾区&quot;, 350105);
		areaCode.put(&quot;晋安区&quot;, 350111);
		areaCode.put(&quot;闽侯县&quot;, 350121);
		areaCode.put(&quot;连江县&quot;, 350122);
		areaCode.put(&quot;罗源县&quot;, 350123);
		areaCode.put(&quot;闽清县&quot;, 350124);
		areaCode.put(&quot;永泰县&quot;, 350125);
		areaCode.put(&quot;平潭县&quot;, 350128);
		areaCode.put(&quot;福清市&quot;, 350181);
		areaCode.put(&quot;长乐市&quot;, 350182);
		areaCode.put(&quot;厦门市&quot;, 350200);
		areaCode.put(&quot;市辖区&quot;, 350201);
		areaCode.put(&quot;思明区&quot;, 350203);
		areaCode.put(&quot;海沧区&quot;, 350205);
		areaCode.put(&quot;湖里区&quot;, 350206);
		areaCode.put(&quot;集美区&quot;, 350211);
		areaCode.put(&quot;同安区&quot;, 350212);
		areaCode.put(&quot;翔安区&quot;, 350213);
		areaCode.put(&quot;莆田市&quot;, 350300);
		areaCode.put(&quot;市辖区&quot;, 350301);
		areaCode.put(&quot;城厢区&quot;, 350302);
		areaCode.put(&quot;涵江区&quot;, 350303);
		areaCode.put(&quot;荔城区&quot;, 350304);
		areaCode.put(&quot;秀屿区&quot;, 350305);
		areaCode.put(&quot;仙游县&quot;, 350322);
		areaCode.put(&quot;三明市&quot;, 350400);
		areaCode.put(&quot;市辖区&quot;, 350401);
		areaCode.put(&quot;梅列区&quot;, 350402);
		areaCode.put(&quot;三元区&quot;, 350403);
		areaCode.put(&quot;明溪县&quot;, 350421);
		areaCode.put(&quot;清流县&quot;, 350423);
		areaCode.put(&quot;宁化县&quot;, 350424);
		areaCode.put(&quot;大田县&quot;, 350425);
		areaCode.put(&quot;尤溪县&quot;, 350426);
		areaCode.put(&quot;沙　县&quot;, 350427);
		areaCode.put(&quot;将乐县&quot;, 350428);
		areaCode.put(&quot;泰宁县&quot;, 350429);
		areaCode.put(&quot;建宁县&quot;, 350430);
		areaCode.put(&quot;永安市&quot;, 350481);
		areaCode.put(&quot;泉州市&quot;, 350500);
		areaCode.put(&quot;市辖区&quot;, 350501);
		areaCode.put(&quot;鲤城区&quot;, 350502);
		areaCode.put(&quot;丰泽区&quot;, 350503);
		areaCode.put(&quot;洛江区&quot;, 350504);
		areaCode.put(&quot;泉港区&quot;, 350505);
		areaCode.put(&quot;惠安县&quot;, 350521);
		areaCode.put(&quot;安溪县&quot;, 350524);
		areaCode.put(&quot;永春县&quot;, 350525);
		areaCode.put(&quot;德化县&quot;, 350526);
		areaCode.put(&quot;金门县&quot;, 350527);
		areaCode.put(&quot;石狮市&quot;, 350581);
		areaCode.put(&quot;晋江市&quot;, 350582);
		areaCode.put(&quot;南安市&quot;, 350583);
		areaCode.put(&quot;漳州市&quot;, 350600);
		areaCode.put(&quot;市辖区&quot;, 350601);
		areaCode.put(&quot;芗城区&quot;, 350602);
		areaCode.put(&quot;龙文区&quot;, 350603);
		areaCode.put(&quot;云霄县&quot;, 350622);
		areaCode.put(&quot;漳浦县&quot;, 350623);
		areaCode.put(&quot;诏安县&quot;, 350624);
		areaCode.put(&quot;长泰县&quot;, 350625);
		areaCode.put(&quot;东山县&quot;, 350626);
		areaCode.put(&quot;南靖县&quot;, 350627);
		areaCode.put(&quot;平和县&quot;, 350628);
		areaCode.put(&quot;华安县&quot;, 350629);
		areaCode.put(&quot;龙海市&quot;, 350681);
		areaCode.put(&quot;南平市&quot;, 350700);
		areaCode.put(&quot;市辖区&quot;, 350701);
		areaCode.put(&quot;延平区&quot;, 350702);
		areaCode.put(&quot;顺昌县&quot;, 350721);
		areaCode.put(&quot;浦城县&quot;, 350722);
		areaCode.put(&quot;光泽县&quot;, 350723);
		areaCode.put(&quot;松溪县&quot;, 350724);
		areaCode.put(&quot;政和县&quot;, 350725);
		areaCode.put(&quot;邵武市&quot;, 350781);
		areaCode.put(&quot;武夷山市&quot;, 350782);
		areaCode.put(&quot;建瓯市&quot;, 350783);
		areaCode.put(&quot;建阳市&quot;, 350784);
		areaCode.put(&quot;龙岩市&quot;, 350800);
		areaCode.put(&quot;市辖区&quot;, 350801);
		areaCode.put(&quot;新罗区&quot;, 350802);
		areaCode.put(&quot;长汀县&quot;, 350821);
		areaCode.put(&quot;永定县&quot;, 350822);
		areaCode.put(&quot;上杭县&quot;, 350823);
		areaCode.put(&quot;武平县&quot;, 350824);
		areaCode.put(&quot;连城县&quot;, 350825);
		areaCode.put(&quot;漳平市&quot;, 350881);
		areaCode.put(&quot;宁德市&quot;, 350900);
		areaCode.put(&quot;市辖区&quot;, 350901);
		areaCode.put(&quot;蕉城区&quot;, 350902);
		areaCode.put(&quot;霞浦县&quot;, 350921);
		areaCode.put(&quot;古田县&quot;, 350922);
		areaCode.put(&quot;屏南县&quot;, 350923);
		areaCode.put(&quot;寿宁县&quot;, 350924);
		areaCode.put(&quot;周宁县&quot;, 350925);
		areaCode.put(&quot;柘荣县&quot;, 350926);
		areaCode.put(&quot;福安市&quot;, 350981);
		areaCode.put(&quot;福鼎市&quot;, 350982);
		areaCode.put(&quot;江西省&quot;, 360000);
		areaCode.put(&quot;南昌市&quot;, 360100);
		areaCode.put(&quot;市辖区&quot;, 360101);
		areaCode.put(&quot;东湖区&quot;, 360102);
		areaCode.put(&quot;西湖区&quot;, 360103);
		areaCode.put(&quot;青云谱区&quot;, 360104);
		areaCode.put(&quot;湾里区&quot;, 360105);
		areaCode.put(&quot;青山湖区&quot;, 360111);
		areaCode.put(&quot;南昌县&quot;, 360121);
		areaCode.put(&quot;新建县&quot;, 360122);
		areaCode.put(&quot;安义县&quot;, 360123);
		areaCode.put(&quot;进贤县&quot;, 360124);
		areaCode.put(&quot;景德镇市&quot;, 360200);
		areaCode.put(&quot;市辖区&quot;, 360201);
		areaCode.put(&quot;昌江区&quot;, 360202);
		areaCode.put(&quot;珠山区&quot;, 360203);
		areaCode.put(&quot;浮梁县&quot;, 360222);
		areaCode.put(&quot;乐平市&quot;, 360281);
		areaCode.put(&quot;萍乡市&quot;, 360300);
		areaCode.put(&quot;市辖区&quot;, 360301);
		areaCode.put(&quot;安源区&quot;, 360302);
		areaCode.put(&quot;湘东区&quot;, 360313);
		areaCode.put(&quot;莲花县&quot;, 360321);
		areaCode.put(&quot;上栗县&quot;, 360322);
		areaCode.put(&quot;芦溪县&quot;, 360323);
		areaCode.put(&quot;九江市&quot;, 360400);
		areaCode.put(&quot;市辖区&quot;, 360401);
		areaCode.put(&quot;庐山区&quot;, 360402);
		areaCode.put(&quot;浔阳区&quot;, 360403);
		areaCode.put(&quot;九江县&quot;, 360421);
		areaCode.put(&quot;武宁县&quot;, 360423);
		areaCode.put(&quot;修水县&quot;, 360424);
		areaCode.put(&quot;永修县&quot;, 360425);
		areaCode.put(&quot;德安县&quot;, 360426);
		areaCode.put(&quot;星子县&quot;, 360427);
		areaCode.put(&quot;都昌县&quot;, 360428);
		areaCode.put(&quot;湖口县&quot;, 360429);
		areaCode.put(&quot;彭泽县&quot;, 360430);
		areaCode.put(&quot;瑞昌市&quot;, 360481);
		areaCode.put(&quot;新余市&quot;, 360500);
		areaCode.put(&quot;市辖区&quot;, 360501);
		areaCode.put(&quot;渝水区&quot;, 360502);
		areaCode.put(&quot;分宜县&quot;, 360521);
		areaCode.put(&quot;鹰潭市&quot;, 360600);
		areaCode.put(&quot;市辖区&quot;, 360601);
		areaCode.put(&quot;月湖区&quot;, 360602);
		areaCode.put(&quot;余江县&quot;, 360622);
		areaCode.put(&quot;贵溪市&quot;, 360681);
		areaCode.put(&quot;赣州市&quot;, 360700);
		areaCode.put(&quot;市辖区&quot;, 360701);
		areaCode.put(&quot;章贡区&quot;, 360702);
		areaCode.put(&quot;赣　县&quot;, 360721);
		areaCode.put(&quot;信丰县&quot;, 360722);
		areaCode.put(&quot;大余县&quot;, 360723);
		areaCode.put(&quot;上犹县&quot;, 360724);
		areaCode.put(&quot;崇义县&quot;, 360725);
		areaCode.put(&quot;安远县&quot;, 360726);
		areaCode.put(&quot;龙南县&quot;, 360727);
		areaCode.put(&quot;定南县&quot;, 360728);
		areaCode.put(&quot;全南县&quot;, 360729);
		areaCode.put(&quot;宁都县&quot;, 360730);
		areaCode.put(&quot;于都县&quot;, 360731);
		areaCode.put(&quot;兴国县&quot;, 360732);
		areaCode.put(&quot;会昌县&quot;, 360733);
		areaCode.put(&quot;寻乌县&quot;, 360734);
		areaCode.put(&quot;石城县&quot;, 360735);
		areaCode.put(&quot;瑞金市&quot;, 360781);
		areaCode.put(&quot;南康市&quot;, 360782);
		areaCode.put(&quot;吉安市&quot;, 360800);
		areaCode.put(&quot;市辖区&quot;, 360801);
		areaCode.put(&quot;吉州区&quot;, 360802);
		areaCode.put(&quot;青原区&quot;, 360803);
		areaCode.put(&quot;吉安县&quot;, 360821);
		areaCode.put(&quot;吉水县&quot;, 360822);
		areaCode.put(&quot;峡江县&quot;, 360823);
		areaCode.put(&quot;新干县&quot;, 360824);
		areaCode.put(&quot;永丰县&quot;, 360825);
		areaCode.put(&quot;泰和县&quot;, 360826);
		areaCode.put(&quot;遂川县&quot;, 360827);
		areaCode.put(&quot;万安县&quot;, 360828);
		areaCode.put(&quot;安福县&quot;, 360829);
		areaCode.put(&quot;永新县&quot;, 360830);
		areaCode.put(&quot;井冈山市&quot;, 360881);
		areaCode.put(&quot;宜春市&quot;, 360900);
		areaCode.put(&quot;市辖区&quot;, 360901);
		areaCode.put(&quot;袁州区&quot;, 360902);
		areaCode.put(&quot;奉新县&quot;, 360921);
		areaCode.put(&quot;万载县&quot;, 360922);
		areaCode.put(&quot;上高县&quot;, 360923);
		areaCode.put(&quot;宜丰县&quot;, 360924);
		areaCode.put(&quot;靖安县&quot;, 360925);
		areaCode.put(&quot;铜鼓县&quot;, 360926);
		areaCode.put(&quot;丰城市&quot;, 360981);
		areaCode.put(&quot;樟树市&quot;, 360982);
		areaCode.put(&quot;高安市&quot;, 360983);
		areaCode.put(&quot;抚州市&quot;, 361000);
		areaCode.put(&quot;市辖区&quot;, 361001);
		areaCode.put(&quot;临川区&quot;, 361002);
		areaCode.put(&quot;南城县&quot;, 361021);
		areaCode.put(&quot;黎川县&quot;, 361022);
		areaCode.put(&quot;南丰县&quot;, 361023);
		areaCode.put(&quot;崇仁县&quot;, 361024);
		areaCode.put(&quot;乐安县&quot;, 361025);
		areaCode.put(&quot;宜黄县&quot;, 361026);
		areaCode.put(&quot;金溪县&quot;, 361027);
		areaCode.put(&quot;资溪县&quot;, 361028);
		areaCode.put(&quot;东乡县&quot;, 361029);
		areaCode.put(&quot;广昌县&quot;, 361030);
		areaCode.put(&quot;上饶市&quot;, 361100);
		areaCode.put(&quot;市辖区&quot;, 361101);
		areaCode.put(&quot;信州区&quot;, 361102);
		areaCode.put(&quot;上饶县&quot;, 361121);
		areaCode.put(&quot;广丰县&quot;, 361122);
		areaCode.put(&quot;玉山县&quot;, 361123);
		areaCode.put(&quot;铅山县&quot;, 361124);
		areaCode.put(&quot;横峰县&quot;, 361125);
		areaCode.put(&quot;弋阳县&quot;, 361126);
		areaCode.put(&quot;余干县&quot;, 361127);
		areaCode.put(&quot;鄱阳县&quot;, 361128);
		areaCode.put(&quot;万年县&quot;, 361129);
		areaCode.put(&quot;婺源县&quot;, 361130);
		areaCode.put(&quot;德兴市&quot;, 361181);
		areaCode.put(&quot;山东省&quot;, 370000);
		areaCode.put(&quot;济南市&quot;, 370100);
		areaCode.put(&quot;市辖区&quot;, 370101);
		areaCode.put(&quot;历下区&quot;, 370102);
		areaCode.put(&quot;市中区&quot;, 370103);
		areaCode.put(&quot;槐荫区&quot;, 370104);
		areaCode.put(&quot;天桥区&quot;, 370105);
		areaCode.put(&quot;历城区&quot;, 370112);
		areaCode.put(&quot;长清区&quot;, 370113);
		areaCode.put(&quot;平阴县&quot;, 370124);
		areaCode.put(&quot;济阳县&quot;, 370125);
		areaCode.put(&quot;商河县&quot;, 370126);
		areaCode.put(&quot;章丘市&quot;, 370181);
		areaCode.put(&quot;青岛市&quot;, 370200);
		areaCode.put(&quot;市辖区&quot;, 370201);
		areaCode.put(&quot;市南区&quot;, 370202);
		areaCode.put(&quot;市北区&quot;, 370203);
		areaCode.put(&quot;四方区&quot;, 370205);
		areaCode.put(&quot;黄岛区&quot;, 370211);
		areaCode.put(&quot;崂山区&quot;, 370212);
		areaCode.put(&quot;李沧区&quot;, 370213);
		areaCode.put(&quot;城阳区&quot;, 370214);
		areaCode.put(&quot;胶州市&quot;, 370281);
		areaCode.put(&quot;即墨市&quot;, 370282);
		areaCode.put(&quot;平度市&quot;, 370283);
		areaCode.put(&quot;胶南市&quot;, 370284);
		areaCode.put(&quot;莱西市&quot;, 370285);
		areaCode.put(&quot;淄博市&quot;, 370300);
		areaCode.put(&quot;市辖区&quot;, 370301);
		areaCode.put(&quot;淄川区&quot;, 370302);
		areaCode.put(&quot;张店区&quot;, 370303);
		areaCode.put(&quot;博山区&quot;, 370304);
		areaCode.put(&quot;临淄区&quot;, 370305);
		areaCode.put(&quot;周村区&quot;, 370306);
		areaCode.put(&quot;桓台县&quot;, 370321);
		areaCode.put(&quot;高青县&quot;, 370322);
		areaCode.put(&quot;沂源县&quot;, 370323);
		areaCode.put(&quot;枣庄市&quot;, 370400);
		areaCode.put(&quot;市辖区&quot;, 370401);
		areaCode.put(&quot;市中区&quot;, 370402);
		areaCode.put(&quot;薛城区&quot;, 370403);
		areaCode.put(&quot;峄城区&quot;, 370404);
		areaCode.put(&quot;台儿庄区&quot;, 370405);
		areaCode.put(&quot;山亭区&quot;, 370406);
		areaCode.put(&quot;滕州市&quot;, 370481);
		areaCode.put(&quot;东营市&quot;, 370500);
		areaCode.put(&quot;市辖区&quot;, 370501);
		areaCode.put(&quot;东营区&quot;, 370502);
		areaCode.put(&quot;河口区&quot;, 370503);
		areaCode.put(&quot;垦利县&quot;, 370521);
		areaCode.put(&quot;利津县&quot;, 370522);
		areaCode.put(&quot;广饶县&quot;, 370523);
		areaCode.put(&quot;烟台市&quot;, 370600);
		areaCode.put(&quot;市辖区&quot;, 370601);
		areaCode.put(&quot;芝罘区&quot;, 370602);
		areaCode.put(&quot;福山区&quot;, 370611);
		areaCode.put(&quot;牟平区&quot;, 370612);
		areaCode.put(&quot;莱山区&quot;, 370613);
		areaCode.put(&quot;长岛县&quot;, 370634);
		areaCode.put(&quot;龙口市&quot;, 370681);
		areaCode.put(&quot;莱阳市&quot;, 370682);
		areaCode.put(&quot;莱州市&quot;, 370683);
		areaCode.put(&quot;蓬莱市&quot;, 370684);
		areaCode.put(&quot;招远市&quot;, 370685);
		areaCode.put(&quot;栖霞市&quot;, 370686);
		areaCode.put(&quot;海阳市&quot;, 370687);
		areaCode.put(&quot;潍坊市&quot;, 370700);
		areaCode.put(&quot;市辖区&quot;, 370701);
		areaCode.put(&quot;潍城区&quot;, 370702);
		areaCode.put(&quot;寒亭区&quot;, 370703);
		areaCode.put(&quot;坊子区&quot;, 370704);
		areaCode.put(&quot;奎文区&quot;, 370705);
		areaCode.put(&quot;临朐县&quot;, 370724);
		areaCode.put(&quot;昌乐县&quot;, 370725);
		areaCode.put(&quot;青州市&quot;, 370781);
		areaCode.put(&quot;诸城市&quot;, 370782);
		areaCode.put(&quot;寿光市&quot;, 370783);
		areaCode.put(&quot;安丘市&quot;, 370784);
		areaCode.put(&quot;高密市&quot;, 370785);
		areaCode.put(&quot;昌邑市&quot;, 370786);
		areaCode.put(&quot;济宁市&quot;, 370800);
		areaCode.put(&quot;市辖区&quot;, 370801);
		areaCode.put(&quot;市中区&quot;, 370802);
		areaCode.put(&quot;任城区&quot;, 370811);
		areaCode.put(&quot;微山县&quot;, 370826);
		areaCode.put(&quot;鱼台县&quot;, 370827);
		areaCode.put(&quot;金乡县&quot;, 370828);
		areaCode.put(&quot;嘉祥县&quot;, 370829);
		areaCode.put(&quot;汶上县&quot;, 370830);
		areaCode.put(&quot;泗水县&quot;, 370831);
		areaCode.put(&quot;梁山县&quot;, 370832);
		areaCode.put(&quot;曲阜市&quot;, 370881);
		areaCode.put(&quot;兖州市&quot;, 370882);
		areaCode.put(&quot;邹城市&quot;, 370883);
		areaCode.put(&quot;泰安市&quot;, 370900);
		areaCode.put(&quot;市辖区&quot;, 370901);
		areaCode.put(&quot;泰山区&quot;, 370902);
		areaCode.put(&quot;岱岳区&quot;, 370911);
		areaCode.put(&quot;宁阳县&quot;, 370921);
		areaCode.put(&quot;东平县&quot;, 370923);
		areaCode.put(&quot;新泰市&quot;, 370982);
		areaCode.put(&quot;肥城市&quot;, 370983);
		areaCode.put(&quot;威海市&quot;, 371000);
		areaCode.put(&quot;市辖区&quot;, 371001);
		areaCode.put(&quot;环翠区&quot;, 371002);
		areaCode.put(&quot;文登市&quot;, 371081);
		areaCode.put(&quot;荣成市&quot;, 371082);
		areaCode.put(&quot;乳山市&quot;, 371083);
		areaCode.put(&quot;日照市&quot;, 371100);
		areaCode.put(&quot;市辖区&quot;, 371101);
		areaCode.put(&quot;东港区&quot;, 371102);
		areaCode.put(&quot;岚山区&quot;, 371103);
		areaCode.put(&quot;五莲县&quot;, 371121);
		areaCode.put(&quot;莒　县&quot;, 371122);
		areaCode.put(&quot;莱芜市&quot;, 371200);
		areaCode.put(&quot;市辖区&quot;, 371201);
		areaCode.put(&quot;莱城区&quot;, 371202);
		areaCode.put(&quot;钢城区&quot;, 371203);
		areaCode.put(&quot;临沂市&quot;, 371300);
		areaCode.put(&quot;市辖区&quot;, 371301);
		areaCode.put(&quot;兰山区&quot;, 371302);
		areaCode.put(&quot;罗庄区&quot;, 371311);
		areaCode.put(&quot;河东区&quot;, 371312);
		areaCode.put(&quot;沂南县&quot;, 371321);
		areaCode.put(&quot;郯城县&quot;, 371322);
		areaCode.put(&quot;沂水县&quot;, 371323);
		areaCode.put(&quot;苍山县&quot;, 371324);
		areaCode.put(&quot;费　县&quot;, 371325);
		areaCode.put(&quot;平邑县&quot;, 371326);
		areaCode.put(&quot;莒南县&quot;, 371327);
		areaCode.put(&quot;蒙阴县&quot;, 371328);
		areaCode.put(&quot;临沭县&quot;, 371329);
		areaCode.put(&quot;德州市&quot;, 371400);
		areaCode.put(&quot;市辖区&quot;, 371401);
		areaCode.put(&quot;德城区&quot;, 371402);
		areaCode.put(&quot;陵　县&quot;, 371421);
		areaCode.put(&quot;宁津县&quot;, 371422);
		areaCode.put(&quot;庆云县&quot;, 371423);
		areaCode.put(&quot;临邑县&quot;, 371424);
		areaCode.put(&quot;齐河县&quot;, 371425);
		areaCode.put(&quot;平原县&quot;, 371426);
		areaCode.put(&quot;夏津县&quot;, 371427);
		areaCode.put(&quot;武城县&quot;, 371428);
		areaCode.put(&quot;乐陵市&quot;, 371481);
		areaCode.put(&quot;禹城市&quot;, 371482);
		areaCode.put(&quot;聊城市&quot;, 371500);
		areaCode.put(&quot;市辖区&quot;, 371501);
		areaCode.put(&quot;东昌府区&quot;, 371502);
		areaCode.put(&quot;阳谷县&quot;, 371521);
		areaCode.put(&quot;莘　县&quot;, 371522);
		areaCode.put(&quot;茌平县&quot;, 371523);
		areaCode.put(&quot;东阿县&quot;, 371524);
		areaCode.put(&quot;冠　县&quot;, 371525);
		areaCode.put(&quot;高唐县&quot;, 371526);
		areaCode.put(&quot;临清市&quot;, 371581);
		areaCode.put(&quot;滨州市&quot;, 371600);
		areaCode.put(&quot;市辖区&quot;, 371601);
		areaCode.put(&quot;滨城区&quot;, 371602);
		areaCode.put(&quot;惠民县&quot;, 371621);
		areaCode.put(&quot;阳信县&quot;, 371622);
		areaCode.put(&quot;无棣县&quot;, 371623);
		areaCode.put(&quot;沾化县&quot;, 371624);
		areaCode.put(&quot;博兴县&quot;, 371625);
		areaCode.put(&quot;邹平县&quot;, 371626);
		areaCode.put(&quot;菏泽市&quot;, 371700);
		areaCode.put(&quot;市辖区&quot;, 371701);
		areaCode.put(&quot;牡丹区&quot;, 371702);
		areaCode.put(&quot;曹　县&quot;, 371721);
		areaCode.put(&quot;单　县&quot;, 371722);
		areaCode.put(&quot;成武县&quot;, 371723);
		areaCode.put(&quot;巨野县&quot;, 371724);
		areaCode.put(&quot;郓城县&quot;, 371725);
		areaCode.put(&quot;鄄城县&quot;, 371726);
		areaCode.put(&quot;定陶县&quot;, 371727);
		areaCode.put(&quot;东明县&quot;, 371728);
		areaCode.put(&quot;河南省&quot;, 410000);
		areaCode.put(&quot;郑州市&quot;, 410100);
		areaCode.put(&quot;市辖区&quot;, 410101);
		areaCode.put(&quot;中原区&quot;, 410102);
		areaCode.put(&quot;二七区&quot;, 410103);
		areaCode.put(&quot;管城回族区&quot;, 410104);
		areaCode.put(&quot;金水区&quot;, 410105);
		areaCode.put(&quot;上街区&quot;, 410106);
		areaCode.put(&quot;惠济区&quot;, 410108);
		areaCode.put(&quot;中牟县&quot;, 410122);
		areaCode.put(&quot;巩义市&quot;, 410181);
		areaCode.put(&quot;荥阳市&quot;, 410182);
		areaCode.put(&quot;新密市&quot;, 410183);
		areaCode.put(&quot;新郑市&quot;, 410184);
		areaCode.put(&quot;登封市&quot;, 410185);
		areaCode.put(&quot;开封市&quot;, 410200);
		areaCode.put(&quot;市辖区&quot;, 410201);
		areaCode.put(&quot;龙亭区&quot;, 410202);
		areaCode.put(&quot;顺河回族区&quot;, 410203);
		areaCode.put(&quot;鼓楼区&quot;, 410204);
		areaCode.put(&quot;禹王台区&quot;, 410205);
		areaCode.put(&quot;金明区&quot;, 410211);
		areaCode.put(&quot;杞　县&quot;, 410221);
		areaCode.put(&quot;通许县&quot;, 410222);
		areaCode.put(&quot;尉氏县&quot;, 410223);
		areaCode.put(&quot;开封县&quot;, 410224);
		areaCode.put(&quot;兰考县&quot;, 410225);
		areaCode.put(&quot;洛阳市&quot;, 410300);
		areaCode.put(&quot;市辖区&quot;, 410301);
		areaCode.put(&quot;老城区&quot;, 410302);
		areaCode.put(&quot;西工区&quot;, 410303);
		areaCode.put(&quot;瀍河回族区&quot;, 410304);
		areaCode.put(&quot;涧西区&quot;, 410305);
		areaCode.put(&quot;吉利区&quot;, 410306);
		areaCode.put(&quot;洛龙区&quot;, 410311);
		areaCode.put(&quot;孟津县&quot;, 410322);
		areaCode.put(&quot;新安县&quot;, 410323);
		areaCode.put(&quot;栾川县&quot;, 410324);
		areaCode.put(&quot;嵩　县&quot;, 410325);
		areaCode.put(&quot;汝阳县&quot;, 410326);
		areaCode.put(&quot;宜阳县&quot;, 410327);
		areaCode.put(&quot;洛宁县&quot;, 410328);
		areaCode.put(&quot;伊川县&quot;, 410329);
		areaCode.put(&quot;偃师市&quot;, 410381);
		areaCode.put(&quot;平顶山市&quot;, 410400);
		areaCode.put(&quot;市辖区&quot;, 410401);
		areaCode.put(&quot;新华区&quot;, 410402);
		areaCode.put(&quot;卫东区&quot;, 410403);
		areaCode.put(&quot;石龙区&quot;, 410404);
		areaCode.put(&quot;湛河区&quot;, 410411);
		areaCode.put(&quot;宝丰县&quot;, 410421);
		areaCode.put(&quot;叶　县&quot;, 410422);
		areaCode.put(&quot;鲁山县&quot;, 410423);
		areaCode.put(&quot;郏　县&quot;, 410425);
		areaCode.put(&quot;舞钢市&quot;, 410481);
		areaCode.put(&quot;汝州市&quot;, 410482);
		areaCode.put(&quot;安阳市&quot;, 410500);
		areaCode.put(&quot;市辖区&quot;, 410501);
		areaCode.put(&quot;文峰区&quot;, 410502);
		areaCode.put(&quot;北关区&quot;, 410503);
		areaCode.put(&quot;殷都区&quot;, 410505);
		areaCode.put(&quot;龙安区&quot;, 410506);
		areaCode.put(&quot;安阳县&quot;, 410522);
		areaCode.put(&quot;汤阴县&quot;, 410523);
		areaCode.put(&quot;滑　县&quot;, 410526);
		areaCode.put(&quot;内黄县&quot;, 410527);
		areaCode.put(&quot;林州市&quot;, 410581);
		areaCode.put(&quot;鹤壁市&quot;, 410600);
		areaCode.put(&quot;市辖区&quot;, 410601);
		areaCode.put(&quot;鹤山区&quot;, 410602);
		areaCode.put(&quot;山城区&quot;, 410603);
		areaCode.put(&quot;淇滨区&quot;, 410611);
		areaCode.put(&quot;浚　县&quot;, 410621);
		areaCode.put(&quot;淇　县&quot;, 410622);
		areaCode.put(&quot;新乡市&quot;, 410700);
		areaCode.put(&quot;市辖区&quot;, 410701);
		areaCode.put(&quot;红旗区&quot;, 410702);
		areaCode.put(&quot;卫滨区&quot;, 410703);
		areaCode.put(&quot;凤泉区&quot;, 410704);
		areaCode.put(&quot;牧野区&quot;, 410711);
		areaCode.put(&quot;新乡县&quot;, 410721);
		areaCode.put(&quot;获嘉县&quot;, 410724);
		areaCode.put(&quot;原阳县&quot;, 410725);
		areaCode.put(&quot;延津县&quot;, 410726);
		areaCode.put(&quot;封丘县&quot;, 410727);
		areaCode.put(&quot;长垣县&quot;, 410728);
		areaCode.put(&quot;卫辉市&quot;, 410781);
		areaCode.put(&quot;辉县市&quot;, 410782);
		areaCode.put(&quot;焦作市&quot;, 410800);
		areaCode.put(&quot;市辖区&quot;, 410801);
		areaCode.put(&quot;解放区&quot;, 410802);
		areaCode.put(&quot;中站区&quot;, 410803);
		areaCode.put(&quot;马村区&quot;, 410804);
		areaCode.put(&quot;山阳区&quot;, 410811);
		areaCode.put(&quot;修武县&quot;, 410821);
		areaCode.put(&quot;博爱县&quot;, 410822);
		areaCode.put(&quot;武陟县&quot;, 410823);
		areaCode.put(&quot;温　县&quot;, 410825);
		areaCode.put(&quot;沁阳市&quot;, 410882);
		areaCode.put(&quot;孟州市&quot;, 410883);
		areaCode.put(&quot;濮阳市&quot;, 410900);
		areaCode.put(&quot;市辖区&quot;, 410901);
		areaCode.put(&quot;华龙区&quot;, 410902);
		areaCode.put(&quot;清丰县&quot;, 410922);
		areaCode.put(&quot;南乐县&quot;, 410923);
		areaCode.put(&quot;范　县&quot;, 410926);
		areaCode.put(&quot;台前县&quot;, 410927);
		areaCode.put(&quot;濮阳县&quot;, 410928);
		areaCode.put(&quot;许昌市&quot;, 411000);
		areaCode.put(&quot;市辖区&quot;, 411001);
		areaCode.put(&quot;魏都区&quot;, 411002);
		areaCode.put(&quot;许昌县&quot;, 411023);
		areaCode.put(&quot;鄢陵县&quot;, 411024);
		areaCode.put(&quot;襄城县&quot;, 411025);
		areaCode.put(&quot;禹州市&quot;, 411081);
		areaCode.put(&quot;长葛市&quot;, 411082);
		areaCode.put(&quot;漯河市&quot;, 411100);
		areaCode.put(&quot;市辖区&quot;, 411101);
		areaCode.put(&quot;源汇区&quot;, 411102);
		areaCode.put(&quot;郾城区&quot;, 411103);
		areaCode.put(&quot;召陵区&quot;, 411104);
		areaCode.put(&quot;舞阳县&quot;, 411121);
		areaCode.put(&quot;临颍县&quot;, 411122);
		areaCode.put(&quot;三门峡市&quot;, 411200);
		areaCode.put(&quot;市辖区&quot;, 411201);
		areaCode.put(&quot;湖滨区&quot;, 411202);
		areaCode.put(&quot;渑池县&quot;, 411221);
		areaCode.put(&quot;陕　县&quot;, 411222);
		areaCode.put(&quot;卢氏县&quot;, 411224);
		areaCode.put(&quot;义马市&quot;, 411281);
		areaCode.put(&quot;灵宝市&quot;, 411282);
		areaCode.put(&quot;南阳市&quot;, 411300);
		areaCode.put(&quot;市辖区&quot;, 411301);
		areaCode.put(&quot;宛城区&quot;, 411302);
		areaCode.put(&quot;卧龙区&quot;, 411303);
		areaCode.put(&quot;南召县&quot;, 411321);
		areaCode.put(&quot;方城县&quot;, 411322);
		areaCode.put(&quot;西峡县&quot;, 411323);
		areaCode.put(&quot;镇平县&quot;, 411324);
		areaCode.put(&quot;内乡县&quot;, 411325);
		areaCode.put(&quot;淅川县&quot;, 411326);
		areaCode.put(&quot;社旗县&quot;, 411327);
		areaCode.put(&quot;唐河县&quot;, 411328);
		areaCode.put(&quot;新野县&quot;, 411329);
		areaCode.put(&quot;桐柏县&quot;, 411330);
		areaCode.put(&quot;邓州市&quot;, 411381);
		areaCode.put(&quot;商丘市&quot;, 411400);
		areaCode.put(&quot;市辖区&quot;, 411401);
		areaCode.put(&quot;梁园区&quot;, 411402);
		areaCode.put(&quot;睢阳区&quot;, 411403);
		areaCode.put(&quot;民权县&quot;, 411421);
		areaCode.put(&quot;睢　县&quot;, 411422);
		areaCode.put(&quot;宁陵县&quot;, 411423);
		areaCode.put(&quot;柘城县&quot;, 411424);
		areaCode.put(&quot;虞城县&quot;, 411425);
		areaCode.put(&quot;夏邑县&quot;, 411426);
		areaCode.put(&quot;永城市&quot;, 411481);
		areaCode.put(&quot;信阳市&quot;, 411500);
		areaCode.put(&quot;市辖区&quot;, 411501);
		areaCode.put(&quot;浉河区&quot;, 411502);
		areaCode.put(&quot;平桥区&quot;, 411503);
		areaCode.put(&quot;罗山县&quot;, 411521);
		areaCode.put(&quot;光山县&quot;, 411522);
		areaCode.put(&quot;新　县&quot;, 411523);
		areaCode.put(&quot;商城县&quot;, 411524);
		areaCode.put(&quot;固始县&quot;, 411525);
		areaCode.put(&quot;潢川县&quot;, 411526);
		areaCode.put(&quot;淮滨县&quot;, 411527);
		areaCode.put(&quot;息　县&quot;, 411528);
		areaCode.put(&quot;周口市&quot;, 411600);
		areaCode.put(&quot;市辖区&quot;, 411601);
		areaCode.put(&quot;川汇区&quot;, 411602);
		areaCode.put(&quot;扶沟县&quot;, 411621);
		areaCode.put(&quot;西华县&quot;, 411622);
		areaCode.put(&quot;商水县&quot;, 411623);
		areaCode.put(&quot;沈丘县&quot;, 411624);
		areaCode.put(&quot;郸城县&quot;, 411625);
		areaCode.put(&quot;淮阳县&quot;, 411626);
		areaCode.put(&quot;太康县&quot;, 411627);
		areaCode.put(&quot;鹿邑县&quot;, 411628);
		areaCode.put(&quot;项城市&quot;, 411681);
		areaCode.put(&quot;驻马店市&quot;, 411700);
		areaCode.put(&quot;市辖区&quot;, 411701);
		areaCode.put(&quot;驿城区&quot;, 411702);
		areaCode.put(&quot;西平县&quot;, 411721);
		areaCode.put(&quot;上蔡县&quot;, 411722);
		areaCode.put(&quot;平舆县&quot;, 411723);
		areaCode.put(&quot;正阳县&quot;, 411724);
		areaCode.put(&quot;确山县&quot;, 411725);
		areaCode.put(&quot;泌阳县&quot;, 411726);
		areaCode.put(&quot;汝南县&quot;, 411727);
		areaCode.put(&quot;遂平县&quot;, 411728);
		areaCode.put(&quot;新蔡县&quot;, 411729);
		areaCode.put(&quot;济源市&quot;, 419001);
		areaCode.put(&quot;湖北省&quot;, 420000);
		areaCode.put(&quot;武汉市&quot;, 420100);
		areaCode.put(&quot;市辖区&quot;, 420101);
		areaCode.put(&quot;江岸区&quot;, 420102);
		areaCode.put(&quot;江汉区&quot;, 420103);
		areaCode.put(&quot;硚口区&quot;, 420104);
		areaCode.put(&quot;汉阳区&quot;, 420105);
		areaCode.put(&quot;武昌区&quot;, 420106);
		areaCode.put(&quot;青山区&quot;, 420107);
		areaCode.put(&quot;洪山区&quot;, 420111);
		areaCode.put(&quot;东西湖区&quot;, 420112);
		areaCode.put(&quot;汉南区&quot;, 420113);
		areaCode.put(&quot;蔡甸区&quot;, 420114);
		areaCode.put(&quot;江夏区&quot;, 420115);
		areaCode.put(&quot;黄陂区&quot;, 420116);
		areaCode.put(&quot;新洲区&quot;, 420117);
		areaCode.put(&quot;黄石市&quot;, 420200);
		areaCode.put(&quot;市辖区&quot;, 420201);
		areaCode.put(&quot;黄石港区&quot;, 420202);
		areaCode.put(&quot;西塞山区&quot;, 420203);
		areaCode.put(&quot;下陆区&quot;, 420204);
		areaCode.put(&quot;铁山区&quot;, 420205);
		areaCode.put(&quot;阳新县&quot;, 420222);
		areaCode.put(&quot;大冶市&quot;, 420281);
		areaCode.put(&quot;十堰市&quot;, 420300);
		areaCode.put(&quot;市辖区&quot;, 420301);
		areaCode.put(&quot;茅箭区&quot;, 420302);
		areaCode.put(&quot;张湾区&quot;, 420303);
		areaCode.put(&quot;郧　县&quot;, 420321);
		areaCode.put(&quot;郧西县&quot;, 420322);
		areaCode.put(&quot;竹山县&quot;, 420323);
		areaCode.put(&quot;竹溪县&quot;, 420324);
		areaCode.put(&quot;房　县&quot;, 420325);
		areaCode.put(&quot;丹江口市&quot;, 420381);
		areaCode.put(&quot;宜昌市&quot;, 420500);
		areaCode.put(&quot;市辖区&quot;, 420501);
		areaCode.put(&quot;西陵区&quot;, 420502);
		areaCode.put(&quot;伍家岗区&quot;, 420503);
		areaCode.put(&quot;点军区&quot;, 420504);
		areaCode.put(&quot;猇亭区&quot;, 420505);
		areaCode.put(&quot;夷陵区&quot;, 420506);
		areaCode.put(&quot;远安县&quot;, 420525);
		areaCode.put(&quot;兴山县&quot;, 420526);
		areaCode.put(&quot;秭归县&quot;, 420527);
		areaCode.put(&quot;长阳土家族自治县&quot;, 420528);
		areaCode.put(&quot;五峰土家族自治县&quot;, 420529);
		areaCode.put(&quot;宜都市&quot;, 420581);
		areaCode.put(&quot;当阳市&quot;, 420582);
		areaCode.put(&quot;枝江市&quot;, 420583);
		areaCode.put(&quot;襄樊市&quot;, 420600);
		areaCode.put(&quot;市辖区&quot;, 420601);
		areaCode.put(&quot;襄城区&quot;, 420602);
		areaCode.put(&quot;樊城区&quot;, 420606);
		areaCode.put(&quot;襄阳区&quot;, 420607);
		areaCode.put(&quot;南漳县&quot;, 420624);
		areaCode.put(&quot;谷城县&quot;, 420625);
		areaCode.put(&quot;保康县&quot;, 420626);
		areaCode.put(&quot;老河口市&quot;, 420682);
		areaCode.put(&quot;枣阳市&quot;, 420683);
		areaCode.put(&quot;宜城市&quot;, 420684);
		areaCode.put(&quot;鄂州市&quot;, 420700);
		areaCode.put(&quot;市辖区&quot;, 420701);
		areaCode.put(&quot;梁子湖区&quot;, 420702);
		areaCode.put(&quot;华容区&quot;, 420703);
		areaCode.put(&quot;鄂城区&quot;, 420704);
		areaCode.put(&quot;荆门市&quot;, 420800);
		areaCode.put(&quot;市辖区&quot;, 420801);
		areaCode.put(&quot;东宝区&quot;, 420802);
		areaCode.put(&quot;掇刀区&quot;, 420804);
		areaCode.put(&quot;京山县&quot;, 420821);
		areaCode.put(&quot;沙洋县&quot;, 420822);
		areaCode.put(&quot;钟祥市&quot;, 420881);
		areaCode.put(&quot;孝感市&quot;, 420900);
		areaCode.put(&quot;市辖区&quot;, 420901);
		areaCode.put(&quot;孝南区&quot;, 420902);
		areaCode.put(&quot;孝昌县&quot;, 420921);
		areaCode.put(&quot;大悟县&quot;, 420922);
		areaCode.put(&quot;云梦县&quot;, 420923);
		areaCode.put(&quot;应城市&quot;, 420981);
		areaCode.put(&quot;安陆市&quot;, 420982);
		areaCode.put(&quot;汉川市&quot;, 420984);
		areaCode.put(&quot;荆州市&quot;, 421000);
		areaCode.put(&quot;市辖区&quot;, 421001);
		areaCode.put(&quot;沙市区&quot;, 421002);
		areaCode.put(&quot;荆州区&quot;, 421003);
		areaCode.put(&quot;公安县&quot;, 421022);
		areaCode.put(&quot;监利县&quot;, 421023);
		areaCode.put(&quot;江陵县&quot;, 421024);
		areaCode.put(&quot;石首市&quot;, 421081);
		areaCode.put(&quot;洪湖市&quot;, 421083);
		areaCode.put(&quot;松滋市&quot;, 421087);
		areaCode.put(&quot;黄冈市&quot;, 421100);
		areaCode.put(&quot;市辖区&quot;, 421101);
		areaCode.put(&quot;黄州区&quot;, 421102);
		areaCode.put(&quot;团风县&quot;, 421121);
		areaCode.put(&quot;红安县&quot;, 421122);
		areaCode.put(&quot;罗田县&quot;, 421123);
		areaCode.put(&quot;英山县&quot;, 421124);
		areaCode.put(&quot;浠水县&quot;, 421125);
		areaCode.put(&quot;蕲春县&quot;, 421126);
		areaCode.put(&quot;黄梅县&quot;, 421127);
		areaCode.put(&quot;麻城市&quot;, 421181);
		areaCode.put(&quot;武穴市&quot;, 421182);
		areaCode.put(&quot;咸宁市&quot;, 421200);
		areaCode.put(&quot;市辖区&quot;, 421201);
		areaCode.put(&quot;咸安区&quot;, 421202);
		areaCode.put(&quot;嘉鱼县&quot;, 421221);
		areaCode.put(&quot;通城县&quot;, 421222);
		areaCode.put(&quot;崇阳县&quot;, 421223);
		areaCode.put(&quot;通山县&quot;, 421224);
		areaCode.put(&quot;赤壁市&quot;, 421281);
		areaCode.put(&quot;随州市&quot;, 421300);
		areaCode.put(&quot;市辖区&quot;, 421301);
		areaCode.put(&quot;曾都区 (*)&quot;, 421303);
		areaCode.put(&quot;广水市&quot;, 421381);
		areaCode.put(&quot;恩施土家族苗族自治州&quot;, 422800);
		areaCode.put(&quot;恩施市&quot;, 422801);
		areaCode.put(&quot;利川市&quot;, 422802);
		areaCode.put(&quot;建始县&quot;, 422822);
		areaCode.put(&quot;巴东县&quot;, 422823);
		areaCode.put(&quot;宣恩县&quot;, 422825);
		areaCode.put(&quot;咸丰县&quot;, 422826);
		areaCode.put(&quot;来凤县&quot;, 422827);
		areaCode.put(&quot;鹤峰县&quot;, 422828);
		areaCode.put(&quot;省直辖县级行政区划&quot;, 429000);
		areaCode.put(&quot;仙桃市&quot;, 429004);
		areaCode.put(&quot;潜江市&quot;, 429005);
		areaCode.put(&quot;天门市&quot;, 429006);
		areaCode.put(&quot;神农架林区&quot;, 429021);
		areaCode.put(&quot;湖南省&quot;, 430000);
		areaCode.put(&quot;长沙市&quot;, 430100);
		areaCode.put(&quot;市辖区&quot;, 430101);
		areaCode.put(&quot;芙蓉区&quot;, 430102);
		areaCode.put(&quot;天心区&quot;, 430103);
		areaCode.put(&quot;岳麓区&quot;, 430104);
		areaCode.put(&quot;开福区&quot;, 430105);
		areaCode.put(&quot;雨花区&quot;, 430111);
		areaCode.put(&quot;长沙县&quot;, 430121);
		areaCode.put(&quot;望城县&quot;, 430122);
		areaCode.put(&quot;宁乡县&quot;, 430124);
		areaCode.put(&quot;浏阳市&quot;, 430181);
		areaCode.put(&quot;株洲市&quot;, 430200);
		areaCode.put(&quot;市辖区&quot;, 430201);
		areaCode.put(&quot;荷塘区&quot;, 430202);
		areaCode.put(&quot;芦淞区&quot;, 430203);
		areaCode.put(&quot;石峰区&quot;, 430204);
		areaCode.put(&quot;天元区&quot;, 430211);
		areaCode.put(&quot;株洲县&quot;, 430221);
		areaCode.put(&quot;攸　县&quot;, 430223);
		areaCode.put(&quot;茶陵县&quot;, 430224);
		areaCode.put(&quot;炎陵县&quot;, 430225);
		areaCode.put(&quot;醴陵市&quot;, 430281);
		areaCode.put(&quot;湘潭市&quot;, 430300);
		areaCode.put(&quot;市辖区&quot;, 430301);
		areaCode.put(&quot;雨湖区&quot;, 430302);
		areaCode.put(&quot;岳塘区&quot;, 430304);
		areaCode.put(&quot;湘潭县&quot;, 430321);
		areaCode.put(&quot;湘乡市&quot;, 430381);
		areaCode.put(&quot;韶山市&quot;, 430382);
		areaCode.put(&quot;衡阳市&quot;, 430400);
		areaCode.put(&quot;市辖区&quot;, 430401);
		areaCode.put(&quot;珠晖区&quot;, 430405);
		areaCode.put(&quot;雁峰区&quot;, 430406);
		areaCode.put(&quot;石鼓区&quot;, 430407);
		areaCode.put(&quot;蒸湘区&quot;, 430408);
		areaCode.put(&quot;南岳区&quot;, 430412);
		areaCode.put(&quot;衡阳县&quot;, 430421);
		areaCode.put(&quot;衡南县&quot;, 430422);
		areaCode.put(&quot;衡山县&quot;, 430423);
		areaCode.put(&quot;衡东县&quot;, 430424);
		areaCode.put(&quot;祁东县&quot;, 430426);
		areaCode.put(&quot;耒阳市&quot;, 430481);
		areaCode.put(&quot;常宁市&quot;, 430482);
		areaCode.put(&quot;邵阳市&quot;, 430500);
		areaCode.put(&quot;市辖区&quot;, 430501);
		areaCode.put(&quot;双清区&quot;, 430502);
		areaCode.put(&quot;大祥区&quot;, 430503);
		areaCode.put(&quot;北塔区&quot;, 430511);
		areaCode.put(&quot;邵东县&quot;, 430521);
		areaCode.put(&quot;新邵县&quot;, 430522);
		areaCode.put(&quot;邵阳县&quot;, 430523);
		areaCode.put(&quot;隆回县&quot;, 430524);
		areaCode.put(&quot;洞口县&quot;, 430525);
		areaCode.put(&quot;绥宁县&quot;, 430527);
		areaCode.put(&quot;新宁县&quot;, 430528);
		areaCode.put(&quot;城步苗族自治县&quot;, 430529);
		areaCode.put(&quot;武冈市&quot;, 430581);
		areaCode.put(&quot;岳阳市&quot;, 430600);
		areaCode.put(&quot;市辖区&quot;, 430601);
		areaCode.put(&quot;岳阳楼区&quot;, 430602);
		areaCode.put(&quot;云溪区&quot;, 430603);
		areaCode.put(&quot;君山区&quot;, 430611);
		areaCode.put(&quot;岳阳县&quot;, 430621);
		areaCode.put(&quot;华容县&quot;, 430623);
		areaCode.put(&quot;湘阴县&quot;, 430624);
		areaCode.put(&quot;平江县&quot;, 430626);
		areaCode.put(&quot;汨罗市&quot;, 430681);
		areaCode.put(&quot;临湘市&quot;, 430682);
		areaCode.put(&quot;常德市&quot;, 430700);
		areaCode.put(&quot;市辖区&quot;, 430701);
		areaCode.put(&quot;武陵区&quot;, 430702);
		areaCode.put(&quot;鼎城区&quot;, 430703);
		areaCode.put(&quot;安乡县&quot;, 430721);
		areaCode.put(&quot;汉寿县&quot;, 430722);
		areaCode.put(&quot;澧　县&quot;, 430723);
		areaCode.put(&quot;临澧县&quot;, 430724);
		areaCode.put(&quot;桃源县&quot;, 430725);
		areaCode.put(&quot;石门县&quot;, 430726);
		areaCode.put(&quot;津市市&quot;, 430781);
		areaCode.put(&quot;张家界市&quot;, 430800);
		areaCode.put(&quot;市辖区&quot;, 430801);
		areaCode.put(&quot;永定区&quot;, 430802);
		areaCode.put(&quot;武陵源区&quot;, 430811);
		areaCode.put(&quot;慈利县&quot;, 430821);
		areaCode.put(&quot;桑植县&quot;, 430822);
		areaCode.put(&quot;益阳市&quot;, 430900);
		areaCode.put(&quot;市辖区&quot;, 430901);
		areaCode.put(&quot;资阳区&quot;, 430902);
		areaCode.put(&quot;赫山区&quot;, 430903);
		areaCode.put(&quot;南　县&quot;, 430921);
		areaCode.put(&quot;桃江县&quot;, 430922);
		areaCode.put(&quot;安化县&quot;, 430923);
		areaCode.put(&quot;沅江市&quot;, 430981);
		areaCode.put(&quot;郴州市&quot;, 431000);
		areaCode.put(&quot;市辖区&quot;, 431001);
		areaCode.put(&quot;北湖区&quot;, 431002);
		areaCode.put(&quot;苏仙区&quot;, 431003);
		areaCode.put(&quot;桂阳县&quot;, 431021);
		areaCode.put(&quot;宜章县&quot;, 431022);
		areaCode.put(&quot;永兴县&quot;, 431023);
		areaCode.put(&quot;嘉禾县&quot;, 431024);
		areaCode.put(&quot;临武县&quot;, 431025);
		areaCode.put(&quot;汝城县&quot;, 431026);
		areaCode.put(&quot;桂东县&quot;, 431027);
		areaCode.put(&quot;安仁县&quot;, 431028);
		areaCode.put(&quot;资兴市&quot;, 431081);
		areaCode.put(&quot;永州市&quot;, 431100);
		areaCode.put(&quot;市辖区&quot;, 431101);
		areaCode.put(&quot;零陵区&quot;, 431102);
		areaCode.put(&quot;冷水滩区&quot;, 431103);
		areaCode.put(&quot;祁阳县&quot;, 431121);
		areaCode.put(&quot;东安县&quot;, 431122);
		areaCode.put(&quot;双牌县&quot;, 431123);
		areaCode.put(&quot;道　县&quot;, 431124);
		areaCode.put(&quot;江永县&quot;, 431125);
		areaCode.put(&quot;宁远县&quot;, 431126);
		areaCode.put(&quot;蓝山县&quot;, 431127);
		areaCode.put(&quot;新田县&quot;, 431128);
		areaCode.put(&quot;江华瑶族自治县&quot;, 431129);
		areaCode.put(&quot;怀化市&quot;, 431200);
		areaCode.put(&quot;市辖区&quot;, 431201);
		areaCode.put(&quot;鹤城区&quot;, 431202);
		areaCode.put(&quot;中方县&quot;, 431221);
		areaCode.put(&quot;沅陵县&quot;, 431222);
		areaCode.put(&quot;辰溪县&quot;, 431223);
		areaCode.put(&quot;溆浦县&quot;, 431224);
		areaCode.put(&quot;会同县&quot;, 431225);
		areaCode.put(&quot;麻阳苗族自治县&quot;, 431226);
		areaCode.put(&quot;新晃侗族自治县&quot;, 431227);
		areaCode.put(&quot;芷江侗族自治县&quot;, 431228);
		areaCode.put(&quot;靖州苗族侗族自治县&quot;, 431229);
		areaCode.put(&quot;通道侗族自治县&quot;, 431230);
		areaCode.put(&quot;洪江市&quot;, 431281);
		areaCode.put(&quot;娄底市&quot;, 431300);
		areaCode.put(&quot;市辖区&quot;, 431301);
		areaCode.put(&quot;娄星区&quot;, 431302);
		areaCode.put(&quot;双峰县&quot;, 431321);
		areaCode.put(&quot;新化县&quot;, 431322);
		areaCode.put(&quot;冷水江市&quot;, 431381);
		areaCode.put(&quot;涟源市&quot;, 431382);
		areaCode.put(&quot;湘西土家族苗族自治州&quot;, 433100);
		areaCode.put(&quot;吉首市&quot;, 433101);
		areaCode.put(&quot;泸溪县&quot;, 433122);
		areaCode.put(&quot;凤凰县&quot;, 433123);
		areaCode.put(&quot;花垣县&quot;, 433124);
		areaCode.put(&quot;保靖县&quot;, 433125);
		areaCode.put(&quot;古丈县&quot;, 433126);
		areaCode.put(&quot;永顺县&quot;, 433127);
		areaCode.put(&quot;龙山县&quot;, 433130);
		areaCode.put(&quot;广东省&quot;, 440000);
		areaCode.put(&quot;广州市&quot;, 440100);
		areaCode.put(&quot;市辖区&quot;, 440101);
		areaCode.put(&quot;荔湾区&quot;, 440103);
		areaCode.put(&quot;越秀区&quot;, 440104);
		areaCode.put(&quot;海珠区&quot;, 440105);
		areaCode.put(&quot;天河区&quot;, 440106);
		areaCode.put(&quot;白云区&quot;, 440111);
		areaCode.put(&quot;黄埔区&quot;, 440112);
		areaCode.put(&quot;番禺区&quot;, 440113);
		areaCode.put(&quot;花都区&quot;, 440114);
		areaCode.put(&quot;南沙区&quot;, 440115);
		areaCode.put(&quot;萝岗区&quot;, 440116);
		areaCode.put(&quot;增城市&quot;, 440183);
		areaCode.put(&quot;从化市&quot;, 440184);
		areaCode.put(&quot;韶关市&quot;, 440200);
		areaCode.put(&quot;市辖区&quot;, 440201);
		areaCode.put(&quot;武江区&quot;, 440203);
		areaCode.put(&quot;浈江区&quot;, 440204);
		areaCode.put(&quot;曲江区&quot;, 440205);
		areaCode.put(&quot;始兴县&quot;, 440222);
		areaCode.put(&quot;仁化县&quot;, 440224);
		areaCode.put(&quot;翁源县&quot;, 440229);
		areaCode.put(&quot;乳源瑶族自治县&quot;, 440232);
		areaCode.put(&quot;新丰县&quot;, 440233);
		areaCode.put(&quot;乐昌市&quot;, 440281);
		areaCode.put(&quot;南雄市&quot;, 440282);
		areaCode.put(&quot;深圳市&quot;, 440300);
		areaCode.put(&quot;市辖区&quot;, 440301);
		areaCode.put(&quot;罗湖区&quot;, 440303);
		areaCode.put(&quot;福田区&quot;, 440304);
		areaCode.put(&quot;南山区&quot;, 440305);
		areaCode.put(&quot;宝安区&quot;, 440306);
		areaCode.put(&quot;龙岗区&quot;, 440307);
		areaCode.put(&quot;盐田区&quot;, 440308);
		areaCode.put(&quot;珠海市&quot;, 440400);
		areaCode.put(&quot;市辖区&quot;, 440401);
		areaCode.put(&quot;香洲区&quot;, 440402);
		areaCode.put(&quot;斗门区&quot;, 440403);
		areaCode.put(&quot;金湾区&quot;, 440404);
		areaCode.put(&quot;汕头市&quot;, 440500);
		areaCode.put(&quot;市辖区&quot;, 440501);
		areaCode.put(&quot;龙湖区&quot;, 440507);
		areaCode.put(&quot;金平区&quot;, 440511);
		areaCode.put(&quot;濠江区&quot;, 440512);
		areaCode.put(&quot;潮阳区&quot;, 440513);
		areaCode.put(&quot;潮南区&quot;, 440514);
		areaCode.put(&quot;澄海区&quot;, 440515);
		areaCode.put(&quot;南澳县&quot;, 440523);
		areaCode.put(&quot;佛山市&quot;, 440600);
		areaCode.put(&quot;市辖区&quot;, 440601);
		areaCode.put(&quot;禅城区&quot;, 440604);
		areaCode.put(&quot;南海区&quot;, 440605);
		areaCode.put(&quot;顺德区&quot;, 440606);
		areaCode.put(&quot;三水区&quot;, 440607);
		areaCode.put(&quot;高明区&quot;, 440608);
		areaCode.put(&quot;江门市&quot;, 440700);
		areaCode.put(&quot;市辖区&quot;, 440701);
		areaCode.put(&quot;蓬江区&quot;, 440703);
		areaCode.put(&quot;江海区&quot;, 440704);
		areaCode.put(&quot;新会区&quot;, 440705);
		areaCode.put(&quot;台山市&quot;, 440781);
		areaCode.put(&quot;开平市&quot;, 440783);
		areaCode.put(&quot;鹤山市&quot;, 440784);
		areaCode.put(&quot;恩平市&quot;, 440785);
		areaCode.put(&quot;湛江市&quot;, 440800);
		areaCode.put(&quot;市辖区&quot;, 440801);
		areaCode.put(&quot;赤坎区&quot;, 440802);
		areaCode.put(&quot;霞山区&quot;, 440803);
		areaCode.put(&quot;坡头区&quot;, 440804);
		areaCode.put(&quot;麻章区&quot;, 440811);
		areaCode.put(&quot;遂溪县&quot;, 440823);
		areaCode.put(&quot;徐闻县&quot;, 440825);
		areaCode.put(&quot;廉江市&quot;, 440881);
		areaCode.put(&quot;雷州市&quot;, 440882);
		areaCode.put(&quot;吴川市&quot;, 440883);
		areaCode.put(&quot;茂名市&quot;, 440900);
		areaCode.put(&quot;市辖区&quot;, 440901);
		areaCode.put(&quot;茂南区&quot;, 440902);
		areaCode.put(&quot;茂港区&quot;, 440903);
		areaCode.put(&quot;电白县&quot;, 440923);
		areaCode.put(&quot;高州市&quot;, 440981);
		areaCode.put(&quot;化州市&quot;, 440982);
		areaCode.put(&quot;信宜市&quot;, 440983);
		areaCode.put(&quot;肇庆市&quot;, 441200);
		areaCode.put(&quot;市辖区&quot;, 441201);
		areaCode.put(&quot;端州区&quot;, 441202);
		areaCode.put(&quot;鼎湖区&quot;, 441203);
		areaCode.put(&quot;广宁县&quot;, 441223);
		areaCode.put(&quot;怀集县&quot;, 441224);
		areaCode.put(&quot;封开县&quot;, 441225);
		areaCode.put(&quot;德庆县&quot;, 441226);
		areaCode.put(&quot;高要市&quot;, 441283);
		areaCode.put(&quot;四会市&quot;, 441284);
		areaCode.put(&quot;惠州市&quot;, 441300);
		areaCode.put(&quot;市辖区&quot;, 441301);
		areaCode.put(&quot;惠城区&quot;, 441302);
		areaCode.put(&quot;惠阳区&quot;, 441303);
		areaCode.put(&quot;博罗县&quot;, 441322);
		areaCode.put(&quot;惠东县&quot;, 441323);
		areaCode.put(&quot;龙门县&quot;, 441324);
		areaCode.put(&quot;梅州市&quot;, 441400);
		areaCode.put(&quot;市辖区&quot;, 441401);
		areaCode.put(&quot;梅江区&quot;, 441402);
		areaCode.put(&quot;梅　县&quot;, 441421);
		areaCode.put(&quot;大埔县&quot;, 441422);
		areaCode.put(&quot;丰顺县&quot;, 441423);
		areaCode.put(&quot;五华县&quot;, 441424);
		areaCode.put(&quot;平远县&quot;, 441426);
		areaCode.put(&quot;蕉岭县&quot;, 441427);
		areaCode.put(&quot;兴宁市&quot;, 441481);
		areaCode.put(&quot;汕尾市&quot;, 441500);
		areaCode.put(&quot;市辖区&quot;, 441501);
		areaCode.put(&quot;城　区&quot;, 441502);
		areaCode.put(&quot;海丰县&quot;, 441521);
		areaCode.put(&quot;陆河县&quot;, 441523);
		areaCode.put(&quot;陆丰市&quot;, 441581);
		areaCode.put(&quot;河源市&quot;, 441600);
		areaCode.put(&quot;市辖区&quot;, 441601);
		areaCode.put(&quot;源城区&quot;, 441602);
		areaCode.put(&quot;紫金县&quot;, 441621);
		areaCode.put(&quot;龙川县&quot;, 441622);
		areaCode.put(&quot;连平县&quot;, 441623);
		areaCode.put(&quot;和平县&quot;, 441624);
		areaCode.put(&quot;东源县&quot;, 441625);
		areaCode.put(&quot;阳江市&quot;, 441700);
		areaCode.put(&quot;市辖区&quot;, 441701);
		areaCode.put(&quot;江城区&quot;, 441702);
		areaCode.put(&quot;阳西县&quot;, 441721);
		areaCode.put(&quot;阳东县&quot;, 441723);
		areaCode.put(&quot;阳春市&quot;, 441781);
		areaCode.put(&quot;清远市&quot;, 441800);
		areaCode.put(&quot;市辖区&quot;, 441801);
		areaCode.put(&quot;清城区&quot;, 441802);
		areaCode.put(&quot;佛冈县&quot;, 441821);
		areaCode.put(&quot;阳山县&quot;, 441823);
		areaCode.put(&quot;连山壮族瑶族自治县&quot;, 441825);
		areaCode.put(&quot;连南瑶族自治县&quot;, 441826);
		areaCode.put(&quot;清新县&quot;, 441827);
		areaCode.put(&quot;英德市&quot;, 441881);
		areaCode.put(&quot;连州市&quot;, 441882);
		areaCode.put(&quot;东莞市&quot;, 441900);
		areaCode.put(&quot;中山市&quot;, 442000);
		areaCode.put(&quot;潮州市&quot;, 445100);
		areaCode.put(&quot;市辖区&quot;, 445101);
		areaCode.put(&quot;湘桥区&quot;, 445102);
		areaCode.put(&quot;潮安县&quot;, 445121);
		areaCode.put(&quot;饶平县&quot;, 445122);
		areaCode.put(&quot;揭阳市&quot;, 445200);
		areaCode.put(&quot;市辖区&quot;, 445201);
		areaCode.put(&quot;榕城区&quot;, 445202);
		areaCode.put(&quot;揭东县&quot;, 445221);
		areaCode.put(&quot;揭西县&quot;, 445222);
		areaCode.put(&quot;惠来县&quot;, 445224);
		areaCode.put(&quot;普宁市&quot;, 445281);
		areaCode.put(&quot;云浮市&quot;, 445300);
		areaCode.put(&quot;市辖区&quot;, 445301);
		areaCode.put(&quot;云城区&quot;, 445302);
		areaCode.put(&quot;新兴县&quot;, 445321);
		areaCode.put(&quot;郁南县&quot;, 445322);
		areaCode.put(&quot;云安县&quot;, 445323);
		areaCode.put(&quot;罗定市&quot;, 445381);
		areaCode.put(&quot;广西壮族自治区&quot;, 450000);
		areaCode.put(&quot;南宁市&quot;, 450100);
		areaCode.put(&quot;市辖区&quot;, 450101);
		areaCode.put(&quot;兴宁区&quot;, 450102);
		areaCode.put(&quot;青秀区&quot;, 450103);
		areaCode.put(&quot;江南区&quot;, 450105);
		areaCode.put(&quot;西乡塘区&quot;, 450107);
		areaCode.put(&quot;良庆区&quot;, 450108);
		areaCode.put(&quot;邕宁区&quot;, 450109);
		areaCode.put(&quot;武鸣县&quot;, 450122);
		areaCode.put(&quot;隆安县&quot;, 450123);
		areaCode.put(&quot;马山县&quot;, 450124);
		areaCode.put(&quot;上林县&quot;, 450125);
		areaCode.put(&quot;宾阳县&quot;, 450126);
		areaCode.put(&quot;横　县&quot;, 450127);
		areaCode.put(&quot;柳州市&quot;, 450200);
		areaCode.put(&quot;市辖区&quot;, 450201);
		areaCode.put(&quot;城中区&quot;, 450202);
		areaCode.put(&quot;鱼峰区&quot;, 450203);
		areaCode.put(&quot;柳南区&quot;, 450204);
		areaCode.put(&quot;柳北区&quot;, 450205);
		areaCode.put(&quot;柳江县&quot;, 450221);
		areaCode.put(&quot;柳城县&quot;, 450222);
		areaCode.put(&quot;鹿寨县&quot;, 450223);
		areaCode.put(&quot;融安县&quot;, 450224);
		areaCode.put(&quot;融水苗族自治县&quot;, 450225);
		areaCode.put(&quot;三江侗族自治县&quot;, 450226);
		areaCode.put(&quot;桂林市&quot;, 450300);
		areaCode.put(&quot;市辖区&quot;, 450301);
		areaCode.put(&quot;秀峰区&quot;, 450302);
		areaCode.put(&quot;叠彩区&quot;, 450303);
		areaCode.put(&quot;象山区&quot;, 450304);
		areaCode.put(&quot;七星区&quot;, 450305);
		areaCode.put(&quot;雁山区&quot;, 450311);
		areaCode.put(&quot;阳朔县&quot;, 450321);
		areaCode.put(&quot;临桂县&quot;, 450322);
		areaCode.put(&quot;灵川县&quot;, 450323);
		areaCode.put(&quot;全州县&quot;, 450324);
		areaCode.put(&quot;兴安县&quot;, 450325);
		areaCode.put(&quot;永福县&quot;, 450326);
		areaCode.put(&quot;灌阳县&quot;, 450327);
		areaCode.put(&quot;龙胜各族自治县&quot;, 450328);
		areaCode.put(&quot;资源县&quot;, 450329);
		areaCode.put(&quot;平乐县&quot;, 450330);
		areaCode.put(&quot;荔蒲县&quot;, 450331);
		areaCode.put(&quot;恭城瑶族自治县&quot;, 450332);
		areaCode.put(&quot;梧州市&quot;, 450400);
		areaCode.put(&quot;市辖区&quot;, 450401);
		areaCode.put(&quot;万秀区&quot;, 450403);
		areaCode.put(&quot;蝶山区&quot;, 450404);
		areaCode.put(&quot;长洲区&quot;, 450405);
		areaCode.put(&quot;苍梧县&quot;, 450421);
		areaCode.put(&quot;藤　县&quot;, 450422);
		areaCode.put(&quot;蒙山县&quot;, 450423);
		areaCode.put(&quot;岑溪市&quot;, 450481);
		areaCode.put(&quot;北海市&quot;, 450500);
		areaCode.put(&quot;市辖区&quot;, 450501);
		areaCode.put(&quot;海城区&quot;, 450502);
		areaCode.put(&quot;银海区&quot;, 450503);
		areaCode.put(&quot;铁山港区&quot;, 450512);
		areaCode.put(&quot;合浦县&quot;, 450521);
		areaCode.put(&quot;防城港市&quot;, 450600);
		areaCode.put(&quot;市辖区&quot;, 450601);
		areaCode.put(&quot;港口区&quot;, 450602);
		areaCode.put(&quot;防城区&quot;, 450603);
		areaCode.put(&quot;上思县&quot;, 450621);
		areaCode.put(&quot;东兴市&quot;, 450681);
		areaCode.put(&quot;钦州市&quot;, 450700);
		areaCode.put(&quot;市辖区&quot;, 450701);
		areaCode.put(&quot;钦南区&quot;, 450702);
		areaCode.put(&quot;钦北区&quot;, 450703);
		areaCode.put(&quot;灵山县&quot;, 450721);
		areaCode.put(&quot;浦北县&quot;, 450722);
		areaCode.put(&quot;贵港市&quot;, 450800);
		areaCode.put(&quot;市辖区&quot;, 450801);
		areaCode.put(&quot;港北区&quot;, 450802);
		areaCode.put(&quot;港南区&quot;, 450803);
		areaCode.put(&quot;覃塘区&quot;, 450804);
		areaCode.put(&quot;平南县&quot;, 450821);
		areaCode.put(&quot;桂平市&quot;, 450881);
		areaCode.put(&quot;玉林市&quot;, 450900);
		areaCode.put(&quot;市辖区&quot;, 450901);
		areaCode.put(&quot;玉州区&quot;, 450902);
		areaCode.put(&quot;容　县&quot;, 450921);
		areaCode.put(&quot;陆川县&quot;, 450922);
		areaCode.put(&quot;博白县&quot;, 450923);
		areaCode.put(&quot;兴业县&quot;, 450924);
		areaCode.put(&quot;北流市&quot;, 450981);
		areaCode.put(&quot;百色市&quot;, 451000);
		areaCode.put(&quot;市辖区&quot;, 451001);
		areaCode.put(&quot;右江区&quot;, 451002);
		areaCode.put(&quot;田阳县&quot;, 451021);
		areaCode.put(&quot;田东县&quot;, 451022);
		areaCode.put(&quot;平果县&quot;, 451023);
		areaCode.put(&quot;德保县&quot;, 451024);
		areaCode.put(&quot;靖西县&quot;, 451025);
		areaCode.put(&quot;那坡县&quot;, 451026);
		areaCode.put(&quot;凌云县&quot;, 451027);
		areaCode.put(&quot;乐业县&quot;, 451028);
		areaCode.put(&quot;田林县&quot;, 451029);
		areaCode.put(&quot;西林县&quot;, 451030);
		areaCode.put(&quot;隆林各族自治县&quot;, 451031);
		areaCode.put(&quot;贺州市&quot;, 451100);
		areaCode.put(&quot;市辖区&quot;, 451101);
		areaCode.put(&quot;八步区&quot;, 451102);
		areaCode.put(&quot;昭平县&quot;, 451121);
		areaCode.put(&quot;钟山县&quot;, 451122);
		areaCode.put(&quot;富川瑶族自治县&quot;, 451123);
		areaCode.put(&quot;河池市&quot;, 451200);
		areaCode.put(&quot;市辖区&quot;, 451201);
		areaCode.put(&quot;金城江区&quot;, 451202);
		areaCode.put(&quot;南丹县&quot;, 451221);
		areaCode.put(&quot;天峨县&quot;, 451222);
		areaCode.put(&quot;凤山县&quot;, 451223);
		areaCode.put(&quot;东兰县&quot;, 451224);
		areaCode.put(&quot;罗城仫佬族自治县&quot;, 451225);
		areaCode.put(&quot;环江毛南族自治县&quot;, 451226);
		areaCode.put(&quot;巴马瑶族自治县&quot;, 451227);
		areaCode.put(&quot;都安瑶族自治县&quot;, 451228);
		areaCode.put(&quot;大化瑶族自治县&quot;, 451229);
		areaCode.put(&quot;宜州市&quot;, 451281);
		areaCode.put(&quot;来宾市&quot;, 451300);
		areaCode.put(&quot;市辖区&quot;, 451301);
		areaCode.put(&quot;兴宾区&quot;, 451302);
		areaCode.put(&quot;忻城县&quot;, 451321);
		areaCode.put(&quot;象州县&quot;, 451322);
		areaCode.put(&quot;武宣县&quot;, 451323);
		areaCode.put(&quot;金秀瑶族自治县&quot;, 451324);
		areaCode.put(&quot;合山市&quot;, 451381);
		areaCode.put(&quot;崇左市&quot;, 451400);
		areaCode.put(&quot;市辖区&quot;, 451401);
		areaCode.put(&quot;江洲区&quot;, 451402);
		areaCode.put(&quot;扶绥县&quot;, 451421);
		areaCode.put(&quot;宁明县&quot;, 451422);
		areaCode.put(&quot;龙州县&quot;, 451423);
		areaCode.put(&quot;大新县&quot;, 451424);
		areaCode.put(&quot;天等县&quot;, 451425);
		areaCode.put(&quot;凭祥市&quot;, 451481);
		areaCode.put(&quot;海南省&quot;, 460000);
		areaCode.put(&quot;海口市&quot;, 460100);
		areaCode.put(&quot;市辖区&quot;, 460101);
		areaCode.put(&quot;秀英区&quot;, 460105);
		areaCode.put(&quot;龙华区&quot;, 460106);
		areaCode.put(&quot;琼山区&quot;, 460107);
		areaCode.put(&quot;美兰区&quot;, 460108);
		areaCode.put(&quot;三亚市&quot;, 460200);
		areaCode.put(&quot;市辖区&quot;, 460201);
		areaCode.put(&quot;省直辖县级行政区划&quot;, 469000);
		areaCode.put(&quot;五指山市&quot;, 469001);
		areaCode.put(&quot;琼海市&quot;, 469002);
		areaCode.put(&quot;儋州市&quot;, 469003);
		areaCode.put(&quot;文昌市&quot;, 469005);
		areaCode.put(&quot;万宁市&quot;, 469006);
		areaCode.put(&quot;东方市&quot;, 469007);
		areaCode.put(&quot;定安县&quot;, 469021);
		areaCode.put(&quot;屯昌县&quot;, 469022);
		areaCode.put(&quot;澄迈县&quot;, 469023);
		areaCode.put(&quot;临高县&quot;, 469024);
		areaCode.put(&quot;白沙黎族自治县&quot;, 469025);
		areaCode.put(&quot;昌江黎族自治县&quot;, 469026);
		areaCode.put(&quot;乐东黎族自治县&quot;, 469027);
		areaCode.put(&quot;陵水黎族自治县&quot;, 469028);
		areaCode.put(&quot;保亭黎族苗族自治县&quot;, 469029);
		areaCode.put(&quot;琼中黎族苗族自治县&quot;, 469030);
		areaCode.put(&quot;西沙群岛&quot;, 469031);
		areaCode.put(&quot;南沙群岛&quot;, 469032);
		areaCode.put(&quot;中沙群岛的岛礁及其海域&quot;, 469033);
		areaCode.put(&quot;重庆市&quot;, 500000);
		areaCode.put(&quot;市辖区&quot;, 500100);
		areaCode.put(&quot;万州区&quot;, 500101);
		areaCode.put(&quot;涪陵区&quot;, 500102);
		areaCode.put(&quot;渝中区&quot;, 500103);
		areaCode.put(&quot;大渡口区&quot;, 500104);
		areaCode.put(&quot;江北区&quot;, 500105);
		areaCode.put(&quot;沙坪坝区&quot;, 500106);
		areaCode.put(&quot;九龙坡区&quot;, 500107);
		areaCode.put(&quot;南岸区&quot;, 500108);
		areaCode.put(&quot;北碚区&quot;, 500109);
		areaCode.put(&quot;万盛区&quot;, 500110);
		areaCode.put(&quot;双桥区&quot;, 500111);
		areaCode.put(&quot;渝北区&quot;, 500112);
		areaCode.put(&quot;巴南区&quot;, 500113);
		areaCode.put(&quot;黔江区&quot;, 500114);
		areaCode.put(&quot;长寿区&quot;, 500115);
		areaCode.put(&quot;江津区&quot;, 500116);
		areaCode.put(&quot;合川区&quot;, 500117);
		areaCode.put(&quot;永川区&quot;, 500118);
		areaCode.put(&quot;南川区&quot;, 500119);
		areaCode.put(&quot;县&quot;, 500200);
		areaCode.put(&quot;綦江县&quot;, 500222);
		areaCode.put(&quot;潼南县&quot;, 500223);
		areaCode.put(&quot;铜梁县&quot;, 500224);
		areaCode.put(&quot;大足县&quot;, 500225);
		areaCode.put(&quot;荣昌县&quot;, 500226);
		areaCode.put(&quot;璧山县&quot;, 500227);
		areaCode.put(&quot;梁平县&quot;, 500228);
		areaCode.put(&quot;城口县&quot;, 500229);
		areaCode.put(&quot;丰都县&quot;, 500230);
		areaCode.put(&quot;垫江县&quot;, 500231);
		areaCode.put(&quot;武隆县&quot;, 500232);
		areaCode.put(&quot;忠　县&quot;, 500233);
		areaCode.put(&quot;开　县&quot;, 500234);
		areaCode.put(&quot;云阳县&quot;, 500235);
		areaCode.put(&quot;奉节县&quot;, 500236);
		areaCode.put(&quot;巫山县&quot;, 500237);
		areaCode.put(&quot;巫溪县&quot;, 500238);
		areaCode.put(&quot;石柱土家族自治县&quot;, 500240);
		areaCode.put(&quot;秀山土家族苗族自治县&quot;, 500241);
		areaCode.put(&quot;酉阳土家族苗族自治县&quot;, 500242);
		areaCode.put(&quot;彭水苗族土家族自治县&quot;, 500243);
		areaCode.put(&quot;四川省&quot;, 510000);
		areaCode.put(&quot;成都市&quot;, 510100);
		areaCode.put(&quot;市辖区&quot;, 510101);
		areaCode.put(&quot;锦江区&quot;, 510104);
		areaCode.put(&quot;青羊区&quot;, 510105);
		areaCode.put(&quot;金牛区&quot;, 510106);
		areaCode.put(&quot;武侯区&quot;, 510107);
		areaCode.put(&quot;成华区&quot;, 510108);
		areaCode.put(&quot;龙泉驿区&quot;, 510112);
		areaCode.put(&quot;青白江区&quot;, 510113);
		areaCode.put(&quot;新都区&quot;, 510114);
		areaCode.put(&quot;温江区&quot;, 510115);
		areaCode.put(&quot;金堂县&quot;, 510121);
		areaCode.put(&quot;双流县&quot;, 510122);
		areaCode.put(&quot;郫　县&quot;, 510124);
		areaCode.put(&quot;大邑县&quot;, 510129);
		areaCode.put(&quot;蒲江县&quot;, 510131);
		areaCode.put(&quot;新津县&quot;, 510132);
		areaCode.put(&quot;都江堰市&quot;, 510181);
		areaCode.put(&quot;彭州市&quot;, 510182);
		areaCode.put(&quot;邛崃市&quot;, 510183);
		areaCode.put(&quot;崇州市&quot;, 510184);
		areaCode.put(&quot;自贡市&quot;, 510300);
		areaCode.put(&quot;市辖区&quot;, 510301);
		areaCode.put(&quot;自流井区&quot;, 510302);
		areaCode.put(&quot;贡井区&quot;, 510303);
		areaCode.put(&quot;大安区&quot;, 510304);
		areaCode.put(&quot;沿滩区&quot;, 510311);
		areaCode.put(&quot;荣　县&quot;, 510321);
		areaCode.put(&quot;富顺县&quot;, 510322);
		areaCode.put(&quot;攀枝花市&quot;, 510400);
		areaCode.put(&quot;市辖区&quot;, 510401);
		areaCode.put(&quot;东　区&quot;, 510402);
		areaCode.put(&quot;西　区&quot;, 510403);
		areaCode.put(&quot;仁和区&quot;, 510411);
		areaCode.put(&quot;米易县&quot;, 510421);
		areaCode.put(&quot;盐边县&quot;, 510422);
		areaCode.put(&quot;泸州市&quot;, 510500);
		areaCode.put(&quot;市辖区&quot;, 510501);
		areaCode.put(&quot;江阳区&quot;, 510502);
		areaCode.put(&quot;纳溪区&quot;, 510503);
		areaCode.put(&quot;龙马潭区&quot;, 510504);
		areaCode.put(&quot;泸　县&quot;, 510521);
		areaCode.put(&quot;合江县&quot;, 510522);
		areaCode.put(&quot;叙永县&quot;, 510524);
		areaCode.put(&quot;古蔺县&quot;, 510525);
		areaCode.put(&quot;德阳市&quot;, 510600);
		areaCode.put(&quot;市辖区&quot;, 510601);
		areaCode.put(&quot;旌阳区&quot;, 510603);
		areaCode.put(&quot;中江县&quot;, 510623);
		areaCode.put(&quot;罗江县&quot;, 510626);
		areaCode.put(&quot;广汉市&quot;, 510681);
		areaCode.put(&quot;什邡市&quot;, 510682);
		areaCode.put(&quot;绵竹市&quot;, 510683);
		areaCode.put(&quot;绵阳市&quot;, 510700);
		areaCode.put(&quot;市辖区&quot;, 510701);
		areaCode.put(&quot;涪城区&quot;, 510703);
		areaCode.put(&quot;游仙区&quot;, 510704);
		areaCode.put(&quot;三台县&quot;, 510722);
		areaCode.put(&quot;盐亭县&quot;, 510723);
		areaCode.put(&quot;安　县&quot;, 510724);
		areaCode.put(&quot;梓潼县&quot;, 510725);
		areaCode.put(&quot;北川羌族自治县&quot;, 510726);
		areaCode.put(&quot;平武县&quot;, 510727);
		areaCode.put(&quot;江油市&quot;, 510781);
		areaCode.put(&quot;广元市&quot;, 510800);
		areaCode.put(&quot;市辖区&quot;, 510801);
		areaCode.put(&quot;利州区&quot;, 510802);
		areaCode.put(&quot;元坝区&quot;, 510811);
		areaCode.put(&quot;朝天区&quot;, 510812);
		areaCode.put(&quot;旺苍县&quot;, 510821);
		areaCode.put(&quot;青川县&quot;, 510822);
		areaCode.put(&quot;剑阁县&quot;, 510823);
		areaCode.put(&quot;苍溪县&quot;, 510824);
		areaCode.put(&quot;遂宁市&quot;, 510900);
		areaCode.put(&quot;市辖区&quot;, 510901);
		areaCode.put(&quot;船山区&quot;, 510903);
		areaCode.put(&quot;安居区&quot;, 510904);
		areaCode.put(&quot;蓬溪县&quot;, 510921);
		areaCode.put(&quot;射洪县&quot;, 510922);
		areaCode.put(&quot;大英县&quot;, 510923);
		areaCode.put(&quot;内江市&quot;, 511000);
		areaCode.put(&quot;市辖区&quot;, 511001);
		areaCode.put(&quot;市中区&quot;, 511002);
		areaCode.put(&quot;东兴区&quot;, 511011);
		areaCode.put(&quot;威远县&quot;, 511024);
		areaCode.put(&quot;资中县&quot;, 511025);
		areaCode.put(&quot;隆昌县&quot;, 511028);
		areaCode.put(&quot;乐山市&quot;, 511100);
		areaCode.put(&quot;市辖区&quot;, 511101);
		areaCode.put(&quot;市中区&quot;, 511102);
		areaCode.put(&quot;沙湾区&quot;, 511111);
		areaCode.put(&quot;五通桥区&quot;, 511112);
		areaCode.put(&quot;金口河区&quot;, 511113);
		areaCode.put(&quot;犍为县&quot;, 511123);
		areaCode.put(&quot;井研县&quot;, 511124);
		areaCode.put(&quot;夹江县&quot;, 511126);
		areaCode.put(&quot;沐川县&quot;, 511129);
		areaCode.put(&quot;峨边彝族自治县&quot;, 511132);
		areaCode.put(&quot;马边彝族自治县&quot;, 511133);
		areaCode.put(&quot;峨眉山市&quot;, 511181);
		areaCode.put(&quot;南充市&quot;, 511300);
		areaCode.put(&quot;市辖区&quot;, 511301);
		areaCode.put(&quot;顺庆区&quot;, 511302);
		areaCode.put(&quot;高坪区&quot;, 511303);
		areaCode.put(&quot;嘉陵区&quot;, 511304);
		areaCode.put(&quot;南部县&quot;, 511321);
		areaCode.put(&quot;营山县&quot;, 511322);
		areaCode.put(&quot;蓬安县&quot;, 511323);
		areaCode.put(&quot;仪陇县&quot;, 511324);
		areaCode.put(&quot;西充县&quot;, 511325);
		areaCode.put(&quot;阆中市&quot;, 511381);
		areaCode.put(&quot;眉山市&quot;, 511400);
		areaCode.put(&quot;市辖区&quot;, 511401);
		areaCode.put(&quot;东坡区&quot;, 511402);
		areaCode.put(&quot;仁寿县&quot;, 511421);
		areaCode.put(&quot;彭山县&quot;, 511422);
		areaCode.put(&quot;洪雅县&quot;, 511423);
		areaCode.put(&quot;丹棱县&quot;, 511424);
		areaCode.put(&quot;青神县&quot;, 511425);
		areaCode.put(&quot;宜宾市&quot;, 511500);
		areaCode.put(&quot;市辖区&quot;, 511501);
		areaCode.put(&quot;翠屏区&quot;, 511502);
		areaCode.put(&quot;宜宾县&quot;, 511521);
		areaCode.put(&quot;南溪县&quot;, 511522);
		areaCode.put(&quot;江安县&quot;, 511523);
		areaCode.put(&quot;长宁县&quot;, 511524);
		areaCode.put(&quot;高　县&quot;, 511525);
		areaCode.put(&quot;珙　县&quot;, 511526);
		areaCode.put(&quot;筠连县&quot;, 511527);
		areaCode.put(&quot;兴文县&quot;, 511528);
		areaCode.put(&quot;屏山县&quot;, 511529);
		areaCode.put(&quot;广安市&quot;, 511600);
		areaCode.put(&quot;市辖区&quot;, 511601);
		areaCode.put(&quot;广安区&quot;, 511602);
		areaCode.put(&quot;岳池县&quot;, 511621);
		areaCode.put(&quot;武胜县&quot;, 511622);
		areaCode.put(&quot;邻水县&quot;, 511623);
		areaCode.put(&quot;华蓥市&quot;, 511681);
		areaCode.put(&quot;达州市&quot;, 511700);
		areaCode.put(&quot;市辖区&quot;, 511701);
		areaCode.put(&quot;通川区&quot;, 511702);
		areaCode.put(&quot;达　县&quot;, 511721);
		areaCode.put(&quot;宣汉县&quot;, 511722);
		areaCode.put(&quot;开江县&quot;, 511723);
		areaCode.put(&quot;大竹县&quot;, 511724);
		areaCode.put(&quot;渠　县&quot;, 511725);
		areaCode.put(&quot;万源市&quot;, 511781);
		areaCode.put(&quot;雅安市&quot;, 511800);
		areaCode.put(&quot;市辖区&quot;, 511801);
		areaCode.put(&quot;雨城区&quot;, 511802);
		areaCode.put(&quot;名山县&quot;, 511821);
		areaCode.put(&quot;荥经县&quot;, 511822);
		areaCode.put(&quot;汉源县&quot;, 511823);
		areaCode.put(&quot;石棉县&quot;, 511824);
		areaCode.put(&quot;天全县&quot;, 511825);
		areaCode.put(&quot;芦山县&quot;, 511826);
		areaCode.put(&quot;宝兴县&quot;, 511827);
		areaCode.put(&quot;巴中市&quot;, 511900);
		areaCode.put(&quot;市辖区&quot;, 511901);
		areaCode.put(&quot;巴州区&quot;, 511902);
		areaCode.put(&quot;通江县&quot;, 511921);
		areaCode.put(&quot;南江县&quot;, 511922);
		areaCode.put(&quot;平昌县&quot;, 511923);
		areaCode.put(&quot;资阳市&quot;, 512000);
		areaCode.put(&quot;市辖区&quot;, 512001);
		areaCode.put(&quot;雁江区&quot;, 512002);
		areaCode.put(&quot;安岳县&quot;, 512021);
		areaCode.put(&quot;乐至县&quot;, 512022);
		areaCode.put(&quot;简阳市&quot;, 512081);
		areaCode.put(&quot;阿坝藏族羌族自治州&quot;, 513200);
		areaCode.put(&quot;汶川县&quot;, 513221);
		areaCode.put(&quot;理　县&quot;, 513222);
		areaCode.put(&quot;茂　县&quot;, 513223);
		areaCode.put(&quot;松潘县&quot;, 513224);
		areaCode.put(&quot;九寨沟县&quot;, 513225);
		areaCode.put(&quot;金川县&quot;, 513226);
		areaCode.put(&quot;小金县&quot;, 513227);
		areaCode.put(&quot;黑水县&quot;, 513228);
		areaCode.put(&quot;马尔康县&quot;, 513229);
		areaCode.put(&quot;壤塘县&quot;, 513230);
		areaCode.put(&quot;阿坝县&quot;, 513231);
		areaCode.put(&quot;若尔盖县&quot;, 513232);
		areaCode.put(&quot;红原县&quot;, 513233);
		areaCode.put(&quot;甘孜藏族自治州&quot;, 513300);
		areaCode.put(&quot;康定县&quot;, 513321);
		areaCode.put(&quot;泸定县&quot;, 513322);
		areaCode.put(&quot;丹巴县&quot;, 513323);
		areaCode.put(&quot;九龙县&quot;, 513324);
		areaCode.put(&quot;雅江县&quot;, 513325);
		areaCode.put(&quot;道孚县&quot;, 513326);
		areaCode.put(&quot;炉霍县&quot;, 513327);
		areaCode.put(&quot;甘孜县&quot;, 513328);
		areaCode.put(&quot;新龙县&quot;, 513329);
		areaCode.put(&quot;德格县&quot;, 513330);
		areaCode.put(&quot;白玉县&quot;, 513331);
		areaCode.put(&quot;石渠县&quot;, 513332);
		areaCode.put(&quot;色达县&quot;, 513333);
		areaCode.put(&quot;理塘县&quot;, 513334);
		areaCode.put(&quot;巴塘县&quot;, 513335);
		areaCode.put(&quot;乡城县&quot;, 513336);
		areaCode.put(&quot;稻城县&quot;, 513337);
		areaCode.put(&quot;得荣县&quot;, 513338);
		areaCode.put(&quot;凉山彝族自治州&quot;, 513400);
		areaCode.put(&quot;西昌市&quot;, 513401);
		areaCode.put(&quot;木里藏族自治县&quot;, 513422);
		areaCode.put(&quot;盐源县&quot;, 513423);
		areaCode.put(&quot;德昌县&quot;, 513424);
		areaCode.put(&quot;会理县&quot;, 513425);
		areaCode.put(&quot;会东县&quot;, 513426);
		areaCode.put(&quot;宁南县&quot;, 513427);
		areaCode.put(&quot;普格县&quot;, 513428);
		areaCode.put(&quot;布拖县&quot;, 513429);
		areaCode.put(&quot;金阳县&quot;, 513430);
		areaCode.put(&quot;昭觉县&quot;, 513431);
		areaCode.put(&quot;喜德县&quot;, 513432);
		areaCode.put(&quot;冕宁县&quot;, 513433);
		areaCode.put(&quot;越西县&quot;, 513434);
		areaCode.put(&quot;甘洛县&quot;, 513435);
		areaCode.put(&quot;美姑县&quot;, 513436);
		areaCode.put(&quot;雷波县&quot;, 513437);
		areaCode.put(&quot;贵州省&quot;, 520000);
		areaCode.put(&quot;贵阳市&quot;, 520100);
		areaCode.put(&quot;市辖区&quot;, 520101);
		areaCode.put(&quot;南明区&quot;, 520102);
		areaCode.put(&quot;云岩区&quot;, 520103);
		areaCode.put(&quot;花溪区&quot;, 520111);
		areaCode.put(&quot;乌当区&quot;, 520112);
		areaCode.put(&quot;白云区&quot;, 520113);
		areaCode.put(&quot;小河区&quot;, 520114);
		areaCode.put(&quot;开阳县&quot;, 520121);
		areaCode.put(&quot;息烽县&quot;, 520122);
		areaCode.put(&quot;修文县&quot;, 520123);
		areaCode.put(&quot;清镇市&quot;, 520181);
		areaCode.put(&quot;六盘水市&quot;, 520200);
		areaCode.put(&quot;钟山区&quot;, 520201);
		areaCode.put(&quot;六枝特区&quot;, 520203);
		areaCode.put(&quot;水城县&quot;, 520221);
		areaCode.put(&quot;盘　县&quot;, 520222);
		areaCode.put(&quot;遵义市&quot;, 520300);
		areaCode.put(&quot;市辖区&quot;, 520301);
		areaCode.put(&quot;红花岗区&quot;, 520302);
		areaCode.put(&quot;汇川区&quot;, 520303);
		areaCode.put(&quot;遵义县&quot;, 520321);
		areaCode.put(&quot;桐梓县&quot;, 520322);
		areaCode.put(&quot;绥阳县&quot;, 520323);
		areaCode.put(&quot;正安县&quot;, 520324);
		areaCode.put(&quot;道真仡佬族苗族自治县&quot;, 520325);
		areaCode.put(&quot;务川仡佬族苗族自治县&quot;, 520326);
		areaCode.put(&quot;凤冈县&quot;, 520327);
		areaCode.put(&quot;湄潭县&quot;, 520328);
		areaCode.put(&quot;余庆县&quot;, 520329);
		areaCode.put(&quot;习水县&quot;, 520330);
		areaCode.put(&quot;赤水市&quot;, 520381);
		areaCode.put(&quot;仁怀市&quot;, 520382);
		areaCode.put(&quot;安顺市&quot;, 520400);
		areaCode.put(&quot;市辖区&quot;, 520401);
		areaCode.put(&quot;西秀区&quot;, 520402);
		areaCode.put(&quot;平坝县&quot;, 520421);
		areaCode.put(&quot;普定县&quot;, 520422);
		areaCode.put(&quot;镇宁布依族苗族自治县&quot;, 520423);
		areaCode.put(&quot;关岭布依族苗族自治县&quot;, 520424);
		areaCode.put(&quot;紫云苗族布依族自治县&quot;, 520425);
		areaCode.put(&quot;铜仁地区&quot;, 522200);
		areaCode.put(&quot;铜仁市&quot;, 522201);
		areaCode.put(&quot;江口县&quot;, 522222);
		areaCode.put(&quot;玉屏侗族自治县&quot;, 522223);
		areaCode.put(&quot;石阡县&quot;, 522224);
		areaCode.put(&quot;思南县&quot;, 522225);
		areaCode.put(&quot;印江土家族苗族自治县&quot;, 522226);
		areaCode.put(&quot;德江县&quot;, 522227);
		areaCode.put(&quot;沿河土家族自治县&quot;, 522228);
		areaCode.put(&quot;松桃苗族自治县&quot;, 522229);
		areaCode.put(&quot;万山特区&quot;, 522230);
		areaCode.put(&quot;黔西南布依族苗族自治州&quot;, 522300);
		areaCode.put(&quot;兴义市&quot;, 522301);
		areaCode.put(&quot;兴仁县&quot;, 522322);
		areaCode.put(&quot;普安县&quot;, 522323);
		areaCode.put(&quot;晴隆县&quot;, 522324);
		areaCode.put(&quot;贞丰县&quot;, 522325);
		areaCode.put(&quot;望谟县&quot;, 522326);
		areaCode.put(&quot;册亨县&quot;, 522327);
		areaCode.put(&quot;安龙县&quot;, 522328);
		areaCode.put(&quot;毕节地区&quot;, 522400);
		areaCode.put(&quot;毕节市&quot;, 522401);
		areaCode.put(&quot;大方县&quot;, 522422);
		areaCode.put(&quot;黔西县&quot;, 522423);
		areaCode.put(&quot;金沙县&quot;, 522424);
		areaCode.put(&quot;织金县&quot;, 522425);
		areaCode.put(&quot;纳雍县&quot;, 522426);
		areaCode.put(&quot;威宁彝族回族苗族自治县&quot;, 522427);
		areaCode.put(&quot;赫章县&quot;, 522428);
		areaCode.put(&quot;黔东南苗族侗族自治州&quot;, 522600);
		areaCode.put(&quot;凯里市&quot;, 522601);
		areaCode.put(&quot;黄平县&quot;, 522622);
		areaCode.put(&quot;施秉县&quot;, 522623);
		areaCode.put(&quot;三穗县&quot;, 522624);
		areaCode.put(&quot;镇远县&quot;, 522625);
		areaCode.put(&quot;岑巩县&quot;, 522626);
		areaCode.put(&quot;天柱县&quot;, 522627);
		areaCode.put(&quot;锦屏县&quot;, 522628);
		areaCode.put(&quot;剑河县&quot;, 522629);
		areaCode.put(&quot;台江县&quot;, 522630);
		areaCode.put(&quot;黎平县&quot;, 522631);
		areaCode.put(&quot;榕江县&quot;, 522632);
		areaCode.put(&quot;从江县&quot;, 522633);
		areaCode.put(&quot;雷山县&quot;, 522634);
		areaCode.put(&quot;麻江县&quot;, 522635);
		areaCode.put(&quot;丹寨县&quot;, 522636);
		areaCode.put(&quot;黔南布依族苗族自治州&quot;, 522700);
		areaCode.put(&quot;都匀市&quot;, 522701);
		areaCode.put(&quot;福泉市&quot;, 522702);
		areaCode.put(&quot;荔波县&quot;, 522722);
		areaCode.put(&quot;贵定县&quot;, 522723);
		areaCode.put(&quot;瓮安县&quot;, 522725);
		areaCode.put(&quot;独山县&quot;, 522726);
		areaCode.put(&quot;平塘县&quot;, 522727);
		areaCode.put(&quot;罗甸县&quot;, 522728);
		areaCode.put(&quot;长顺县&quot;, 522729);
		areaCode.put(&quot;龙里县&quot;, 522730);
		areaCode.put(&quot;惠水县&quot;, 522731);
		areaCode.put(&quot;三都水族自治县&quot;, 522732);
		areaCode.put(&quot;云南省&quot;, 530000);
		areaCode.put(&quot;昆明市&quot;, 530100);
		areaCode.put(&quot;市辖区&quot;, 530101);
		areaCode.put(&quot;五华区&quot;, 530102);
		areaCode.put(&quot;盘龙区&quot;, 530103);
		areaCode.put(&quot;官渡区&quot;, 530111);
		areaCode.put(&quot;西山区&quot;, 530112);
		areaCode.put(&quot;东川区&quot;, 530113);
		areaCode.put(&quot;呈贡县&quot;, 530121);
		areaCode.put(&quot;晋宁县&quot;, 530122);
		areaCode.put(&quot;富民县&quot;, 530124);
		areaCode.put(&quot;宜良县&quot;, 530125);
		areaCode.put(&quot;石林彝族自治县&quot;, 530126);
		areaCode.put(&quot;嵩明县&quot;, 530127);
		areaCode.put(&quot;禄劝彝族苗族自治县&quot;, 530128);
		areaCode.put(&quot;寻甸回族彝族自治县&quot;, 530129);
		areaCode.put(&quot;安宁市&quot;, 530181);
		areaCode.put(&quot;曲靖市&quot;, 530300);
		areaCode.put(&quot;市辖区&quot;, 530301);
		areaCode.put(&quot;麒麟区&quot;, 530302);
		areaCode.put(&quot;马龙县&quot;, 530321);
		areaCode.put(&quot;陆良县&quot;, 530322);
		areaCode.put(&quot;师宗县&quot;, 530323);
		areaCode.put(&quot;罗平县&quot;, 530324);
		areaCode.put(&quot;富源县&quot;, 530325);
		areaCode.put(&quot;会泽县&quot;, 530326);
		areaCode.put(&quot;沾益县&quot;, 530328);
		areaCode.put(&quot;宣威市&quot;, 530381);
		areaCode.put(&quot;玉溪市&quot;, 530400);
		areaCode.put(&quot;市辖区&quot;, 530401);
		areaCode.put(&quot;红塔区&quot;, 530402);
		areaCode.put(&quot;江川县&quot;, 530421);
		areaCode.put(&quot;澄江县&quot;, 530422);
		areaCode.put(&quot;通海县&quot;, 530423);
		areaCode.put(&quot;华宁县&quot;, 530424);
		areaCode.put(&quot;易门县&quot;, 530425);
		areaCode.put(&quot;峨山彝族自治县&quot;, 530426);
		areaCode.put(&quot;新平彝族傣族自治县&quot;, 530427);
		areaCode.put(&quot;元江哈尼族彝族傣族自治县&quot;, 530428);
		areaCode.put(&quot;保山市&quot;, 530500);
		areaCode.put(&quot;市辖区&quot;, 530501);
		areaCode.put(&quot;隆阳区&quot;, 530502);
		areaCode.put(&quot;施甸县&quot;, 530521);
		areaCode.put(&quot;腾冲县&quot;, 530522);
		areaCode.put(&quot;龙陵县&quot;, 530523);
		areaCode.put(&quot;昌宁县&quot;, 530524);
		areaCode.put(&quot;昭通市&quot;, 530600);
		areaCode.put(&quot;市辖区&quot;, 530601);
		areaCode.put(&quot;昭阳区&quot;, 530602);
		areaCode.put(&quot;鲁甸县&quot;, 530621);
		areaCode.put(&quot;巧家县&quot;, 530622);
		areaCode.put(&quot;盐津县&quot;, 530623);
		areaCode.put(&quot;大关县&quot;, 530624);
		areaCode.put(&quot;永善县&quot;, 530625);
		areaCode.put(&quot;绥江县&quot;, 530626);
		areaCode.put(&quot;镇雄县&quot;, 530627);
		areaCode.put(&quot;彝良县&quot;, 530628);
		areaCode.put(&quot;威信县&quot;, 530629);
		areaCode.put(&quot;水富县&quot;, 530630);
		areaCode.put(&quot;丽江市&quot;, 530700);
		areaCode.put(&quot;市辖区&quot;, 530701);
		areaCode.put(&quot;古城区&quot;, 530702);
		areaCode.put(&quot;玉龙纳西族自治县&quot;, 530721);
		areaCode.put(&quot;永胜县&quot;, 530722);
		areaCode.put(&quot;华坪县&quot;, 530723);
		areaCode.put(&quot;宁蒗彝族自治县&quot;, 530724);
		areaCode.put(&quot;普洱市&quot;, 530800);
		areaCode.put(&quot;市辖区&quot;, 530801);
		areaCode.put(&quot;思茅区&quot;, 530802);
		areaCode.put(&quot;宁洱哈尼族彝族自治县&quot;, 530821);
		areaCode.put(&quot;墨江哈尼族自治县&quot;, 530822);
		areaCode.put(&quot;景东彝族自治县&quot;, 530823);
		areaCode.put(&quot;景谷傣族彝族自治县&quot;, 530824);
		areaCode.put(&quot;镇沅彝族哈尼族拉祜族自治县&quot;, 530825);
		areaCode.put(&quot;江城哈尼族彝族自治县&quot;, 530826);
		areaCode.put(&quot;孟连傣族拉祜族佤族自治县&quot;, 530827);
		areaCode.put(&quot;澜沧拉祜族自治县&quot;, 530828);
		areaCode.put(&quot;西盟佤族自治县&quot;, 530829);
		areaCode.put(&quot;临沧市&quot;, 530900);
		areaCode.put(&quot;市辖区&quot;, 530901);
		areaCode.put(&quot;临翔区&quot;, 530902);
		areaCode.put(&quot;凤庆县&quot;, 530921);
		areaCode.put(&quot;云　县&quot;, 530922);
		areaCode.put(&quot;永德县&quot;, 530923);
		areaCode.put(&quot;镇康县&quot;, 530924);
		areaCode.put(&quot;双江拉祜族佤族布朗族傣族自治县&quot;, 530925);
		areaCode.put(&quot;耿马傣族佤族自治县&quot;, 530926);
		areaCode.put(&quot;沧源佤族自治县&quot;, 530927);
		areaCode.put(&quot;楚雄彝族自治州&quot;, 532300);
		areaCode.put(&quot;楚雄市&quot;, 532301);
		areaCode.put(&quot;双柏县&quot;, 532322);
		areaCode.put(&quot;牟定县&quot;, 532323);
		areaCode.put(&quot;南华县&quot;, 532324);
		areaCode.put(&quot;姚安县&quot;, 532325);
		areaCode.put(&quot;大姚县&quot;, 532326);
		areaCode.put(&quot;永仁县&quot;, 532327);
		areaCode.put(&quot;元谋县&quot;, 532328);
		areaCode.put(&quot;武定县&quot;, 532329);
		areaCode.put(&quot;禄丰县&quot;, 532331);
		areaCode.put(&quot;红河哈尼族彝族自治州&quot;, 532500);
		areaCode.put(&quot;个旧市&quot;, 532501);
		areaCode.put(&quot;开远市&quot;, 532502);
		areaCode.put(&quot;蒙自县&quot;, 532522);
		areaCode.put(&quot;屏边苗族自治县&quot;, 532523);
		areaCode.put(&quot;建水县&quot;, 532524);
		areaCode.put(&quot;石屏县&quot;, 532525);
		areaCode.put(&quot;弥勒县&quot;, 532526);
		areaCode.put(&quot;泸西县&quot;, 532527);
		areaCode.put(&quot;元阳县&quot;, 532528);
		areaCode.put(&quot;红河县&quot;, 532529);
		areaCode.put(&quot;金平苗族瑶族傣族自治县&quot;, 532530);
		areaCode.put(&quot;绿春县&quot;, 532531);
		areaCode.put(&quot;河口瑶族自治县&quot;, 532532);
		areaCode.put(&quot;文山壮族苗族自治州&quot;, 532600);
		areaCode.put(&quot;文山县&quot;, 532621);
		areaCode.put(&quot;砚山县&quot;, 532622);
		areaCode.put(&quot;西畴县&quot;, 532623);
		areaCode.put(&quot;麻栗坡县&quot;, 532624);
		areaCode.put(&quot;马关县&quot;, 532625);
		areaCode.put(&quot;丘北县&quot;, 532626);
		areaCode.put(&quot;广南县&quot;, 532627);
		areaCode.put(&quot;富宁县&quot;, 532628);
		areaCode.put(&quot;西双版纳傣族自治州&quot;, 532800);
		areaCode.put(&quot;景洪市&quot;, 532801);
		areaCode.put(&quot;勐海县&quot;, 532822);
		areaCode.put(&quot;勐腊县&quot;, 532823);
		areaCode.put(&quot;大理白族自治州&quot;, 532900);
		areaCode.put(&quot;大理市&quot;, 532901);
		areaCode.put(&quot;漾濞彝族自治县&quot;, 532922);
		areaCode.put(&quot;祥云县&quot;, 532923);
		areaCode.put(&quot;宾川县&quot;, 532924);
		areaCode.put(&quot;弥渡县&quot;, 532925);
		areaCode.put(&quot;南涧彝族自治县&quot;, 532926);
		areaCode.put(&quot;巍山彝族回族自治县&quot;, 532927);
		areaCode.put(&quot;永平县&quot;, 532928);
		areaCode.put(&quot;云龙县&quot;, 532929);
		areaCode.put(&quot;洱源县&quot;, 532930);
		areaCode.put(&quot;剑川县&quot;, 532931);
		areaCode.put(&quot;鹤庆县&quot;, 532932);
		areaCode.put(&quot;德宏傣族景颇族自治州&quot;, 533100);
		areaCode.put(&quot;瑞丽市&quot;, 533102);
		areaCode.put(&quot;潞西市&quot;, 533103);
		areaCode.put(&quot;梁河县&quot;, 533122);
		areaCode.put(&quot;盈江县&quot;, 533123);
		areaCode.put(&quot;陇川县&quot;, 533124);
		areaCode.put(&quot;怒江傈僳族自治州&quot;, 533300);
		areaCode.put(&quot;泸水县&quot;, 533321);
		areaCode.put(&quot;福贡县&quot;, 533323);
		areaCode.put(&quot;贡山独龙族怒族自治县&quot;, 533324);
		areaCode.put(&quot;兰坪白族普米族自治县&quot;, 533325);
		areaCode.put(&quot;迪庆藏族自治州&quot;, 533400);
		areaCode.put(&quot;香格里拉县&quot;, 533421);
		areaCode.put(&quot;德钦县&quot;, 533422);
		areaCode.put(&quot;维西傈僳族自治县&quot;, 533423);
		areaCode.put(&quot;西藏自治区&quot;, 540000);
		areaCode.put(&quot;拉萨市&quot;, 540100);
		areaCode.put(&quot;市辖区&quot;, 540101);
		areaCode.put(&quot;城关区&quot;, 540102);
		areaCode.put(&quot;林周县&quot;, 540121);
		areaCode.put(&quot;当雄县&quot;, 540122);
		areaCode.put(&quot;尼木县&quot;, 540123);
		areaCode.put(&quot;曲水县&quot;, 540124);
		areaCode.put(&quot;堆龙德庆县&quot;, 540125);
		areaCode.put(&quot;达孜县&quot;, 540126);
		areaCode.put(&quot;墨竹工卡县&quot;, 540127);
		areaCode.put(&quot;昌都地区&quot;, 542100);
		areaCode.put(&quot;昌都县&quot;, 542121);
		areaCode.put(&quot;江达县&quot;, 542122);
		areaCode.put(&quot;贡觉县&quot;, 542123);
		areaCode.put(&quot;类乌齐县&quot;, 542124);
		areaCode.put(&quot;丁青县&quot;, 542125);
		areaCode.put(&quot;察雅县&quot;, 542126);
		areaCode.put(&quot;八宿县&quot;, 542127);
		areaCode.put(&quot;左贡县&quot;, 542128);
		areaCode.put(&quot;芒康县&quot;, 542129);
		areaCode.put(&quot;洛隆县&quot;, 542132);
		areaCode.put(&quot;边坝县&quot;, 542133);
		areaCode.put(&quot;山南地区&quot;, 542200);
		areaCode.put(&quot;乃东县&quot;, 542221);
		areaCode.put(&quot;扎囊县&quot;, 542222);
		areaCode.put(&quot;贡嘎县&quot;, 542223);
		areaCode.put(&quot;桑日县&quot;, 542224);
		areaCode.put(&quot;琼结县&quot;, 542225);
		areaCode.put(&quot;曲松县&quot;, 542226);
		areaCode.put(&quot;措美县&quot;, 542227);
		areaCode.put(&quot;洛扎县&quot;, 542228);
		areaCode.put(&quot;加查县&quot;, 542229);
		areaCode.put(&quot;隆子县&quot;, 542231);
		areaCode.put(&quot;错那县&quot;, 542232);
		areaCode.put(&quot;浪卡子县&quot;, 542233);
		areaCode.put(&quot;日喀则地区&quot;, 542300);
		areaCode.put(&quot;日喀则市&quot;, 542301);
		areaCode.put(&quot;南木林县&quot;, 542322);
		areaCode.put(&quot;江孜县&quot;, 542323);
		areaCode.put(&quot;定日县&quot;, 542324);
		areaCode.put(&quot;萨迦县&quot;, 542325);
		areaCode.put(&quot;拉孜县&quot;, 542326);
		areaCode.put(&quot;昂仁县&quot;, 542327);
		areaCode.put(&quot;谢通门县&quot;, 542328);
		areaCode.put(&quot;白朗县&quot;, 542329);
		areaCode.put(&quot;仁布县&quot;, 542330);
		areaCode.put(&quot;康马县&quot;, 542331);
		areaCode.put(&quot;定结县&quot;, 542332);
		areaCode.put(&quot;仲巴县&quot;, 542333);
		areaCode.put(&quot;亚东县&quot;, 542334);
		areaCode.put(&quot;吉隆县&quot;, 542335);
		areaCode.put(&quot;聂拉木县&quot;, 542336);
		areaCode.put(&quot;萨嘎县&quot;, 542337);
		areaCode.put(&quot;岗巴县&quot;, 542338);
		areaCode.put(&quot;那曲地区&quot;, 542400);
		areaCode.put(&quot;那曲县&quot;, 542421);
		areaCode.put(&quot;嘉黎县&quot;, 542422);
		areaCode.put(&quot;比如县&quot;, 542423);
		areaCode.put(&quot;聂荣县&quot;, 542424);
		areaCode.put(&quot;安多县&quot;, 542425);
		areaCode.put(&quot;申扎县&quot;, 542426);
		areaCode.put(&quot;索　县&quot;, 542427);
		areaCode.put(&quot;班戈县&quot;, 542428);
		areaCode.put(&quot;巴青县&quot;, 542429);
		areaCode.put(&quot;尼玛县&quot;, 542430);
		areaCode.put(&quot;阿里地区&quot;, 542500);
		areaCode.put(&quot;普兰县&quot;, 542521);
		areaCode.put(&quot;札达县&quot;, 542522);
		areaCode.put(&quot;噶尔县&quot;, 542523);
		areaCode.put(&quot;日土县&quot;, 542524);
		areaCode.put(&quot;革吉县&quot;, 542525);
		areaCode.put(&quot;改则县&quot;, 542526);
		areaCode.put(&quot;措勤县&quot;, 542527);
		areaCode.put(&quot;林芝地区&quot;, 542600);
		areaCode.put(&quot;林芝县&quot;, 542621);
		areaCode.put(&quot;工布江达县&quot;, 542622);
		areaCode.put(&quot;米林县&quot;, 542623);
		areaCode.put(&quot;墨脱县&quot;, 542624);
		areaCode.put(&quot;波密县&quot;, 542625);
		areaCode.put(&quot;察隅县&quot;, 542626);
		areaCode.put(&quot;朗　县&quot;, 542627);
		areaCode.put(&quot;陕西省&quot;, 610000);
		areaCode.put(&quot;西安市&quot;, 610100);
		areaCode.put(&quot;市辖区&quot;, 610101);
		areaCode.put(&quot;新城区&quot;, 610102);
		areaCode.put(&quot;碑林区&quot;, 610103);
		areaCode.put(&quot;莲湖区&quot;, 610104);
		areaCode.put(&quot;灞桥区&quot;, 610111);
		areaCode.put(&quot;未央区&quot;, 610112);
		areaCode.put(&quot;雁塔区&quot;, 610113);
		areaCode.put(&quot;阎良区&quot;, 610114);
		areaCode.put(&quot;临潼区&quot;, 610115);
		areaCode.put(&quot;长安区&quot;, 610116);
		areaCode.put(&quot;蓝田县&quot;, 610122);
		areaCode.put(&quot;周至县&quot;, 610124);
		areaCode.put(&quot;户　县&quot;, 610125);
		areaCode.put(&quot;高陵县&quot;, 610126);
		areaCode.put(&quot;铜川市&quot;, 610200);
		areaCode.put(&quot;市辖区&quot;, 610201);
		areaCode.put(&quot;王益区&quot;, 610202);
		areaCode.put(&quot;印台区&quot;, 610203);
		areaCode.put(&quot;耀州区&quot;, 610204);
		areaCode.put(&quot;宜君县&quot;, 610222);
		areaCode.put(&quot;宝鸡市&quot;, 610300);
		areaCode.put(&quot;市辖区&quot;, 610301);
		areaCode.put(&quot;渭滨区&quot;, 610302);
		areaCode.put(&quot;金台区&quot;, 610303);
		areaCode.put(&quot;陈仓区&quot;, 610304);
		areaCode.put(&quot;凤翔县&quot;, 610322);
		areaCode.put(&quot;岐山县&quot;, 610323);
		areaCode.put(&quot;扶风县&quot;, 610324);
		areaCode.put(&quot;眉　县&quot;, 610326);
		areaCode.put(&quot;陇　县&quot;, 610327);
		areaCode.put(&quot;千阳县&quot;, 610328);
		areaCode.put(&quot;麟游县&quot;, 610329);
		areaCode.put(&quot;凤　县&quot;, 610330);
		areaCode.put(&quot;太白县&quot;, 610331);
		areaCode.put(&quot;咸阳市&quot;, 610400);
		areaCode.put(&quot;市辖区&quot;, 610401);
		areaCode.put(&quot;秦都区&quot;, 610402);
		areaCode.put(&quot;杨陵区&quot;, 610403);
		areaCode.put(&quot;渭城区&quot;, 610404);
		areaCode.put(&quot;三原县&quot;, 610422);
		areaCode.put(&quot;泾阳县&quot;, 610423);
		areaCode.put(&quot;乾　县&quot;, 610424);
		areaCode.put(&quot;礼泉县&quot;, 610425);
		areaCode.put(&quot;永寿县&quot;, 610426);
		areaCode.put(&quot;彬　县&quot;, 610427);
		areaCode.put(&quot;长武县&quot;, 610428);
		areaCode.put(&quot;旬邑县&quot;, 610429);
		areaCode.put(&quot;淳化县&quot;, 610430);
		areaCode.put(&quot;武功县&quot;, 610431);
		areaCode.put(&quot;兴平市&quot;, 610481);
		areaCode.put(&quot;渭南市&quot;, 610500);
		areaCode.put(&quot;市辖区&quot;, 610501);
		areaCode.put(&quot;临渭区&quot;, 610502);
		areaCode.put(&quot;华　县&quot;, 610521);
		areaCode.put(&quot;潼关县&quot;, 610522);
		areaCode.put(&quot;大荔县&quot;, 610523);
		areaCode.put(&quot;合阳县&quot;, 610524);
		areaCode.put(&quot;澄城县&quot;, 610525);
		areaCode.put(&quot;蒲城县&quot;, 610526);
		areaCode.put(&quot;白水县&quot;, 610527);
		areaCode.put(&quot;富平县&quot;, 610528);
		areaCode.put(&quot;韩城市&quot;, 610581);
		areaCode.put(&quot;华阴市&quot;, 610582);
		areaCode.put(&quot;延安市&quot;, 610600);
		areaCode.put(&quot;市辖区&quot;, 610601);
		areaCode.put(&quot;宝塔区&quot;, 610602);
		areaCode.put(&quot;延长县&quot;, 610621);
		areaCode.put(&quot;延川县&quot;, 610622);
		areaCode.put(&quot;子长县&quot;, 610623);
		areaCode.put(&quot;安塞县&quot;, 610624);
		areaCode.put(&quot;志丹县&quot;, 610625);
		areaCode.put(&quot;吴起县&quot;, 610626);
		areaCode.put(&quot;甘泉县&quot;, 610627);
		areaCode.put(&quot;富　县&quot;, 610628);
		areaCode.put(&quot;洛川县&quot;, 610629);
		areaCode.put(&quot;宜川县&quot;, 610630);
		areaCode.put(&quot;黄龙县&quot;, 610631);
		areaCode.put(&quot;黄陵县&quot;, 610632);
		areaCode.put(&quot;汉中市&quot;, 610700);
		areaCode.put(&quot;市辖区&quot;, 610701);
		areaCode.put(&quot;汉台区&quot;, 610702);
		areaCode.put(&quot;南郑县&quot;, 610721);
		areaCode.put(&quot;城固县&quot;, 610722);
		areaCode.put(&quot;洋　县&quot;, 610723);
		areaCode.put(&quot;西乡县&quot;, 610724);
		areaCode.put(&quot;勉　县&quot;, 610725);
		areaCode.put(&quot;宁强县&quot;, 610726);
		areaCode.put(&quot;略阳县&quot;, 610727);
		areaCode.put(&quot;镇巴县&quot;, 610728);
		areaCode.put(&quot;留坝县&quot;, 610729);
		areaCode.put(&quot;佛坪县&quot;, 610730);
		areaCode.put(&quot;榆林市&quot;, 610800);
		areaCode.put(&quot;市辖区&quot;, 610801);
		areaCode.put(&quot;榆阳区&quot;, 610802);
		areaCode.put(&quot;神木县&quot;, 610821);
		areaCode.put(&quot;府谷县&quot;, 610822);
		areaCode.put(&quot;横山县&quot;, 610823);
		areaCode.put(&quot;靖边县&quot;, 610824);
		areaCode.put(&quot;定边县&quot;, 610825);
		areaCode.put(&quot;绥德县&quot;, 610826);
		areaCode.put(&quot;米脂县&quot;, 610827);
		areaCode.put(&quot;佳　县&quot;, 610828);
		areaCode.put(&quot;吴堡县&quot;, 610829);
		areaCode.put(&quot;清涧县&quot;, 610830);
		areaCode.put(&quot;子洲县&quot;, 610831);
		areaCode.put(&quot;安康市&quot;, 610900);
		areaCode.put(&quot;市辖区&quot;, 610901);
		areaCode.put(&quot;汉滨区&quot;, 610902);
		areaCode.put(&quot;汉阴县&quot;, 610921);
		areaCode.put(&quot;石泉县&quot;, 610922);
		areaCode.put(&quot;宁陕县&quot;, 610923);
		areaCode.put(&quot;紫阳县&quot;, 610924);
		areaCode.put(&quot;岚皋县&quot;, 610925);
		areaCode.put(&quot;平利县&quot;, 610926);
		areaCode.put(&quot;镇坪县&quot;, 610927);
		areaCode.put(&quot;旬阳县&quot;, 610928);
		areaCode.put(&quot;白河县&quot;, 610929);
		areaCode.put(&quot;商洛市&quot;, 611000);
		areaCode.put(&quot;市辖区&quot;, 611001);
		areaCode.put(&quot;商州区&quot;, 611002);
		areaCode.put(&quot;洛南县&quot;, 611021);
		areaCode.put(&quot;丹凤县&quot;, 611022);
		areaCode.put(&quot;商南县&quot;, 611023);
		areaCode.put(&quot;山阳县&quot;, 611024);
		areaCode.put(&quot;镇安县&quot;, 611025);
		areaCode.put(&quot;柞水县&quot;, 611026);
		areaCode.put(&quot;甘肃省&quot;, 620000);
		areaCode.put(&quot;兰州市&quot;, 620100);
		areaCode.put(&quot;市辖区&quot;, 620101);
		areaCode.put(&quot;城关区&quot;, 620102);
		areaCode.put(&quot;七里河区&quot;, 620103);
		areaCode.put(&quot;西固区&quot;, 620104);
		areaCode.put(&quot;安宁区&quot;, 620105);
		areaCode.put(&quot;红古区&quot;, 620111);
		areaCode.put(&quot;永登县&quot;, 620121);
		areaCode.put(&quot;皋兰县&quot;, 620122);
		areaCode.put(&quot;榆中县&quot;, 620123);
		areaCode.put(&quot;嘉峪关市&quot;, 620200);
		areaCode.put(&quot;市辖区&quot;, 620201);
		areaCode.put(&quot;金昌市&quot;, 620300);
		areaCode.put(&quot;市辖区&quot;, 620301);
		areaCode.put(&quot;金川区&quot;, 620302);
		areaCode.put(&quot;永昌县&quot;, 620321);
		areaCode.put(&quot;白银市&quot;, 620400);
		areaCode.put(&quot;市辖区&quot;, 620401);
		areaCode.put(&quot;白银区&quot;, 620402);
		areaCode.put(&quot;平川区&quot;, 620403);
		areaCode.put(&quot;靖远县&quot;, 620421);
		areaCode.put(&quot;会宁县&quot;, 620422);
		areaCode.put(&quot;景泰县&quot;, 620423);
		areaCode.put(&quot;天水市&quot;, 620500);
		areaCode.put(&quot;市辖区&quot;, 620501);
		areaCode.put(&quot;秦州区&quot;, 620502);
		areaCode.put(&quot;麦积区&quot;, 620503);
		areaCode.put(&quot;清水县&quot;, 620521);
		areaCode.put(&quot;秦安县&quot;, 620522);
		areaCode.put(&quot;甘谷县&quot;, 620523);
		areaCode.put(&quot;武山县&quot;, 620524);
		areaCode.put(&quot;张家川回族自治县&quot;, 620525);
		areaCode.put(&quot;武威市&quot;, 620600);
		areaCode.put(&quot;市辖区&quot;, 620601);
		areaCode.put(&quot;凉州区&quot;, 620602);
		areaCode.put(&quot;民勤县&quot;, 620621);
		areaCode.put(&quot;古浪县&quot;, 620622);
		areaCode.put(&quot;天祝藏族自治县&quot;, 620623);
		areaCode.put(&quot;张掖市&quot;, 620700);
		areaCode.put(&quot;市辖区&quot;, 620701);
		areaCode.put(&quot;甘州区&quot;, 620702);
		areaCode.put(&quot;肃南裕固族自治县&quot;, 620721);
		areaCode.put(&quot;民乐县&quot;, 620722);
		areaCode.put(&quot;临泽县&quot;, 620723);
		areaCode.put(&quot;高台县&quot;, 620724);
		areaCode.put(&quot;山丹县&quot;, 620725);
		areaCode.put(&quot;平凉市&quot;, 620800);
		areaCode.put(&quot;市辖区&quot;, 620801);
		areaCode.put(&quot;崆峒区&quot;, 620802);
		areaCode.put(&quot;泾川县&quot;, 620821);
		areaCode.put(&quot;灵台县&quot;, 620822);
		areaCode.put(&quot;崇信县&quot;, 620823);
		areaCode.put(&quot;华亭县&quot;, 620824);
		areaCode.put(&quot;庄浪县&quot;, 620825);
		areaCode.put(&quot;静宁县&quot;, 620826);
		areaCode.put(&quot;酒泉市&quot;, 620900);
		areaCode.put(&quot;市辖区&quot;, 620901);
		areaCode.put(&quot;肃州区&quot;, 620902);
		areaCode.put(&quot;金塔县&quot;, 620921);
		areaCode.put(&quot;瓜州县&quot;, 620922);
		areaCode.put(&quot;肃北蒙古族自治县&quot;, 620923);
		areaCode.put(&quot;阿克塞哈萨克族自治县&quot;, 620924);
		areaCode.put(&quot;玉门市&quot;, 620981);
		areaCode.put(&quot;敦煌市&quot;, 620982);
		areaCode.put(&quot;庆阳市&quot;, 621000);
		areaCode.put(&quot;市辖区&quot;, 621001);
		areaCode.put(&quot;西峰区&quot;, 621002);
		areaCode.put(&quot;庆城县&quot;, 621021);
		areaCode.put(&quot;环　县&quot;, 621022);
		areaCode.put(&quot;华池县&quot;, 621023);
		areaCode.put(&quot;合水县&quot;, 621024);
		areaCode.put(&quot;正宁县&quot;, 621025);
		areaCode.put(&quot;宁　县&quot;, 621026);
		areaCode.put(&quot;镇原县&quot;, 621027);
		areaCode.put(&quot;定西市&quot;, 621100);
		areaCode.put(&quot;市辖区&quot;, 621101);
		areaCode.put(&quot;安定区&quot;, 621102);
		areaCode.put(&quot;通渭县&quot;, 621121);
		areaCode.put(&quot;陇西县&quot;, 621122);
		areaCode.put(&quot;渭源县&quot;, 621123);
		areaCode.put(&quot;临洮县&quot;, 621124);
		areaCode.put(&quot;漳　县&quot;, 621125);
		areaCode.put(&quot;岷　县&quot;, 621126);
		areaCode.put(&quot;陇南市&quot;, 621200);
		areaCode.put(&quot;市辖区&quot;, 621201);
		areaCode.put(&quot;武都区&quot;, 621202);
		areaCode.put(&quot;成　县&quot;, 621221);
		areaCode.put(&quot;文　县&quot;, 621222);
		areaCode.put(&quot;宕昌县&quot;, 621223);
		areaCode.put(&quot;康　县&quot;, 621224);
		areaCode.put(&quot;西和县&quot;, 621225);
		areaCode.put(&quot;礼　县&quot;, 621226);
		areaCode.put(&quot;徽　县&quot;, 621227);
		areaCode.put(&quot;两当县&quot;, 621228);
		areaCode.put(&quot;临夏回族自治州&quot;, 622900);
		areaCode.put(&quot;临夏市&quot;, 622901);
		areaCode.put(&quot;临夏县&quot;, 622921);
		areaCode.put(&quot;康乐县&quot;, 622922);
		areaCode.put(&quot;永靖县&quot;, 622923);
		areaCode.put(&quot;广河县&quot;, 622924);
		areaCode.put(&quot;和政县&quot;, 622925);
		areaCode.put(&quot;东乡族自治县&quot;, 622926);
		areaCode.put(&quot;积石山保安族东乡族撒拉族自治县&quot;, 622927);
		areaCode.put(&quot;甘南藏族自治州&quot;, 623000);
		areaCode.put(&quot;合作市&quot;, 623001);
		areaCode.put(&quot;临潭县&quot;, 623021);
		areaCode.put(&quot;卓尼县&quot;, 623022);
		areaCode.put(&quot;舟曲县&quot;, 623023);
		areaCode.put(&quot;迭部县&quot;, 623024);
		areaCode.put(&quot;玛曲县&quot;, 623025);
		areaCode.put(&quot;碌曲县&quot;, 623026);
		areaCode.put(&quot;夏河县&quot;, 623027);
		areaCode.put(&quot;青海省&quot;, 630000);
		areaCode.put(&quot;西宁市&quot;, 630100);
		areaCode.put(&quot;市辖区&quot;, 630101);
		areaCode.put(&quot;城东区&quot;, 630102);
		areaCode.put(&quot;城中区&quot;, 630103);
		areaCode.put(&quot;城西区&quot;, 630104);
		areaCode.put(&quot;城北区&quot;, 630105);
		areaCode.put(&quot;大通回族土族自治县&quot;, 630121);
		areaCode.put(&quot;湟中县&quot;, 630122);
		areaCode.put(&quot;湟源县&quot;, 630123);
		areaCode.put(&quot;海东地区&quot;, 632100);
		areaCode.put(&quot;平安县&quot;, 632121);
		areaCode.put(&quot;民和回族土族自治县&quot;, 632122);
		areaCode.put(&quot;乐都县&quot;, 632123);
		areaCode.put(&quot;互助土族自治县&quot;, 632126);
		areaCode.put(&quot;化隆回族自治县&quot;, 632127);
		areaCode.put(&quot;循化撒拉族自治县&quot;, 632128);
		areaCode.put(&quot;海北藏族自治州&quot;, 632200);
		areaCode.put(&quot;门源回族自治县&quot;, 632221);
		areaCode.put(&quot;祁连县&quot;, 632222);
		areaCode.put(&quot;海晏县&quot;, 632223);
		areaCode.put(&quot;刚察县&quot;, 632224);
		areaCode.put(&quot;黄南藏族自治州&quot;, 632300);
		areaCode.put(&quot;同仁县&quot;, 632321);
		areaCode.put(&quot;尖扎县&quot;, 632322);
		areaCode.put(&quot;泽库县&quot;, 632323);
		areaCode.put(&quot;河南蒙古族自治县&quot;, 632324);
		areaCode.put(&quot;海南藏族自治州&quot;, 632500);
		areaCode.put(&quot;共和县&quot;, 632521);
		areaCode.put(&quot;同德县&quot;, 632522);
		areaCode.put(&quot;贵德县&quot;, 632523);
		areaCode.put(&quot;兴海县&quot;, 632524);
		areaCode.put(&quot;贵南县&quot;, 632525);
		areaCode.put(&quot;果洛藏族自治州&quot;, 632600);
		areaCode.put(&quot;玛沁县&quot;, 632621);
		areaCode.put(&quot;班玛县&quot;, 632622);
		areaCode.put(&quot;甘德县&quot;, 632623);
		areaCode.put(&quot;达日县&quot;, 632624);
		areaCode.put(&quot;久治县&quot;, 632625);
		areaCode.put(&quot;玛多县&quot;, 632626);
		areaCode.put(&quot;玉树藏族自治州&quot;, 632700);
		areaCode.put(&quot;玉树县&quot;, 632721);
		areaCode.put(&quot;杂多县&quot;, 632722);
		areaCode.put(&quot;称多县&quot;, 632723);
		areaCode.put(&quot;治多县&quot;, 632724);
		areaCode.put(&quot;囊谦县&quot;, 632725);
		areaCode.put(&quot;曲麻莱县&quot;, 632726);
		areaCode.put(&quot;海西蒙古族藏族自治州&quot;, 632800);
		areaCode.put(&quot;格尔木市&quot;, 632801);
		areaCode.put(&quot;德令哈市&quot;, 632802);
		areaCode.put(&quot;乌兰县&quot;, 632821);
		areaCode.put(&quot;都兰县&quot;, 632822);
		areaCode.put(&quot;天峻县&quot;, 632823);
		areaCode.put(&quot;宁夏回族自治区&quot;, 640000);
		areaCode.put(&quot;银川市&quot;, 640100);
		areaCode.put(&quot;市辖区&quot;, 640101);
		areaCode.put(&quot;兴庆区&quot;, 640104);
		areaCode.put(&quot;西夏区&quot;, 640105);
		areaCode.put(&quot;金凤区&quot;, 640106);
		areaCode.put(&quot;永宁县&quot;, 640121);
		areaCode.put(&quot;贺兰县&quot;, 640122);
		areaCode.put(&quot;灵武市&quot;, 640181);
		areaCode.put(&quot;石嘴山市&quot;, 640200);
		areaCode.put(&quot;市辖区&quot;, 640201);
		areaCode.put(&quot;大武口区&quot;, 640202);
		areaCode.put(&quot;惠农区&quot;, 640205);
		areaCode.put(&quot;平罗县&quot;, 640221);
		areaCode.put(&quot;吴忠市&quot;, 640300);
		areaCode.put(&quot;市辖区&quot;, 640301);
		areaCode.put(&quot;利通区&quot;, 640302);
		areaCode.put(&quot;红寺堡区 (*)&quot;, 640303);
		areaCode.put(&quot;盐池县&quot;, 640323);
		areaCode.put(&quot;同心县&quot;, 640324);
		areaCode.put(&quot;青铜峡市&quot;, 640381);
		areaCode.put(&quot;固原市&quot;, 640400);
		areaCode.put(&quot;市辖区&quot;, 640401);
		areaCode.put(&quot;原州区&quot;, 640402);
		areaCode.put(&quot;西吉县&quot;, 640422);
		areaCode.put(&quot;隆德县&quot;, 640423);
		areaCode.put(&quot;泾源县&quot;, 640424);
		areaCode.put(&quot;彭阳县&quot;, 640425);
		areaCode.put(&quot;中卫市&quot;, 640500);
		areaCode.put(&quot;市辖区&quot;, 640501);
		areaCode.put(&quot;沙坡头区&quot;, 640502);
		areaCode.put(&quot;中宁县&quot;, 640521);
		areaCode.put(&quot;海原县&quot;, 640522);
		areaCode.put(&quot;新疆维吾尔自治区&quot;, 650000);
		areaCode.put(&quot;乌鲁木齐市&quot;, 650100);
		areaCode.put(&quot;市辖区&quot;, 650101);
		areaCode.put(&quot;天山区&quot;, 650102);
		areaCode.put(&quot;沙依巴克区&quot;, 650103);
		areaCode.put(&quot;新市区&quot;, 650104);
		areaCode.put(&quot;水磨沟区&quot;, 650105);
		areaCode.put(&quot;头屯河区&quot;, 650106);
		areaCode.put(&quot;达坂城区&quot;, 650107);
		areaCode.put(&quot;米东区&quot;, 650109);
		areaCode.put(&quot;乌鲁木齐县&quot;, 650121);
		areaCode.put(&quot;克拉玛依市&quot;, 650200);
		areaCode.put(&quot;市辖区&quot;, 650201);
		areaCode.put(&quot;独山子区&quot;, 650202);
		areaCode.put(&quot;克拉玛依区&quot;, 650203);
		areaCode.put(&quot;白碱滩区&quot;, 650204);
		areaCode.put(&quot;乌尔禾区&quot;, 650205);
		areaCode.put(&quot;吐鲁番地区&quot;, 652100);
		areaCode.put(&quot;吐鲁番市&quot;, 652101);
		areaCode.put(&quot;鄯善县&quot;, 652122);
		areaCode.put(&quot;托克逊县&quot;, 652123);
		areaCode.put(&quot;哈密地区&quot;, 652200);
		areaCode.put(&quot;哈密市&quot;, 652201);
		areaCode.put(&quot;巴里坤哈萨克自治县&quot;, 652222);
		areaCode.put(&quot;伊吾县&quot;, 652223);
		areaCode.put(&quot;昌吉回族自治州&quot;, 652300);
		areaCode.put(&quot;昌吉市&quot;, 652301);
		areaCode.put(&quot;阜康市&quot;, 652302);
		areaCode.put(&quot;呼图壁县&quot;, 652323);
		areaCode.put(&quot;玛纳斯县&quot;, 652324);
		areaCode.put(&quot;奇台县&quot;, 652325);
		areaCode.put(&quot;吉木萨尔县&quot;, 652327);
		areaCode.put(&quot;木垒哈萨克自治县&quot;, 652328);
		areaCode.put(&quot;博尔塔拉蒙古自治州&quot;, 652700);
		areaCode.put(&quot;博乐市&quot;, 652701);
		areaCode.put(&quot;精河县&quot;, 652722);
		areaCode.put(&quot;温泉县&quot;, 652723);
		areaCode.put(&quot;巴音郭楞蒙古自治州&quot;, 652800);
		areaCode.put(&quot;库尔勒市&quot;, 652801);
		areaCode.put(&quot;轮台县&quot;, 652822);
		areaCode.put(&quot;尉犁县&quot;, 652823);
		areaCode.put(&quot;若羌县&quot;, 652824);
		areaCode.put(&quot;且末县&quot;, 652825);
		areaCode.put(&quot;焉耆回族自治县&quot;, 652826);
		areaCode.put(&quot;和静县&quot;, 652827);
		areaCode.put(&quot;和硕县&quot;, 652828);
		areaCode.put(&quot;博湖县&quot;, 652829);
		areaCode.put(&quot;阿克苏地区&quot;, 652900);
		areaCode.put(&quot;阿克苏市&quot;, 652901);
		areaCode.put(&quot;温宿县&quot;, 652922);
		areaCode.put(&quot;库车县&quot;, 652923);
		areaCode.put(&quot;沙雅县&quot;, 652924);
		areaCode.put(&quot;新和县&quot;, 652925);
		areaCode.put(&quot;拜城县&quot;, 652926);
		areaCode.put(&quot;乌什县&quot;, 652927);
		areaCode.put(&quot;阿瓦提县&quot;, 652928);
		areaCode.put(&quot;柯坪县&quot;, 652929);
		areaCode.put(&quot;克孜勒苏柯尔克孜自治州&quot;, 653000);
		areaCode.put(&quot;阿图什市&quot;, 653001);
		areaCode.put(&quot;阿克陶县&quot;, 653022);
		areaCode.put(&quot;阿合奇县&quot;, 653023);
		areaCode.put(&quot;乌恰县&quot;, 653024);
		areaCode.put(&quot;喀什地区&quot;, 653100);
		areaCode.put(&quot;喀什市&quot;, 653101);
		areaCode.put(&quot;疏附县&quot;, 653121);
		areaCode.put(&quot;疏勒县&quot;, 653122);
		areaCode.put(&quot;英吉沙县&quot;, 653123);
		areaCode.put(&quot;泽普县&quot;, 653124);
		areaCode.put(&quot;莎车县&quot;, 653125);
		areaCode.put(&quot;叶城县&quot;, 653126);
		areaCode.put(&quot;麦盖提县&quot;, 653127);
		areaCode.put(&quot;岳普湖县&quot;, 653128);
		areaCode.put(&quot;伽师县&quot;, 653129);
		areaCode.put(&quot;巴楚县&quot;, 653130);
		areaCode.put(&quot;塔什库尔干塔吉克自治县&quot;, 653131);
		areaCode.put(&quot;和田地区&quot;, 653200);
		areaCode.put(&quot;和田市&quot;, 653201);
		areaCode.put(&quot;和田县&quot;, 653221);
		areaCode.put(&quot;墨玉县&quot;, 653222);
		areaCode.put(&quot;皮山县&quot;, 653223);
		areaCode.put(&quot;洛浦县&quot;, 653224);
		areaCode.put(&quot;策勒县&quot;, 653225);
		areaCode.put(&quot;于田县&quot;, 653226);
		areaCode.put(&quot;民丰县&quot;, 653227);
		areaCode.put(&quot;伊犁哈萨克自治州&quot;, 654000);
		areaCode.put(&quot;伊宁市&quot;, 654002);
		areaCode.put(&quot;奎屯市&quot;, 654003);
		areaCode.put(&quot;伊宁县&quot;, 654021);
		areaCode.put(&quot;察布查尔锡伯自治县&quot;, 654022);
		areaCode.put(&quot;霍城县&quot;, 654023);
		areaCode.put(&quot;巩留县&quot;, 654024);
		areaCode.put(&quot;新源县&quot;, 654025);
		areaCode.put(&quot;昭苏县&quot;, 654026);
		areaCode.put(&quot;特克斯县&quot;, 654027);
		areaCode.put(&quot;尼勒克县&quot;, 654028);
		areaCode.put(&quot;塔城地区&quot;, 654200);
		areaCode.put(&quot;塔城市&quot;, 654201);
		areaCode.put(&quot;乌苏市&quot;, 654202);
		areaCode.put(&quot;额敏县&quot;, 654221);
		areaCode.put(&quot;沙湾县&quot;, 654223);
		areaCode.put(&quot;托里县&quot;, 654224);
		areaCode.put(&quot;裕民县&quot;, 654225);
		areaCode.put(&quot;和布克赛尔蒙古自治县&quot;, 654226);
		areaCode.put(&quot;阿勒泰地区&quot;, 654300);
		areaCode.put(&quot;阿勒泰市&quot;, 654301);
		areaCode.put(&quot;布尔津县&quot;, 654321);
		areaCode.put(&quot;富蕴县&quot;, 654322);
		areaCode.put(&quot;福海县&quot;, 654323);
		areaCode.put(&quot;哈巴河县&quot;, 654324);
		areaCode.put(&quot;青河县&quot;, 654325);
		areaCode.put(&quot;吉木乃县&quot;, 654326);
		areaCode.put(&quot;自治区直辖县级行政区划&quot;, 659000);
		areaCode.put(&quot;石河子市&quot;, 659001);
		areaCode.put(&quot;阿拉尔市&quot;, 659002);
		areaCode.put(&quot;图木舒克市&quot;, 659003);
		areaCode.put(&quot;五家渠市&quot;, 659004);
		areaCode.put(&quot;台湾省&quot;, 710000);
		areaCode.put(&quot;香港特别行政区&quot;, 810000);
		areaCode.put(&quot;澳门特别行政区&quot;, 820000);
        
        //地区号
        String  randomAreaCode=&quot;&quot;;
        int index = (int) (Math.random() * areaCode.size());
         Collection values = areaCode.values();
         Iterator it = values.iterator();
        int i = 0;
        int code = 0;
        while (i &lt; index &amp;&amp; it.hasNext()) {
            i++;
            randomAreaCode = it.next().toString();
        }
        generater.append(randomAreaCode);
        //生日
        String randomBirthday=&quot;&quot;;
        Calendar birthday = Calendar.getInstance();
        birthday.set(Calendar.YEAR, (int) (Math.random() * 20) + 1980);
        birthday.set(Calendar.MONTH, (int) (Math.random() * 12));
        birthday.set(Calendar.DATE, (int) (Math.random() * 31));
        StringBuilder builder = new StringBuilder();
        builder.append(birthday.get(Calendar.YEAR));
        long month = birthday.get(Calendar.MONTH) + 1;
        if (month &lt; 10) {
            builder.append(&quot;0&quot;);
        }
        builder.append(month);
        long date = birthday.get(Calendar.DATE);
        if (date &lt; 10) {
            builder.append(&quot;0&quot;);
        }
        builder.append(date);
        randomBirthday= builder.toString();
         generater.append(randomBirthday);
         
      //随机码
      String randomCode=&quot;&quot;;
      int code = (int) (Math.random() * 1000);
        if (code &lt; 10) {
            randomCode= &quot;00&quot; + code;
        } else if (code &lt; 100) {
            randomCode= &quot;0&quot; + code;
        } else {
            randomCode= &quot;&quot; + code;
        }
     
        generater.append(randomCode);
     //验证码
        char[]  chars= generater.toString().toCharArray();
        int[] c = { 7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2 };
        char[] r = { &apos;1&apos;, &apos;0&apos;, &apos;X&apos;, &apos;9&apos;, &apos;8&apos;, &apos;7&apos;, &apos;6&apos;, &apos;5&apos;, &apos;4&apos;, &apos;3&apos;, &apos;2&apos; };
        int[] n = new int[17];
        int result = 0;
        for (int i = 0; i &lt; n.length; i++) {
            n[i] = Integer.parseInt(chars[i] + &quot;&quot;);
        }
        for (int i = 0; i &lt; n.length; i++) {
            result += c[i] * n[i];
        }
        char validateCode = r[result % 11];
        generater.append(validateCode);
 
    
        vars.put(&quot;gove_iden_num&quot;,generater.toString()) ;
        SampleResult.setResponseData(generater.toString());</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数-模板" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="发送验证码--ok" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="发送验证码" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">responseData</stringProp>
              <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
            <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="发送验证码" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询发送短信验证码" enabled="true">
            <stringProp name="dataSource">db_sms_test</stringProp>
            <stringProp name="query">select CONTENT from t_sms_record_detail where SIGN = &apos;安卓测试&apos; AND PHONE = &apos;${phone}&apos; GROUP BY CREATE_TIME DESC LIMIT 1</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="variableNames">aaa</stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
          </JDBCSampler>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="处理短信验证码" enabled="true">
            <stringProp name="BeanShellSampler.query">


public static String testAccount() throws Exception {

	String ss = &quot;${aaa_1}&quot;;
	//获取验证码
	String resp = ss.substring(4,10);
     //System.out.println(ss.substring(5,10));
	 return resp;
}
	//设置短信验证码到verCode参数里面
  vars.put(&quot;verCode&quot;,testAccount());</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="登录--ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="verCode0" elementType="Argument">
                <stringProp name="Argument.name">verCode0</stringProp>
                <stringProp name="Argument.value">838280</stringProp>
                <stringProp name="Argument.desc">短信验证码</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="type" elementType="Argument">
                <stringProp name="Argument.name">type</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">0：一键登陆 1：普通登陆	</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="onekey" elementType="Argument">
                <stringProp name="Argument.name">onekey</stringProp>
                <stringProp name="Argument.value">111</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">一键登录参数：1.appId、当前APP对应的appid,SDK传入; 2.accessToken、运营商token,SDK传入; 3.telecom、运营商，SDK传入; 4.timestamp、UNIX时间戳，毫秒级，SDK传入; 5.randoms	随机数，SDK传入; 6.sign	签名，SDK传入; 7.version、SDK版本号，SDK传入; 8.device、设备型号</stringProp>
              </elementProp>
              <elementProp name="shanyankey" elementType="Argument">
                <stringProp name="Argument.name">shanyankey</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.desc">解密key</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="loginType" elementType="Argument">
                <stringProp name="Argument.name">loginType</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.desc">1：登陆留资 0：直接登陆</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="userName" elementType="Argument">
                <stringProp name="Argument.name">userName</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">用户名，留资用</stringProp>
              </elementProp>
              <elementProp name="userIdCard" elementType="Argument">
                <stringProp name="Argument.name">userIdCard</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.desc">身份证，留资用</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="请求明文加密" enabled="false">
            <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        // params组装接口文档中所定义的接口参数
	   String params = 	&quot;{&apos;appKey&apos;: &apos;${appkey}&apos;,&apos;uuid&apos;: &apos;${uuid}&apos;,&apos;version&apos;: &apos;${version}&apos;,&apos;os&apos;: &apos;${os}&apos;,&apos;channel&apos;: ${channel},&apos;token&apos;: &apos;&apos;,&apos;data&apos;: {&apos;phone&apos;: &apos;${phone}&apos;,&apos;verCode&apos;: &apos;${verCode}&apos;,&apos;type&apos;: &apos;${type}&apos;,&apos;onekey&apos;: &apos;${onekey}&apos;,&apos;shanyankey&apos;: &apos;${shanyankey}&apos;,&apos;loginType&apos;: &apos;${loginType}&apos;,&apos;userName&apos;: &apos;${userName}&apos;,&apos;userIdCard&apos;: &apos;${userIdCard}&apos;},&apos;latitude&apos;: &apos;&apos;,&apos;longitude&apos;: &apos;&apos;,&apos;isLogin&apos;: &apos;&apos;}&quot;;
        
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.ENCRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jiaMi = encr.encryptOrDecrypt(aesKey,privateKey,params,type);

        return jiaMi;
}

  vars.put(&quot;req&quot;,testAccount());</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="登录" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone}&quot;,&#xd;
        &quot;verCode&quot;: &quot;${verCode}&quot;,&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;onekey&quot;: &quot;${onekey}&quot;,&#xd;
        &quot;shanyankey&quot;: &quot;${shanyankey}&quot;,&#xd;
        &quot;loginType&quot;: &quot;${loginType}&quot;,&#xd;
        &quot;userName&quot;: &quot;${userName}&quot;,&#xd;
        &quot;userIdCard&quot;: &quot;${userIdCard}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/user/login.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">responseData</stringProp>
              <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
            <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="登录" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                <stringProp name="110541305">token</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;

String lgreq=(String) vars.get(&quot;res&quot;);
JSONObject jsonObj=JSONObject.parseObject(lgreq);
//System.out.println(jsonObj.get(&quot;data&quot;));
JSONObject jsonObj2=(JSONObject) jsonObj.get(&quot;data&quot;);
 //System.out.println(jsonObj2.get(&quot;active_code_serial_no&quot;));
String s=(String) jsonObj2.get(&quot;token&quot;);
String s1=String.valueOf(jsonObj2.get(&quot;userId&quot;));
vars.put(&quot;token&quot;,s);
vars.put(&quot;userId&quot;,s1);
//log.info(active_code_serial_no);
//System.out.println(s);
 		
</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="消息列表--ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="msgType_0" elementType="Argument">
                <stringProp name="Argument.name">msgType_0</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.desc">0超链接 1富文本</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="msgType_1" elementType="Argument">
                <stringProp name="Argument.name">msgType_1</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">0超链接 1富文本</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pageNo0" elementType="Argument">
                <stringProp name="Argument.name">pageNo0</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.desc">页码</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pageSize0" elementType="Argument">
                <stringProp name="Argument.name">pageSize0</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.desc">每页数量</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="消息列表_msgType取 0、超链接" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="消息列表" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;msgType&quot;: &quot;${msgType_0}&quot;,&#xd;
        &quot;pageNo&quot;: &quot;1&quot;,&#xd;
        &quot;pageSize&quot;: &quot;5&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/messageList.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1343497151">msgList</stringProp>
                  <stringProp name="110549828">total</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="消息列表_msgType取 1、富文本" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="消息列表" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;msgType&quot;: &quot;${msgType_1}&quot;,&#xd;
        &quot;pageNo&quot;: &quot;1&quot;,&#xd;
        &quot;pageSize&quot;: &quot;5&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/messageList.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1343497151">msgList</stringProp>
                  <stringProp name="110549828">total</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="消息列表_pageNo和pageSize都为0" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="消息列表" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;msgType&quot;: &quot;${msgType_0}&quot;,&#xd;
        &quot;pageNo&quot;: &quot;0&quot;,&#xd;
        &quot;pageSize&quot;: &quot;0&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/messageList.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="banner列表--ok" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="banner列表" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/product/bannerList.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">responseData</stringProp>
              <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
            <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="banner列表" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                <stringProp name="-1031918102">bannerList</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品列表--ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="type" elementType="Argument">
                <stringProp name="Argument.name">type</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">列表类型：0、首页热门推荐; 1、首页底部产品; 2、新口子; 3、秒下款/贷款大全/秒进斗金筛选; 4、产品详情底部推荐; 5、我的专属产品; 7、新品推荐; 8、热门推荐：秒进斗金猜你喜欢; 9、秒进斗金筛选列表; 10、秒进斗金产品分类</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sortType" elementType="Argument">
                <stringProp name="Argument.name">sortType</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.desc">排序方式：0、智能; 1、通过率; 2、利率</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sort" elementType="Argument">
                <stringProp name="Argument.name">sort</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.desc">升序asc; 降序desc</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="loanAmount" elementType="Argument">
                <stringProp name="Argument.name">loanAmount</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.desc">贷款额度id 参考&lt;获取筛选数据&gt;接口返回数据</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="loanTerm" elementType="Argument">
                <stringProp name="Argument.name">loanTerm</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.desc">贷款期限id 参考&lt;获取筛选数据&gt;接口返回数据</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="labels" elementType="Argument">
                <stringProp name="Argument.name">labels</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">产品标签数组（秒进斗金产品特点使用）[1000,1002,1003,1004]</stringProp>
              </elementProp>
              <elementProp name="pageNo" elementType="Argument">
                <stringProp name="Argument.name">pageNo</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">页码</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pageSize" elementType="Argument">
                <stringProp name="Argument.name">pageSize</stringProp>
                <stringProp name="Argument.value">4</stringProp>
                <stringProp name="Argument.desc">每页数量</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productId0" elementType="Argument">
                <stringProp name="Argument.name">productId0</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.desc">传入产品id，type为4时</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="minAount" elementType="Argument">
                <stringProp name="Argument.name">minAount</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.desc">最小金额（秒进斗金筛选输入金额）</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="maxAount" elementType="Argument">
                <stringProp name="Argument.name">maxAount</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.desc">最大金额（秒进斗金筛选输入金额）</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productType" elementType="Argument">
                <stringProp name="Argument.name">productType</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.desc">产品类型（秒进斗金）1、推荐；2、热门；3、爆款；4、新口子；5、专属</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="loanTime" elementType="Argument">
                <stringProp name="Argument.name">loanTime</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.desc">放款时间（分钟）（秒进斗金）-1、全部；1、三分钟；2、五分钟；3、一小时；4；一天；5三天；6七天</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="monthRate" elementType="Argument">
                <stringProp name="Argument.name">monthRate</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.desc">月利率（秒进斗金）-1、全部；1、百分之二一下；2、百分之二到百分之二点五；3、百分之五到三</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productGroupId" elementType="Argument">
                <stringProp name="Argument.name">productGroupId</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">产品分组id（秒进斗金）</stringProp>
              </elementProp>
              <elementProp name="jsonObject" elementType="Argument">
                <stringProp name="Argument.name">jsonObject</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">秒进斗金筛选列表使用json传递 &quot;jsonObject&quot;: {&quot;minAount&quot;: 123,&quot;maxAount&quot;: 123,&quot;产品类型&quot;: 1,&quot;贷款期限&quot;: [1, 2],&quot;放款时间&quot;: [1, 2],&quot;月利率&quot;: 1,&quot;产品特点&quot;: 1}</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品列表" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;pageNo&quot;: &quot;${pageNo}&quot;,&#xd;
        &quot;pageSize&quot;: &quot;${pageSize}&quot;,&#xd;
        &quot;sortType&quot;: &quot;${sortType}&quot;,&#xd;
        &quot;type&quot;: &quot;${type}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/product/productList.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">responseData</stringProp>
              <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
            <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品列表" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                <stringProp name="-1491869139">productList</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor----未实现接口返回产品详情动态获取，返回数据存在list（遍历影响性能脚本编写）" enabled="false">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;

String lgreq=(String) vars.get(&quot;res&quot;);
JSONObject jsonObj=JSONObject.parseObject(lgreq);
//System.out.println(jsonObj.get(&quot;data&quot;));
JSONObject jsonObj2=(JSONObject) jsonObj.get(&quot;data&quot;);
 //System.out.println(jsonObj2.get(&quot;active_code_serial_no&quot;));
String s=(String) jsonObj2.get(&quot;token&quot;);
vars.put(&quot;token&quot;,s);
//log.info(active_code_serial_no);
//System.out.println(s);
 		
</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="版面查询--ok" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="版面查询" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;version&quot;: &quot;${version}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/app/applicationPage.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2070259289">status&quot;:1</stringProp>
                <stringProp name="3433103">page</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="新人专享--ok//秒进斗金未使用，贷款联盟在使用" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新人专享" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: &quot;&quot;,&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/product/aloneProduct.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">responseData</stringProp>
              <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
            <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="新人专享" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                <stringProp name="-309474065">product</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="获取筛选数据--ok" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取筛选数据" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: &quot;&quot;,&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/product/productConditions.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">responseData</stringProp>
              <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
            <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="获取筛选数据" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                <stringProp name="1635877752">resConditions</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品详情--ok-----------产品列表响应提取产品id，产品详情使用该id未实现" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品详情" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/product/productInfo.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">responseData</stringProp>
              <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
            <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品详情" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                <stringProp name="285154232">productId&quot; : ${productId}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="热门银行--ok" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="热门银行" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot; : &quot;&quot;,&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/product/hotBankList.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">responseData</stringProp>
              <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
            <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="热门银行" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                <stringProp name="-1859343110">bankList</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="热门信用卡--ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="pageNo" elementType="Argument">
                <stringProp name="Argument.name">pageNo</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">页码</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pageSize" elementType="Argument">
                <stringProp name="Argument.name">pageSize</stringProp>
                <stringProp name="Argument.value">4</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">每页数量</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="热门信用卡" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;pageNo&quot;: &quot;${pageNo}&quot;,&#xd;
        &quot;pageSize&quot;: &quot;${pageSize}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/product/hotBankCardList.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">responseData</stringProp>
              <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
            <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="热门信用卡" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                <stringProp name="-8480818">cardList</stringProp>
                <stringProp name="110549828">total</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="基础数据--ok" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="基础数据" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: &quot;&quot;,&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/user/baseData.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="517739413">contactPerson</stringProp>
                <stringProp name="1263713582">contactPhone</stringProp>
                <stringProp name="1253690204">contactEmail</stringProp>
                <stringProp name="-411130304">contactQQ</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
                <stringProp name="512871487">qqGroup</stringProp>
                <stringProp name="345862073">servicePhone</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="帮助中心------按照接口文档请求，返回异常" enabled="false">
          <stringProp name="TestPlan.comments">响应：{&quot;msg&quot;:&quot;Required Integer parameter &apos;pageNo&apos; is not present&quot;,&quot;data&quot;:{&quot;path&quot;:&quot;/api/user/helpCenter.action&quot;,&quot;type&quot;:&quot;MissingServletRequestParameterException&quot;,&quot;class&quot;:&quot;org.springframework.web.bind.MissingServletRequestParameterException&quot;},&quot;status&quot;:&quot;-1&quot;}</stringProp>
        </GenericController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="pageNo" elementType="Argument">
                <stringProp name="Argument.name">pageNo</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">页码</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pageSize" elementType="Argument">
                <stringProp name="Argument.name">pageSize</stringProp>
                <stringProp name="Argument.value">10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">每页数量</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="帮助中心" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;pageNo&quot;: &quot;${pageNo}&quot;,&#xd;
        &quot;pageSize&quot;: &quot;${pageSize}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/user/helpCenter.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="帮助中心详情------按照接口文档请求，返回异常" enabled="false">
          <stringProp name="TestPlan.comments">{&quot;msg&quot;:&quot;Required Long parameter &apos;questionId&apos; is not present&quot;,&quot;data&quot;:{&quot;path&quot;:&quot;/api/user/helpCenterInfo.action&quot;,&quot;type&quot;:&quot;MissingServletRequestParameterException&quot;,&quot;class&quot;:&quot;org.springframework.web.bind.MissingServletRequestParameterException&quot;},&quot;status&quot;:&quot;-1&quot;}</stringProp>
        </GenericController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="questionId" elementType="Argument">
                <stringProp name="Argument.name">questionId</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.desc">问题id</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="帮助中心详情" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;questionId&quot;: &quot;${questionId}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/user/helpCenterInfo.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="意见反馈------按照接口文档请求，返回异常" enabled="false">
          <stringProp name="TestPlan.comments">{&quot;msg&quot;:&quot;Required Long parameter &apos;questionId&apos; is not present&quot;,&quot;data&quot;:{&quot;path&quot;:&quot;/api/user/helpCenterInfo.action&quot;,&quot;type&quot;:&quot;MissingServletRequestParameterException&quot;,&quot;class&quot;:&quot;org.springframework.web.bind.MissingServletRequestParameterException&quot;},&quot;status&quot;:&quot;-1&quot;}</stringProp>
        </GenericController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="question" elementType="Argument">
                <stringProp name="Argument.name">question</stringProp>
                <stringProp name="Argument.value">无法下款</stringProp>
                <stringProp name="Argument.desc">问题</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="qq" elementType="Argument">
                <stringProp name="Argument.name">qq</stringProp>
                <stringProp name="Argument.value">277515317</stringProp>
                <stringProp name="Argument.desc">qq号码</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="意见反馈" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;question&quot;: &quot;${question}&quot;,&#xd;
        &quot;qq&quot;: &quot;${qq}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/user/helpCenterInfo.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="消息详情--ok----正确消息id" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="msgId" elementType="Argument">
                <stringProp name="Argument.name">msgId</stringProp>
                <stringProp name="Argument.value">10000686</stringProp>
                <stringProp name="Argument.desc">消息id</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="消息详情" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;msgId&quot;: &quot;${msgId}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/app/messageInfo.action </stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--ok----检查sql未写" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="type" elementType="Argument">
                <stringProp name="Argument.name">type</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.desc">0 统计产品 1 统计信用卡</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="url" elementType="Argument">
                <stringProp name="Argument.name">url</stringProp>
                <stringProp name="Argument.value">www.baidu.com</stringProp>
                <stringProp name="Argument.desc">申请链接</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cardId" elementType="Argument">
                <stringProp name="Argument.name">cardId</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.desc">信用卡id type=1 必填</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productId1" elementType="Argument">
                <stringProp name="Argument.name">productId1</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.desc">产品id type=0 必填</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="serialNumber" elementType="Argument">
                <stringProp name="Argument.name">serialNumber</stringProp>
                <stringProp name="Argument.value">${__Random(1,10,)}</stringProp>
                <stringProp name="Argument.desc">产品序号  大于1正整数，表示产品位置</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition" elementType="Argument">
                <stringProp name="Argument.name">funPosition</stringProp>
                <stringProp name="Argument.value">5</stringProp>
                <stringProp name="Argument.desc">首页：0   秒下款/贷款大全：1     信用卡：3    我的专属产品：4         一键获取产品：5    首页热门产品(6)   首页新品产品(7)     新人专享列表 (8)  发现(9)  跑马灯(11)  首页新人专享(12)   分类产品列表(13) 身价测试产品列表(14)，首页猜你想要(15)，排行榜产品列表(16)， 个人中心产品列表(17),挽留产品列表(18),三方案产品详情(19)， 首页新人专享分类(20), 首页闪电贷款分类(21), 首页热门产品分类(22), 首页大额分期分类(23)，三方案产品使用(24),三方案产品1(25),三方案产品2(26),三方案产品3(27)，推送产品详情页_立即拿钱（28）,首页最新口子分类_产品详情页(29),    首页闪电贷款分类_产品详情页(30),    首页新人专享分类_产品详情页(31),    首页超低门槛分类_产品详情页(32),    身价测试产品列表_产品详情页(33),    首页猜你想要_产品详情页(34),    个人中心产品列表_产品详情页(35),    产品详情页挽留弹窗_产品详情页(36)，黑马_审核资料成功_立即申请(37),黑马_审核资料失败_立即申请(38),黑马_为你推荐_立即申请(39),黑马_贷款排行榜_立即申请(40),黑马_搜索_立即申请(41),黑马_我的贷款_立即申请(42),黑马_失败详情_立即申请(43); </stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="describe" elementType="Argument">
                <stringProp name="Argument.name">describe</stringProp>
                <stringProp name="Argument.value">test</stringProp>
                <stringProp name="Argument.desc">统计描述</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2070259289">status&quot;:1</stringProp>
                <stringProp name="-950083557">status&quot; : 1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">48</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="检查pvuv数据库数据" enabled="true">
            <stringProp name="dataSource">flowsum_jdbc</stringProp>
            <stringProp name="query">select count(*) from t_basic_login_user t WHERE t.phone = &apos;${phone}&apos; and t.N_ID = &apos;${userId}&apos;
</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="variableNames">pvuv_c</stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="功能统计----检查sql未写" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="url" elementType="Argument">
                <stringProp name="Argument.name">url</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.desc">接口url 功能有连接就传入</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="type" elementType="Argument">
                <stringProp name="Argument.name">type</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">首页按钮点击统计(1),   秒下款(2)/贷款大全,     秒下款高通率点击(3),     秒下款低利率点击(4),     秒下款筛选点击(5),     新口子信用卡点击(6),     产品详情(7),     个人中心按钮点击(8),     我的额度点击(9),     商务联系点击(10),     助贷群点击(11),     帮助中心点击(12),     设置中心点击(13),     关于我能点击(14),     客服电话按钮点击(15),     信息中心按钮点击统计(16),     退出功能点击(17), BNNAER1(18),      BNNAER2(19),   BNNAER3(20),   BNNAER4(21)   首页投诉建议(23),  首页公益救助(24),   首页分类1(25),   首页分类2(26),    首页分类3(27),    首页分类4(28)，信用卡按钮点击(29)    启动页广告:30   首页弹窗:31，首页广告栏(32)，  个人中心广告栏(33)，工具类（34），一键登陆(35),普通登陆(36),资料填写_下一步(37),资料填写_获取验证码(38),资料填写_点击征信协议(39),资料填写_提交(40),一键获取(41),选择方案(42),用户评级详情(43),方案详情(44),立即使用(45),更多方案(46),复制专属客服(47),申请记录_未使用(48),申请记录_已使用(49),客服中心(50),客服中心_复制QQ(51),客服中心_拨打电话(52),登录_获取验证码(53),登录_点击用户协议(54)，重新获取(55)，下载完成(56)，  秒下款导航栏(58),   贷款大全导航栏(59),     发现(60),    热门话题详情(61)，话题点击分享(62),热门话题列表(63) </stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="relateId" elementType="Argument">
                <stringProp name="Argument.name">relateId</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">产品或信用卡id，type6或7时必填</stringProp>
              </elementProp>
              <elementProp name="funPosition" elementType="Argument">
                <stringProp name="Argument.name">funPosition</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">产品位置 首页：0   秒下款：1    信用卡：3    我的专属产品：4    首页新品产品(7)    首页热门产品(6)   新人专享列表 (8)   首页新人专享 (10) 跑马灯 (11)   分类产品列表(13) </stringProp>
              </elementProp>
              <elementProp name="serialNumber" elementType="Argument">
                <stringProp name="Argument.name">serialNumber</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">序号</stringProp>
              </elementProp>
              <elementProp name="describe" elementType="Argument">
                <stringProp name="Argument.name">describe</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">统计描述</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="功能统计" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;relateId&quot;: &quot;${relateId}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;,&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/app/functionStatistical.action </stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="删除消息----ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="msgId" elementType="Argument">
                <stringProp name="Argument.name">msgId</stringProp>
                <stringProp name="Argument.value">10000686</stringProp>
                <stringProp name="Argument.desc">消息id</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="删除消息" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;msgId&quot;: &quot;${msgId}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/app/deleteMessage.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="贷款联盟H5地址" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="msgId" elementType="Argument">
                <stringProp name="Argument.name">msgId</stringProp>
                <stringProp name="Argument.value">10000686</stringProp>
                <stringProp name="Argument.desc">消息id</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="贷款联盟H5地址" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: &quot;&quot;,&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/user/urlAll.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1395294148">bbsUrl</stringProp>
                <stringProp name="-1724772742">serviceUrl</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="开关--ok" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="开关" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/app/funcSwitch.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2070259289">status&quot;:1</stringProp>
                <stringProp name="1614296885">msg&quot;:&quot;获取开关状态成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="消息推送统计----ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="messageId" elementType="Argument">
                <stringProp name="Argument.name">messageId</stringProp>
                <stringProp name="Argument.value">10000686</stringProp>
                <stringProp name="Argument.desc">消息id</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="消息推送统计" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;messageId&quot;: &quot;${messageId}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/app/messageStatistical.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="IDFA激活----ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="idfa" elementType="Argument">
                <stringProp name="Argument.name">idfa</stringProp>
                <stringProp name="Argument.value">${__Random(1111,9999,)}</stringProp>
                <stringProp name="Argument.desc">消息id</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="IDFA激活" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;idfa&quot;: &quot;${idfa}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/app/idfaActive.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品分组----ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="msgId" elementType="Argument">
                <stringProp name="Argument.name">msgId</stringProp>
                <stringProp name="Argument.value">10000686</stringProp>
                <stringProp name="Argument.desc">消息id</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品分组" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: &quot;&quot;,&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/product/productClassification.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">responseData</stringProp>
              <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
            <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品分组" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-950083557">status&quot; : 1</stringProp>
                <stringProp name="1916015008">msg&quot; : &quot;成功获取分类</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="更具分组获取产品列表----ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="pageNo" elementType="Argument">
                <stringProp name="Argument.name">pageNo</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pageSize" elementType="Argument">
                <stringProp name="Argument.name">pageSize</stringProp>
                <stringProp name="Argument.value">10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productGroupId" elementType="Argument">
                <stringProp name="Argument.name">productGroupId</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="更具分组获取产品列表" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;pageNo&quot;: ${pageNo},&#xd;
        &quot;pageSize&quot;: ${pageSize},&#xd;
        &quot;productGroupId&quot;: ${productGroupId}&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/product/getProductClassList.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">responseData</stringProp>
              <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
            <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="更具分组获取产品列表" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="612180730">status&quot; : -1</stringProp>
                <stringProp name="-45143510">当前分组商品不存在</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="投诉建议----ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="userId" elementType="Argument">
                <stringProp name="Argument.name">userId</stringProp>
                <stringProp name="Argument.value">10186898</stringProp>
                <stringProp name="Argument.desc">用户id</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="feedContent" elementType="Argument">
                <stringProp name="Argument.name">feedContent</stringProp>
                <stringProp name="Argument.value">卡</stringProp>
                <stringProp name="Argument.desc">投诉原因</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productName" elementType="Argument">
                <stringProp name="Argument.name">productName</stringProp>
                <stringProp name="Argument.value">uv量1</stringProp>
                <stringProp name="Argument.desc">产品名称</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="contactWay" elementType="Argument">
                <stringProp name="Argument.name">contactWay</stringProp>
                <stringProp name="Argument.value">255414335</stringProp>
                <stringProp name="Argument.desc">联系方式</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="投诉建议" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
        &quot;feedContent&quot;: &quot;${feedContent}&quot;,&#xd;
        &quot;productName&quot;: &quot;${productName}&quot;,&#xd;
        &quot;contactWay&quot;: &quot;${contactWay}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/user/addFeedback.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1392953731">msg&quot;:&quot;感谢您的反馈</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="申请互助----userId错误，返回异常" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="userId" elementType="Argument">
                <stringProp name="Argument.name">userId</stringProp>
                <stringProp name="Argument.value">10186898</stringProp>
                <stringProp name="Argument.desc">用户id</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="name" elementType="Argument">
                <stringProp name="Argument.name">name</stringProp>
                <stringProp name="Argument.value">何华峰</stringProp>
                <stringProp name="Argument.desc">姓名</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="idCard" elementType="Argument">
                <stringProp name="Argument.name">idCard</stringProp>
                <stringProp name="Argument.value">330681199412207058</stringProp>
                <stringProp name="Argument.desc">身份证号码</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sex" elementType="Argument">
                <stringProp name="Argument.name">sex</stringProp>
                <stringProp name="Argument.value">男</stringProp>
                <stringProp name="Argument.desc">性别</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="reason" elementType="Argument">
                <stringProp name="Argument.name">reason</stringProp>
                <stringProp name="Argument.value">test</stringProp>
                <stringProp name="Argument.desc">原因</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="city" elementType="Argument">
                <stringProp name="Argument.name">city</stringProp>
                <stringProp name="Argument.value">浙江省诸暨市赵家镇花明泉村991号</stringProp>
                <stringProp name="Argument.desc">市</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="phone11" elementType="Argument">
                <stringProp name="Argument.name">phone11</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.desc">手机号码</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="province" elementType="Argument">
                <stringProp name="Argument.name">province</stringProp>
                <stringProp name="Argument.value">浙江省</stringProp>
                <stringProp name="Argument.desc">省</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="area" elementType="Argument">
                <stringProp name="Argument.name">area</stringProp>
                <stringProp name="Argument.value">诸暨市</stringProp>
                <stringProp name="Argument.desc">区</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="town" elementType="Argument">
                <stringProp name="Argument.name">town</stringProp>
                <stringProp name="Argument.value">赵家镇</stringProp>
                <stringProp name="Argument.desc">镇</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="token111" elementType="Argument">
                <stringProp name="Argument.name">token111</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="申请互助" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
        &quot;name&quot;: &quot;${name}&quot;,&#xd;
        &quot;idCard&quot;: &quot;${idCard}&quot;,&#xd;
        &quot;sex&quot;: &quot;${sex}&quot;,&#xd;
        &quot;reason&quot;: &quot;${reason}&quot;,&#xd;
        &quot;city&quot;: &quot;${city}&quot;,&#xd;
        &quot;phone&quot;: &quot;${phone}&quot;,&#xd;
        &quot;province&quot;: &quot;${province}&quot;,&#xd;
        &quot;area&quot;: &quot;${area}&quot;,&#xd;
        &quot;town&quot;: &quot;${town}&quot;,&#xd;
        &quot;token&quot;: &quot;${token}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/assistance/applyHelp.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="救助列表----pageNo错误，返回异常" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="pageNo" elementType="Argument">
                <stringProp name="Argument.name">pageNo</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">页码</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pageSize" elementType="Argument">
                <stringProp name="Argument.name">pageSize</stringProp>
                <stringProp name="Argument.value">4</stringProp>
                <stringProp name="Argument.desc">每页条数</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="救助列表" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;pageNo&quot;: &quot;${pageNo}&quot;,&#xd;
        &quot;pageSize&quot;: &quot;${pageSize}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/assistance/getAssistanceList.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="救助详情列表----pageNo错误，返回异常" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="pageNo" elementType="Argument">
                <stringProp name="Argument.name">pageNo</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">页码</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pageSize" elementType="Argument">
                <stringProp name="Argument.name">pageSize</stringProp>
                <stringProp name="Argument.value">4</stringProp>
                <stringProp name="Argument.desc">每页条数</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="assistanceId" elementType="Argument">
                <stringProp name="Argument.name">assistanceId</stringProp>
                <stringProp name="Argument.value">24</stringProp>
                <stringProp name="Argument.desc">救助期</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="救助详情列表" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;pageNo&quot;: &quot;${pageNo}&quot;,&#xd;
        &quot;pageSize&quot;: &quot;${pageSize}&quot;,&#xd;
        &quot;assistanceId&quot;: &quot;${assistanceId}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/assistance/getAssistanceInfoList.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="获取产品下拉列表----ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="pageNo" elementType="Argument">
                <stringProp name="Argument.name">pageNo</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">页码</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pageSize" elementType="Argument">
                <stringProp name="Argument.name">pageSize</stringProp>
                <stringProp name="Argument.value">4</stringProp>
                <stringProp name="Argument.desc">每页条数</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取产品下拉列表" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: &quot;&quot;,&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/product/getProductList.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">responseData</stringProp>
              <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
            <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="获取产品下拉列表" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-950083557">status&quot; : 1</stringProp>
                <stringProp name="-413414889">获取产品下拉列表成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公益首页----ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="pageNo" elementType="Argument">
                <stringProp name="Argument.name">pageNo</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">页码</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pageSize" elementType="Argument">
                <stringProp name="Argument.name">pageSize</stringProp>
                <stringProp name="Argument.value">4</stringProp>
                <stringProp name="Argument.desc">每页条数</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公益首页" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: &quot;&quot;,&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/assistance/getAssistanceHome.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2070259289">status&quot;:1</stringProp>
                <stringProp name="1226841842">weekNum</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="人工审核----productId错误，返回异常" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="productId11" elementType="Argument">
                <stringProp name="Argument.name">productId11</stringProp>
                <stringProp name="Argument.value">10001000</stringProp>
                <stringProp name="Argument.desc">产品id</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="人工审核" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/product/getProductAudit.action</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="关联渠道开关----ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="pageNo" elementType="Argument">
                <stringProp name="Argument.name">pageNo</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">页码</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pageSize" elementType="Argument">
                <stringProp name="Argument.name">pageSize</stringProp>
                <stringProp name="Argument.value">4</stringProp>
                <stringProp name="Argument.desc">每页条数</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="关联渠道开关" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: &quot;&quot;,&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/app/channelSwitch.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2070259289">status&quot;:1</stringProp>
                <stringProp name="660196492">获取开关状态成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="入驻指南----ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="pageNo" elementType="Argument">
                <stringProp name="Argument.name">pageNo</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">页码</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pageSize" elementType="Argument">
                <stringProp name="Argument.name">pageSize</stringProp>
                <stringProp name="Argument.value">4</stringProp>
                <stringProp name="Argument.desc">每页条数</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="入驻指南" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: &quot;&quot;,&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/app/getInGuide.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2070259289">status&quot;:1</stringProp>
                <stringProp name="-1341528251">msg&quot;:&quot;OK</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="资讯列表查询----ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="pageNo" elementType="Argument">
                <stringProp name="Argument.name">pageNo</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">页码</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pageSize" elementType="Argument">
                <stringProp name="Argument.name">pageSize</stringProp>
                <stringProp name="Argument.value">4</stringProp>
                <stringProp name="Argument.desc">每页条数</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="资讯列表查询" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;pageNo&quot;: &quot;${pageNo}&quot;,&#xd;
        &quot;pageSize&quot;: &quot;${pageSize}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/aface/appInformationList.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2070259289">status&quot;:1</stringProp>
                <stringProp name="3076010">data</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="咨询详情查看----参数正常传接口返回资讯id不能为空" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="informationId" elementType="Argument">
                <stringProp name="Argument.name">informationId</stringProp>
                <stringProp name="Argument.value">10000037</stringProp>
                <stringProp name="Argument.desc">资讯id</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="资讯详情查看" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;informationId&quot;: &quot;${informationId}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/aface/getInformation.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="首页额度----无接口完整地址，接口404" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="appId" elementType="Argument">
                <stringProp name="Argument.name">appId</stringProp>
                <stringProp name="Argument.value">10000156</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="首页额度" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;appId&quot;: &quot;${appId}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/appQuota.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="借款审核----无接口完整地址，接口404" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="pageNo" elementType="Argument">
                <stringProp name="Argument.name">pageNo</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">页码</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pageSize" elementType="Argument">
                <stringProp name="Argument.name">pageSize</stringProp>
                <stringProp name="Argument.value">4</stringProp>
                <stringProp name="Argument.desc">每页条数</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="appId" elementType="Argument">
                <stringProp name="Argument.name">appId</stringProp>
                <stringProp name="Argument.value">10000156</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="借款审核" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;pageNo&quot;: &quot;${pageNo}&quot;,&#xd;
        &quot;pageSize&quot;: &quot;${pageSize}&quot;,&#xd;
        &quot;phone&quot;: &quot;${phone}&quot;,&#xd;
        &quot;appId&quot;: &quot;${appId}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/userApplyQuotaList.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="资料认证（发送验证码）----无接口完整地址，接口404" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="资料认证（发送验证码）" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/app/getAssistanceList.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="资料认证----无接口完整地址，接口404，参数需未完善" enabled="false">
          <stringProp name="TestPlan.comments">从微粒贷参数以后，基本都是int类型（yearIncome为double），无参数取值与意义对应关系</stringProp>
        </GenericController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="username" elementType="Argument">
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">${__RandomString(2,赵钱孙李周吴郑王冯陈褚卫蒋沈韩杨朱秦尤许何吕施张孔曹严华金魏陶姜戚谢邹喻柏水窦章云苏潘葛奚范彭郎鲁韦昌马苗凤花方俞任袁柳酆鲍史唐费廉岑薛雷贺倪汤滕殷罗毕郝邬安常乐于时傅皮卞齐康伍余元卜顾孟平黄和穆萧尹姚邵湛汪祁毛禹狄米贝明臧计伏成戴谈宋茅庞熊纪舒屈项祝董梁杜阮蓝闵席季秀娟英华慧巧美娜静淑惠珠翠雅芝玉萍红娥玲芬芳燕彩春菊兰凤洁梅琳素云莲真环雪荣爱妹霞香月莺媛艳瑞凡佳嘉琼勤珍贞莉桂娣叶璧璐娅琦晶妍茜秋珊莎锦黛青倩婷姣婉娴瑾颖露瑶怡婵雁蓓纨仪荷丹蓉眉君琴蕊薇菁梦岚苑婕馨瑗琰韵融园艺咏卿聪澜纯毓悦昭冰爽琬茗羽希宁欣飘育滢馥筠柔竹霭凝晓欢霄枫芸菲寒伊亚宜可姬舒影荔枝思丽 伟刚勇毅俊峰强军平保东文辉力明永健世广志义兴良海山仁波宁贵福生龙元全国胜学祥才发武新利清飞彬富顺信子杰涛昌成康星光天达安岩中茂进林有坚和彪博诚先敬震振壮会思群豪心邦承乐绍功松善厚庆磊民友裕河哲江超浩亮政谦亨奇固之轮翰朗伯宏言若鸣朋斌梁栋维启克伦翔旭鹏泽晨辰士以建家致树炎德行时泰盛雄琛钧冠策腾楠榕风航弘,)}</stringProp>
                <stringProp name="Argument.desc">真实姓名</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="idCard1" elementType="Argument">
                <stringProp name="Argument.name">idCard1</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.desc">身份证号</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cityLive" elementType="Argument">
                <stringProp name="Argument.name">cityLive</stringProp>
                <stringProp name="Argument.value">似懂非懂热热辅导费GV成本</stringProp>
                <stringProp name="Argument.desc">所在城市、省-市-区县街道</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="companyAddress" elementType="Argument">
                <stringProp name="Argument.name">companyAddress</stringProp>
                <stringProp name="Argument.value">发个仍维持阿诗丹顿需擦拭的地方在才出生地</stringProp>
                <stringProp name="Argument.desc">单位地址</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="car" elementType="Argument">
                <stringProp name="Argument.name">car</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">车辆信息：0、无；1、贷款车；2、全款车</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="house" elementType="Argument">
                <stringProp name="Argument.name">house</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">是否有房：0、无房产；1、有房（不确定房产类型）；2、商品房（有贷款）；4、商品房（无贷款）</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="fund" elementType="Argument">
                <stringProp name="Argument.name">fund</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">公积金：0、无；1、有</stringProp>
              </elementProp>
              <elementProp name="social" elementType="Argument">
                <stringProp name="Argument.name">social</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">有无社保：0、无；1、有</stringProp>
              </elementProp>
              <elementProp name="weilidai" elementType="Argument">
                <stringProp name="Argument.name">weilidai</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">微粒贷：无微粒贷；5000以内；1万以内；1-3万；3-5万；5-10万</stringProp>
              </elementProp>
              <elementProp name="amount" elementType="Argument">
                <stringProp name="Argument.name">amount</stringProp>
                <stringProp name="Argument.value">5000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">借款额度：小于首页最大额度</stringProp>
              </elementProp>
              <elementProp name="yearIncome" elementType="Argument">
                <stringProp name="Argument.name">yearIncome</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">年收入：5万以下；5-10万；10-20万；20万以上</stringProp>
              </elementProp>
              <elementProp name="workYear" elementType="Argument">
                <stringProp name="Argument.name">workYear</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">工作年限：6个月以下；6到11个月；1-3年；3年以上</stringProp>
              </elementProp>
              <elementProp name="loanTerm" elementType="Argument">
                <stringProp name="Argument.name">loanTerm</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">借款期限：3个月；6个月；12个月；24个月</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="资料认证" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;username&quot;: &quot;${username}&quot;,&#xd;
        &quot;idCard&quot;: &quot;${idCard}&quot;,&#xd;
        &quot;cityLive&quot;: &quot;${cityLive}&quot;,&#xd;
        &quot;companyAddress&quot;: &quot;${companyAddress}&quot;,&#xd;
        &quot;car&quot;: &quot;${car}&quot;,&#xd;
        &quot;house&quot;: &quot;${house}&quot;,&#xd;
        &quot;fund&quot;: &quot;${fund}&quot;,&#xd;
        &quot;social&quot;: &quot;${social}&quot;,&#xd;
        &quot;weilidai&quot;: &quot;${weilidai}&quot;,&#xd;
        &quot;amount&quot;: &quot;${amount}&quot;,&#xd;
        &quot;yearIncome&quot;: &quot;${yearIncome}&quot;,&#xd;
        &quot;workYear&quot;: &quot;${workYear}&quot;,&#xd;
        &quot;loanTerm&quot;: &quot;${loanTerm}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/personData.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="广告----ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="adverType" elementType="Argument">
                <stringProp name="Argument.name">adverType</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.desc">广告类型：0启动页广告 1首页弹窗 2首页分类下方广告位 3 个人中心广告位 4：社区广告 5：首页资讯广告 6：资讯详情广告 7:视频首页广告 8：资讯列表广告 9：身价测试    </stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="广告" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;adverType&quot;: &quot;${adverType}&quot;,&#xd;
        &quot;pageSize&quot;: &quot;${pageSize}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/app/getAdvertisement.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2070259289">status&quot;:1</stringProp>
                <stringProp name="1025947086">获取成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="撞库----参数正常传接口返回电话不能为空" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="pageNo" elementType="Argument">
                <stringProp name="Argument.name">pageNo</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">页码</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pageSize" elementType="Argument">
                <stringProp name="Argument.name">pageSize</stringProp>
                <stringProp name="Argument.value">4</stringProp>
                <stringProp name="Argument.desc">每页条数</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="撞库" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/app/getDbUserRegist.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="推荐注册接口----参数正常传接口返回电话不能为空" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="pageNo" elementType="Argument">
                <stringProp name="Argument.name">pageNo</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">页码</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pageSize" elementType="Argument">
                <stringProp name="Argument.name">pageSize</stringProp>
                <stringProp name="Argument.value">4</stringProp>
                <stringProp name="Argument.desc">每页条数</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="推荐注册接口" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone}&quot;,&#xd;
        &quot;channelId&quot;: &quot;${channelId}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/app/thirdRegister.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="发现列表----ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="pageNo" elementType="Argument">
                <stringProp name="Argument.name">pageNo</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">页码</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pageSize" elementType="Argument">
                <stringProp name="Argument.name">pageSize</stringProp>
                <stringProp name="Argument.value">4</stringProp>
                <stringProp name="Argument.desc">每页条数</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="发现列表" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;pageNo&quot;: &quot;${pageNo}&quot;,&#xd;
        &quot;pageSize&quot;: &quot;${pageSize}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/aface/appInformationList.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2070259289">status&quot;:1</stringProp>
                <stringProp name="3076010">data</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="发现详情----参数正常传接口返回电话不能为空" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="nid" elementType="Argument">
                <stringProp name="Argument.name">nid</stringProp>
                <stringProp name="Argument.value">10000004</stringProp>
                <stringProp name="Argument.desc">资讯id</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="发现详情" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;nid&quot;: &quot;${nid}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/aface/getInformation.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="首页分类----ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="categoryId" elementType="Argument">
                <stringProp name="Argument.name">categoryId</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="首页分类" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;categoryId&quot;: &quot;${categoryId}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/aface/category.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2070259289">status&quot;:1</stringProp>
                <stringProp name="-1867169789">success</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="所有广告位----参数正常接口返回广告位不能为空" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="type" elementType="Argument">
                <stringProp name="Argument.name">type</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">类型</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="所有广告位" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/aface/advert.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="广告详情----ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="advertId" elementType="Argument">
                <stringProp name="Argument.name">advertId</stringProp>
                <stringProp name="Argument.value">10000277</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="广告详情" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;advertId&quot;: &quot;${advertId}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/aface/advertInfo.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="基金产品列表----接口重连，确认是否有该接口" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="categoryName" elementType="Argument">
                <stringProp name="Argument.name">categoryName</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.desc">资讯id</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="基金产品列表" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;categoryName&quot;: &quot;${categoryName}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/aface/productList.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品详情----接口重连，确认是否有该接口（路径不一样）" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="productId" elementType="Argument">
                <stringProp name="Argument.name">productId</stringProp>
                <stringProp name="Argument.value">10001045</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品详情" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/aface/productInfo.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="身份认证----接口重连，确认是否有该接口" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="name" elementType="Argument">
                <stringProp name="Argument.name">name</stringProp>
                <stringProp name="Argument.value">何华峰</stringProp>
                <stringProp name="Argument.desc">姓名</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="idCard" elementType="Argument">
                <stringProp name="Argument.name">idCard</stringProp>
                <stringProp name="Argument.value">330681199412207058</stringProp>
                <stringProp name="Argument.desc">身份证号码</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="aMNId" elementType="Argument">
                <stringProp name="Argument.name">aMNId</stringProp>
                <stringProp name="Argument.value">10000000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="phone222" elementType="Argument">
                <stringProp name="Argument.name">phone222</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cardFrontUrl" elementType="Argument">
                <stringProp name="Argument.name">cardFrontUrl</stringProp>
                <stringProp name="Argument.value">www.baidu.com</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cardReverseUrl" elementType="Argument">
                <stringProp name="Argument.name">cardReverseUrl</stringProp>
                <stringProp name="Argument.value">www.baidu.com</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="身份认证" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;name&quot;: &quot;${name}&quot;,&#xd;
        &quot;idCard&quot;: &quot;${idCard}&quot;,&#xd;
        &quot;aMNId&quot;: ${aMNId},&#xd;
        &quot;phone&quot;: ${phone},&#xd;
        &quot;cardFrontUrl&quot;: &quot;${cardFrontUrl}&quot;,&#xd;
        &quot;cardReverseUrl&quot;: &quot;${cardReverseUrl}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/aface/verifie.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="消息标签条数----接口重连，确认是否有该接口" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="消息标签条数" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: &quot;&quot;,&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/app/getMessageNum.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="工具分类----接口重连，确认是否有该接口" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="工具分类" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: &quot;&quot;,&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/app/getTools.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="用户资料认证----接口重连，确认是否有该接口" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="quota" elementType="Argument">
                <stringProp name="Argument.name">quota</stringProp>
                <stringProp name="Argument.value">10000</stringProp>
                <stringProp name="Argument.desc">借款额度</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="term" elementType="Argument">
                <stringProp name="Argument.name">term</stringProp>
                <stringProp name="Argument.value">12</stringProp>
                <stringProp name="Argument.desc">借款期限</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="username000" elementType="Argument">
                <stringProp name="Argument.name">username000</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.desc">姓名</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="idCard000" elementType="Argument">
                <stringProp name="Argument.name">idCard000</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.desc">身份证号码</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="blackBox" elementType="Argument">
                <stringProp name="Argument.name">blackBox</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">设备指纹</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="用户资料认证" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;quota&quot;: &quot;${quota}&quot;,&#xd;
        &quot;term&quot;: &quot;${term}&quot;,&#xd;
        &quot;userName&quot;: &quot;${username}&quot;,&#xd;
        &quot;idCard&quot;: &quot;${idCard}&quot;,&#xd;
        &quot;blackBox&quot;: &quot;${blackBox}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/user/updateAuthentication.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="用户评测信息----接口重连，确认是否有该接口" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="用户评测信息" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: &quot;&quot;,&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/user/getEvaluation.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品方案列表----接口重连，确认是否有该接口" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品方案列表" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: &quot;&quot;,&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/product/getProgramme.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="用户申请记录----接口链接超时，确认是否有该接口" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="status" elementType="Argument">
                <stringProp name="Argument.name">status</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">状态：1：已申请 0：已使用</stringProp>
              </elementProp>
              <elementProp name="pageNo" elementType="Argument">
                <stringProp name="Argument.name">pageNo</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">页码</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pageSize" elementType="Argument">
                <stringProp name="Argument.name">pageSize</stringProp>
                <stringProp name="Argument.value">4</stringProp>
                <stringProp name="Argument.desc">每页条数</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="用户申请记录" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;pageSize&quot;: &quot;${pageSize}&quot;&#xd;
        &quot;pageNo&quot;: &quot;${pageNo}&quot;,&#xd;
        &quot;status&quot;: &quot;${status}&quot;,&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/user/getApplicationRecord.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="新增产品记录----接口重连，确认是否有该接口" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="amount" elementType="Argument">
                <stringProp name="Argument.name">amount</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.desc">申请金额mayLoan</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="customQuota" elementType="Argument">
                <stringProp name="Argument.name">customQuota</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.desc">定制额度mayLoan</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="maxQuota" elementType="Argument">
                <stringProp name="Argument.name">maxQuota</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.desc">最大额度moneyMax</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="borrowingCycle" elementType="Argument">
                <stringProp name="Argument.name">borrowingCycle</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.desc">借款周期applyNum</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="interestRate" elementType="Argument">
                <stringProp name="Argument.name">interestRate</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.desc">借款利率rate</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productName" elementType="Argument">
                <stringProp name="Argument.name">productName</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.desc">产品名称</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productIco" elementType="Argument">
                <stringProp name="Argument.name">productIco</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.desc">产品图标URL</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="url" elementType="Argument">
                <stringProp name="Argument.name">url</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.desc">产品链接</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productId" elementType="Argument">
                <stringProp name="Argument.name">productId</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.desc">产品id</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新增产品记录" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;amount&quot;: &quot;${amount}&quot;,&#xd;
        &quot;customQuota&quot;: &quot;${customQuota}&quot;,&#xd;
        &quot;maxQuota&quot;: &quot;${maxQuota}&quot;,&#xd;
        &quot;borrowingCycle&quot;: &quot;${borrowingCycle}&quot;,&#xd;
        &quot;interestRate&quot;: &quot;${interestRate}&quot;,&#xd;
        &quot;productName&quot;: &quot;${productName}&quot;,&#xd;
        &quot;productIco&quot;: &quot;${productIco}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/product/addProductRecord.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="资料认证发送验证码----接口重连，确认是否有该接口" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="phone111" elementType="Argument">
                <stringProp name="Argument.name">phone111</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="资料认证发送验证码" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/user/authSendCode.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="获取用户使用产品----接口重连，确认是否有该接口" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="nid" elementType="Argument">
                <stringProp name="Argument.name">nid</stringProp>
                <stringProp name="Argument.value">10000004</stringProp>
                <stringProp name="Argument.desc">资讯id</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取用户使用产品" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: &quot;&quot;,&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/product/getUserPrductUseList.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="插入用户使用产品----接口重连，确认是否有该接口" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="suggestionName" elementType="Argument">
                <stringProp name="Argument.name">suggestionName</stringProp>
                <stringProp name="Argument.value">1213</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="amount" elementType="Argument">
                <stringProp name="Argument.name">amount</stringProp>
                <stringProp name="Argument.value">1231</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="插入用户使用产品" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: [&#xd;
        {&#xd;
            &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
            &quot;suggestionName&quot;: ${suggestionName},&#xd;
            &quot;amount&quot;: &quot;${amount}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/product/addUserPrductUse.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="更新用户使用产品----接口重连，确认是否有该接口" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="更新用户使用产品" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/product/updateUserPrductUse.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="第三方图形验证码解析----接口重连，确认是否有该接口" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="imgCode" elementType="Argument">
                <stringProp name="Argument.name">imgCode</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.desc">图形验证码base64字符串或者图形验证码链接</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="第三方图形验证码解析" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;imgCode&quot;: &quot;${imgCode}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/product/getImgCode.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="获取产品步骤----接口重连，确认是否有该接口" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取产品步骤" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/product/getProductStep.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="调用信贷保镖API----接口重连，确认是否有该接口" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="nid" elementType="Argument">
                <stringProp name="Argument.name">nid</stringProp>
                <stringProp name="Argument.value">10000004</stringProp>
                <stringProp name="Argument.desc">资讯id</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="调用信贷保镖API" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;accountMobile&quot;: &quot;${accountMobile}&quot;,&#xd;
        &quot;accountName&quot;: &quot;${accountName}&quot;,&#xd;
        &quot;idNumber&quot;: &quot;${accountMobile}&quot;,&#xd;
        &quot;blackBox&quot;: &quot;${blackBox}&quot;,&#xd;
        &quot;ipAddress&quot;: &quot;${ipAddress}&quot;,&#xd;
        &quot;loanAmount&quot;: &quot;${loanAmount}&quot;,&#xd;
        &quot;loanTerm&quot;: &quot;${loanTerm}&quot;,&#xd;
        &quot;bizCode&quot;: &quot;${bizCode}&quot;,&#xd;
        &quot;termUnit&quot;: &quot;${termUnit}&quot;,&#xd;
        &quot;tokenId&quot;: &quot;${tokenId}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/verify/call.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">partner_code</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">partner_key</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">app_name</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="微信客服----接口重连，确认是否有该接口" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="nid" elementType="Argument">
                <stringProp name="Argument.name">nid</stringProp>
                <stringProp name="Argument.value">10000004</stringProp>
                <stringProp name="Argument.desc">资讯id</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="微信客服" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: &quot;&quot;,&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/user/getUserWxNo.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="客服电话区域过滤开关----接口重连，确认是否有该接口" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="nid" elementType="Argument">
                <stringProp name="Argument.name">nid</stringProp>
                <stringProp name="Argument.value">10000004</stringProp>
                <stringProp name="Argument.desc">资讯id</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客服电话区域过滤开关" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: &quot;&quot;,&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/app/getMobileSwitch.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">partner_code</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">partner_key</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">app_name</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="app版本更新（IOS使用）----接口重连，确认是否有该接口" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="nid" elementType="Argument">
                <stringProp name="Argument.name">nid</stringProp>
                <stringProp name="Argument.value">10000004</stringProp>
                <stringProp name="Argument.desc">资讯id</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="app版本更新（IOS使用）" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: &quot;&quot;,&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/app/getAppVersion.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">partner_code</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">partner_key</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">app_name</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="点击更多方案----接口重连，确认是否有该接口" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="nid" elementType="Argument">
                <stringProp name="Argument.name">nid</stringProp>
                <stringProp name="Argument.value">10000004</stringProp>
                <stringProp name="Argument.desc">资讯id</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="点击更多方案" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;accountMobile&quot;: &quot;${accountMobile}&quot;,&#xd;
        &quot;accountName&quot;: &quot;${accountName}&quot;,&#xd;
        &quot;idNumber&quot;: &quot;${accountMobile}&quot;,&#xd;
        &quot;blackBox&quot;: &quot;${blackBox}&quot;,&#xd;
        &quot;ipAddress&quot;: &quot;${ipAddress}&quot;,&#xd;
        &quot;loanAmount&quot;: &quot;${loanAmount}&quot;,&#xd;
        &quot;loanTerm&quot;: &quot;${loanTerm}&quot;,&#xd;
        &quot;bizCode&quot;: &quot;${bizCode}&quot;,&#xd;
        &quot;termUnit&quot;: &quot;${termUnit}&quot;,&#xd;
        &quot;tokenId&quot;: &quot;${tokenId}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/product/delMoreProduct.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">partner_code</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">partner_key</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">app_name</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="获取延迟时间（IOS使用）----接口重连，确认是否有该接口" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="nid" elementType="Argument">
                <stringProp name="Argument.name">nid</stringProp>
                <stringProp name="Argument.value">10000004</stringProp>
                <stringProp name="Argument.desc">资讯id</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取延迟时间（IOS使用）" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: &quot;&quot;,&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/app/getDelayed.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">partner_code</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">partner_key</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">app_name</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="获取实名认证----接口重连，确认是否有该接口" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="nid" elementType="Argument">
                <stringProp name="Argument.name">nid</stringProp>
                <stringProp name="Argument.value">10000004</stringProp>
                <stringProp name="Argument.desc">资讯id</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取实名认证" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/aface/getVerifie.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">partner_code</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">partner_key</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">app_name</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="登陆方案----接口重连，确认是否有该接口" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="nid" elementType="Argument">
                <stringProp name="Argument.name">nid</stringProp>
                <stringProp name="Argument.value">10000004</stringProp>
                <stringProp name="Argument.desc">资讯id</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="登陆方案" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;accountMobile&quot;: &quot;${accountMobile}&quot;,&#xd;
        &quot;accountName&quot;: &quot;${accountName}&quot;,&#xd;
        &quot;idNumber&quot;: &quot;${accountMobile}&quot;,&#xd;
        &quot;blackBox&quot;: &quot;${blackBox}&quot;,&#xd;
        &quot;ipAddress&quot;: &quot;${ipAddress}&quot;,&#xd;
        &quot;loanAmount&quot;: &quot;${loanAmount}&quot;,&#xd;
        &quot;loanTerm&quot;: &quot;${loanTerm}&quot;,&#xd;
        &quot;bizCode&quot;: &quot;${bizCode}&quot;,&#xd;
        &quot;termUnit&quot;: &quot;${termUnit}&quot;,&#xd;
        &quot;tokenId&quot;: &quot;${tokenId}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/app/getSchemeSwitching.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">partner_code</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">partner_key</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">app_name</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="ios代码配置----接口重连，确认是否有该接口" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="nid" elementType="Argument">
                <stringProp name="Argument.name">nid</stringProp>
                <stringProp name="Argument.value">10000004</stringProp>
                <stringProp name="Argument.desc">资讯id</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ios代码配置" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: &quot;&quot;,&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/user/openApplication.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">partner_code</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">partner_key</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">app_name</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="极光推送客户端信息保存----接口重连，确认是否有该接口" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="registrationId" elementType="Argument">
                <stringProp name="Argument.name">registrationId</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="label" elementType="Argument">
                <stringProp name="Argument.name">label</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.desc">标签</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="极光推送客户端信息保存" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;registrationId&quot;: &quot;${registrationId}&quot;,&#xd;
        &quot;label&quot;: &quot;${label}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/app/saveJGPushInfo.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">partner_code</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">partner_key</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">app_name</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="用户添加产品评论产品----接口重连，确认是否有该接口" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="productId" elementType="Argument">
                <stringProp name="Argument.name">productId</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.desc">产品id</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="content" elementType="Argument">
                <stringProp name="Argument.name">content</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.desc">评价内容</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="speedScore" elementType="Argument">
                <stringProp name="Argument.name">speedScore</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.desc">放款速度满意度</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="quotaScore" elementType="Argument">
                <stringProp name="Argument.name">quotaScore</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.desc">额度满意度</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="rateScore" elementType="Argument">
                <stringProp name="Argument.name">rateScore</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.desc">产品利率满意度</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="用户添加产品评论产品" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;content&quot;: &quot;${content}&quot;,&#xd;
        &quot;speedScore&quot;: &quot;${speedScore}&quot;,&#xd;
        &quot;quotaScore&quot;: &quot;${quotaScore}&quot;,&#xd;
        &quot;rateScore&quot;: &quot;${rateScore}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/product/addUserEvaluate.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">partner_code</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">partner_key</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">app_name</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="首页热门话题----接口重连，确认是否有该接口" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="pageNo" elementType="Argument">
                <stringProp name="Argument.name">pageNo</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">页码</stringProp>
              </elementProp>
              <elementProp name="pageSize" elementType="Argument">
                <stringProp name="Argument.name">pageSize</stringProp>
                <stringProp name="Argument.value">10</stringProp>
                <stringProp name="Argument.desc">条数</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sortType" elementType="Argument">
                <stringProp name="Argument.name">sortType</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">1:热门话题 2：最新话题</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="recommendType" elementType="Argument">
                <stringProp name="Argument.name">recommendType</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">0 不推荐 1 首页位置1 2 首页位置2 3 首页位置3</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="hotType" elementType="Argument">
                <stringProp name="Argument.name">hotType</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">热门类型 1：热门 0：否.</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="首页热门话题" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;pageNo&quot;: &quot;${pageNo}&quot;,&#xd;
        &quot;pageSize&quot;: &quot;${pageSize}&quot;,&#xd;
        &quot;sortType&quot;: &quot;${sortType}&quot;,&#xd;
        &quot;recommendType&quot;: &quot;${recommendType}&quot;,&#xd;
        &quot;hotType&quot;: &quot;${hotType}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/app/getHotTopicList.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="首页跑马灯----接口重连，确认是否有该接口" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="advertId" elementType="Argument">
                <stringProp name="Argument.name">advertId</stringProp>
                <stringProp name="Argument.value">10000277</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="首页跑马灯" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: &quot;&quot;,&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/product/getHorseList.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="首页下款人数----接口重连，确认是否有该接口" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="advertId" elementType="Argument">
                <stringProp name="Argument.name">advertId</stringProp>
                <stringProp name="Argument.value">10000277</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="首页下款人数" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: &quot;&quot;,&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/product/getProductPeopleNum.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="新人专享列表----接口重连，确认是否有该接口" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="pageSize" elementType="Argument">
                <stringProp name="Argument.name">pageSize</stringProp>
                <stringProp name="Argument.value">10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">条数</stringProp>
              </elementProp>
              <elementProp name="pageNo" elementType="Argument">
                <stringProp name="Argument.name">pageNo</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">页码</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="setMoney" elementType="Argument">
                <stringProp name="Argument.name">setMoney</stringProp>
                <stringProp name="Argument.value">10000</stringProp>
                <stringProp name="Argument.desc">设置金额</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新人专享列表" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;pageSize&quot;: &quot;${pageSize}&quot;,&#xd;
        &quot;pageNo&quot;: &quot;${pageNo}&quot;,&#xd;
        &quot;setMoney&quot;: &quot;${setMoney}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/product/aloneProductList.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="更新点赞数、阅读数、评论数----接口重连，确认是否有该接口" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="nid" elementType="Argument">
                <stringProp name="Argument.name">nid</stringProp>
                <stringProp name="Argument.value">10000277</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">话题id</stringProp>
              </elementProp>
              <elementProp name="countType" elementType="Argument">
                <stringProp name="Argument.name">countType</stringProp>
                <stringProp name="Argument.value">2</stringProp>
                <stringProp name="Argument.desc">话题统计类型：点赞(&quot;0&quot;) , 阅读(&quot;1&quot;) , 评论(&quot;2&quot;)</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="更新点赞数、阅读数、评论数" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;countType&quot;: &quot;${countType}&quot;,&#xd;
        &quot;nid&quot;: &quot;${nid}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/app/updateOptionCount.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="话题用户是否点赞----接口重连，确认是否有该接口" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="nid" elementType="Argument">
                <stringProp name="Argument.name">nid</stringProp>
                <stringProp name="Argument.value">10000277</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">话题id</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="话题用户是否点赞" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;nid&quot;: &quot;${nid}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/app/getClickRec.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="话题用户评论----接口重连，确认是否有该接口" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="comment" elementType="Argument">
                <stringProp name="Argument.name">comment</stringProp>
                <stringProp name="Argument.value">test</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">评论内容</stringProp>
              </elementProp>
              <elementProp name="raidersId" elementType="Argument">
                <stringProp name="Argument.name">raidersId</stringProp>
                <stringProp name="Argument.value">10000277</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="话题用户评论" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;comment&quot;: &quot;${comment}&quot;,&#xd;
        &quot;raidersId&quot;: &quot;${raidersId}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/app/addComment.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="进入单个话题----接口重连，确认是否有该接口" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="nid" elementType="Argument">
                <stringProp name="Argument.name">nid</stringProp>
                <stringProp name="Argument.value">10000277</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">话题id</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="进入单个话题" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;nid&quot;: &quot;${nid}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/app/getRecAndComment.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="状态监控----接口重连，确认是否有该接口" enabled="false">
          <stringProp name="TestPlan.comments">（用户关闭App的时间、 重新启动App的时间、启动次数、前台运行时长统计、后台运行时长统计）</stringProp>
        </GenericController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="receptionFunctionNum" elementType="Argument">
                <stringProp name="Argument.name">receptionFunctionNum</stringProp>
                <stringProp name="Argument.value">${__Random(10,3600,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">前台累计运行时长（秒）</stringProp>
              </elementProp>
              <elementProp name="backstageFunctionNum" elementType="Argument">
                <stringProp name="Argument.name">backstageFunctionNum</stringProp>
                <stringProp name="Argument.value">${__Random(10,3600,)}</stringProp>
                <stringProp name="Argument.desc">后台累计运行时长（秒）</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="startTime" elementType="Argument">
                <stringProp name="Argument.name">startTime</stringProp>
                <stringProp name="Argument.value">${__longSum(${__time},-3600000,)}</stringProp>
                <stringProp name="Argument.desc">重新启动App的时间(时间戳)----当前时间前一个小时</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="endTime" elementType="Argument">
                <stringProp name="Argument.name">endTime</stringProp>
                <stringProp name="Argument.value">${__time(,)}</stringProp>
                <stringProp name="Argument.desc">用户关闭App的时间(时间戳)</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="状态监控（用户关闭App的时间、 重新启动App的时间、启动次数、前台运行时长统计、后台运行时长统计）" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;receptionFunctionNum&quot;: &quot;${receptionFunctionNum}&quot;,&#xd;
        &quot;backstageFunctionNum&quot;: &quot;${backstageFunctionNum}&quot;,&#xd;
        &quot;startTime&quot;: &quot;${startTime}&quot;,&#xd;
        &quot;endTime&quot;: &quot;${endTime}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/conversionSystem/updateStatusMonitor.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="转化系统访问（h5用）----接口重连，确认是否有该接口" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="ip" elementType="Argument">
                <stringProp name="Argument.name">ip</stringProp>
                <stringProp name="Argument.value">192.16.241.51</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">id地址（rsa加密）</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="转化系统访问（h5用）" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;ip&quot;: &quot;${ip}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/conversionSystem/visitStatistics.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="转化系统下载（h5用）----接口重连，确认是否有该接口" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="phoneSerialNum" elementType="Argument">
                <stringProp name="Argument.name">phoneSerialNum</stringProp>
                <stringProp name="Argument.value">192.16.241.51</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">ip地址（rsa加密）</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="转化系统下载（h5用）" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phoneSerialNum&quot;: &quot;${phoneSerialNum}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/conversionSystem/downloadStatistics.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="转化系统安装----接口重连，确认是否有该接口" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="advertId" elementType="Argument">
                <stringProp name="Argument.name">advertId</stringProp>
                <stringProp name="Argument.value">10000277</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="转化系统安装" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: &quot;&quot;,&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/conversionSystem/installStatistics.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="卸载----接口重连，确认是否有该接口" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="advertId" elementType="Argument">
                <stringProp name="Argument.name">advertId</stringProp>
                <stringProp name="Argument.value">10000277</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="卸载" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: &quot;&quot;,&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/conversionSystem/uninstallStatistics.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="帖子编辑----空指针抛到前端" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="nId" elementType="Argument">
                <stringProp name="Argument.name">nId</stringProp>
                <stringProp name="Argument.value">10000004</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="classifyId" elementType="Argument">
                <stringProp name="Argument.name">classifyId</stringProp>
                <stringProp name="Argument.value">10000004</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="title" elementType="Argument">
                <stringProp name="Argument.name">title</stringProp>
                <stringProp name="Argument.value">健康的介绍了开工建设立刻搭街坊是</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">标题</stringProp>
              </elementProp>
              <elementProp name="content" elementType="Argument">
                <stringProp name="Argument.name">content</stringProp>
                <stringProp name="Argument.value">我是内容为什么会失败呢</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">内容</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="帖子编辑" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;nId&quot;: ${nId},&#xd;
        &quot;classifyId&quot;: ${classifyId},&#xd;
        &quot;title&quot;: &quot;${title}&quot;,&#xd;
        &quot;content&quot;: &quot;${content}&quot;,&#xd;
        &quot;fileList&quot;: [&#xd;
            &quot;http://www.baidu.com&quot;,&#xd;
            &quot;http://www.baidu.com&quot;&#xd;
        ]&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/infotitle/updateTitle.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1231566334">数据不存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="我的发帖----ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="type" elementType="Argument">
                <stringProp name="Argument.name">type</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">0-待审核，1-全部（已通过），2-未通过</stringProp>
              </elementProp>
              <elementProp name="pageNo" elementType="Argument">
                <stringProp name="Argument.name">pageNo</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">页码</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pageSize" elementType="Argument">
                <stringProp name="Argument.name">pageSize</stringProp>
                <stringProp name="Argument.value">4</stringProp>
                <stringProp name="Argument.desc">每页条数</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="我的发帖" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;pageSize&quot;: ${pageSize},&#xd;
        &quot;pageNo&quot;: ${pageNo},&#xd;
        &quot;type&quot;: ${type}&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/infotitle/getMyTitle.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="777749048">我的发帖</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="资讯-接口-我的收藏----ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="pageNo" elementType="Argument">
                <stringProp name="Argument.name">pageNo</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">页码</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pageSize" elementType="Argument">
                <stringProp name="Argument.name">pageSize</stringProp>
                <stringProp name="Argument.value">4</stringProp>
                <stringProp name="Argument.desc">每页条数</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="资讯-接口-我的收藏" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;pageSize&quot;: ${pageSize},&#xd;
        &quot;pageNo&quot;: ${pageNo}&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/infoCollect/getCollect.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="777897260">我的收藏</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="我的消息----ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="pageNo" elementType="Argument">
                <stringProp name="Argument.name">pageNo</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">页码</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pageSize" elementType="Argument">
                <stringProp name="Argument.name">pageSize</stringProp>
                <stringProp name="Argument.value">4</stringProp>
                <stringProp name="Argument.desc">每页条数</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="我的消息" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;pageSize&quot;: ${pageSize},&#xd;
        &quot;pageNo&quot;: ${pageNo}&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/inforeview/getMyMsg.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="777953722">我的消息</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="首页列表（最新/最热）----ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="sortType" elementType="Argument">
                <stringProp name="Argument.name">sortType</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">1:热门话题 2：最新话题</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pageNo" elementType="Argument">
                <stringProp name="Argument.name">pageNo</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">页码</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pageSize" elementType="Argument">
                <stringProp name="Argument.name">pageSize</stringProp>
                <stringProp name="Argument.value">4</stringProp>
                <stringProp name="Argument.desc">每页条数</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="首页列表（最新/最热）" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;pageSize&quot;: ${pageSize},&#xd;
        &quot;pageNo&quot;: ${pageNo},&#xd;
        &quot;sortType&quot;: ${sortType}&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/infotitle/list.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="899256374">热门话题</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="获取分类列表----ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="level" elementType="Argument">
                <stringProp name="Argument.name">level</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">1- 一级分类，2-二级分类，3-三级分类</stringProp>
              </elementProp>
              <elementProp name="parentId" elementType="Argument">
                <stringProp name="Argument.name">parentId</stringProp>
                <stringProp name="Argument.value">1000001</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">父级id，level为1时 传0 当发布文章时，传-1</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取分类列表" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;level&quot;: ${level},&#xd;
        &quot;parentId&quot;: ${parentId}&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/infoclassify/getClassify.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2070259289">status&quot;:1</stringProp>
                <stringProp name="682805">分类</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="资讯-接口-视频首页列表----ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="type" elementType="Argument">
                <stringProp name="Argument.name">type</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">类型 2-视频</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pageNo" elementType="Argument">
                <stringProp name="Argument.name">pageNo</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">页码</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pageSize" elementType="Argument">
                <stringProp name="Argument.name">pageSize</stringProp>
                <stringProp name="Argument.value">4</stringProp>
                <stringProp name="Argument.desc">每页条数</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="资讯-接口-视频首页列表" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;pageSize&quot;: ${pageSize},&#xd;
        &quot;pageNo&quot;: ${pageNo},&#xd;
        &quot;type&quot;: ${type}&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/infotitle/videolist.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1089520234">视频首页</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="资讯-接口-文章、视频详情----空指针抛到前端" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="nId" elementType="Argument">
                <stringProp name="Argument.name">nId</stringProp>
                <stringProp name="Argument.value">10000004</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="资讯-接口-文章、视频详情" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;nId&quot;: ${nId}&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/infotitle/detail.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1089520234">视频首页</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="资讯-接口-发帖----ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="classifyId" elementType="Argument">
                <stringProp name="Argument.name">classifyId</stringProp>
                <stringProp name="Argument.value">10000004</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">分类id</stringProp>
              </elementProp>
              <elementProp name="title" elementType="Argument">
                <stringProp name="Argument.name">title</stringProp>
                <stringProp name="Argument.value">testtitle_${__RandomString(5,赵钱孙李周吴郑王冯陈褚卫蒋沈韩杨朱秦尤许何吕施张孔曹严华金魏陶姜戚谢邹喻柏水窦章云苏潘葛奚范彭郎鲁韦昌马苗凤花方俞任袁柳酆鲍史唐费廉岑薛雷贺倪汤滕殷罗毕郝邬安常乐于时傅皮卞齐康伍余元卜顾孟平黄和穆萧尹姚邵湛汪祁毛禹狄米贝明臧计伏成戴谈宋茅庞熊纪舒屈项祝董梁杜阮蓝闵席季秀娟英华慧巧美娜静淑惠珠翠雅芝玉萍红娥玲芬芳燕彩春菊兰凤洁梅琳素云莲真环雪荣爱妹霞香月莺媛艳瑞凡佳嘉琼勤珍贞莉桂娣叶璧璐娅琦晶妍茜秋珊莎锦黛青倩婷姣婉娴瑾颖露瑶怡婵雁蓓纨仪荷丹蓉眉君琴蕊薇菁梦岚苑婕馨瑗琰韵融园艺咏卿聪澜纯毓悦昭冰爽琬茗羽希宁欣飘育滢馥筠柔竹霭凝晓欢霄枫芸菲寒伊亚宜可姬舒影荔枝思丽 伟刚勇毅俊峰强军平保东文辉力明永健世广志义兴良海山仁波宁贵福生龙元全国胜学祥才发武新利清飞彬富顺信子杰涛昌成康星光天达安岩中茂进林有坚和彪博诚先敬震振壮会思群豪心邦承乐绍功松善厚庆磊民友裕河哲江超浩亮政谦亨奇固之轮翰朗伯宏言若鸣朋斌梁栋维启克伦翔旭鹏泽晨辰士以建家致树炎德行时泰盛雄琛钧冠策腾楠榕风航弘,)}</stringProp>
                <stringProp name="Argument.desc">标题  testtitle_开头加5个汉字的随机标题</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="content" elementType="Argument">
                <stringProp name="Argument.name">content</stringProp>
                <stringProp name="Argument.value">testconntent${__RandomString(10,赵钱孙李周吴郑王冯陈褚卫蒋沈韩杨朱秦尤许何吕施张孔曹严华金魏陶姜戚谢邹喻柏水窦章云苏潘葛奚范彭郎鲁韦昌马苗凤花方俞任袁柳酆鲍史唐费廉岑薛雷贺倪汤滕殷罗毕郝邬安常乐于时傅皮卞齐康伍余元卜顾孟平黄和穆萧尹姚邵湛汪祁毛禹狄米贝明臧计伏成戴谈宋茅庞熊纪舒屈项祝董梁杜阮蓝闵席季秀娟英华慧巧美娜静淑惠珠翠雅芝玉萍红娥玲芬芳燕彩春菊兰凤洁梅琳素云莲真环雪荣爱妹霞香月莺媛艳瑞凡佳嘉琼勤珍贞莉桂娣叶璧璐娅琦晶妍茜秋珊莎锦黛青倩婷姣婉娴瑾颖露瑶怡婵雁蓓纨仪荷丹蓉眉君琴蕊薇菁梦岚苑婕馨瑗琰韵融园艺咏卿聪澜纯毓悦昭冰爽琬茗羽希宁欣飘育滢馥筠柔竹霭凝晓欢霄枫芸菲寒伊亚宜可姬舒影荔枝思丽 伟刚勇毅俊峰强军平保东文辉力明永健世广志义兴良海山仁波宁贵福生龙元全国胜学祥才发武新利清飞彬富顺信子杰涛昌成康星光天达安岩中茂进林有坚和彪博诚先敬震振壮会思群豪心邦承乐绍功松善厚庆磊民友裕河哲江超浩亮政谦亨奇固之轮翰朗伯宏言若鸣朋斌梁栋维启克伦翔旭鹏泽晨辰士以建家致树炎德行时泰盛雄琛钧冠策腾楠榕风航弘,)}</stringProp>
                <stringProp name="Argument.desc">内容  testconntent加10个汉字的随机内容</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="资讯-接口-发帖" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;classifyId&quot;: ${classifyId},&#xd;
        &quot;title&quot;: &quot;${title}&quot;,&#xd;
        &quot;content&quot;: &quot;${content}&quot;,&#xd;
        &quot;fileList&quot;: [&#xd;
            &quot;http://www.baidu.com&quot;,&#xd;
            &quot;http://www.baidu.com&quot;&#xd;
        ]&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/infotitle/addtitle.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-917020480">发布成功！</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="发帖成功检查" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="发帖成功检查" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;pageSize&quot;: 10,&#xd;
        &quot;pageNo&quot;: 1,&#xd;
        &quot;type&quot;: 0&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/infotitle/getMyTitle.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="777749048">我的发帖</stringProp>
                  <stringProp name="-2070259289">status&quot;:1</stringProp>
                  <stringProp name="-1270447058">title&quot;:&quot;${title}</stringProp>
                  <stringProp name="1591493484">content&quot;:&quot;${content}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="资讯-接口-分类文章、视频列表----ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="pageNo" elementType="Argument">
                <stringProp name="Argument.name">pageNo</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">页码</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pageSize" elementType="Argument">
                <stringProp name="Argument.name">pageSize</stringProp>
                <stringProp name="Argument.value">10</stringProp>
                <stringProp name="Argument.desc">每页条数</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="classifyId" elementType="Argument">
                <stringProp name="Argument.name">classifyId</stringProp>
                <stringProp name="Argument.value">10000004</stringProp>
                <stringProp name="Argument.desc">分类id</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="资讯-接口-分类文章、视频列表" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;pageSize&quot;: ${pageSize},&#xd;
        &quot;pageNo&quot;: ${pageNo},&#xd;
        &quot;classifyId&quot;: ${classifyId}&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/infotitle/classifyList.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="657012782">分类文章</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="IM即时登陆加密----ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="type" elementType="Argument">
                <stringProp name="Argument.name">type</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">类型 2-视频</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pageNo" elementType="Argument">
                <stringProp name="Argument.name">pageNo</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">页码</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pageSize" elementType="Argument">
                <stringProp name="Argument.name">pageSize</stringProp>
                <stringProp name="Argument.value">4</stringProp>
                <stringProp name="Argument.desc">每页条数</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="IM即时登陆加密" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: &quot;&quot;,&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/user/loginIm.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1215764628">加密成功！</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">userSig</stringProp>
              <stringProp name="RegexExtractor.regex">userSig&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">userId</stringProp>
              <stringProp name="RegexExtractor.regex">userId&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="新增评论----ok 未校验评论添加，添加评论后，查看我的评论数量未增长" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="type" elementType="Argument">
                <stringProp name="Argument.name">type</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">1-文章的评论，2-评论的评论，3-产品的评论</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="titleId" elementType="Argument">
                <stringProp name="Argument.name">titleId</stringProp>
                <stringProp name="Argument.value">10000102</stringProp>
                <stringProp name="Argument.desc">1-文章id，2-评论id，3-产品id</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="content" elementType="Argument">
                <stringProp name="Argument.name">content</stringProp>
                <stringProp name="Argument.value">test评论${__RandomString(5,赵钱孙李周吴郑王冯陈褚卫蒋沈韩杨朱秦尤许何吕施张孔曹严华金魏陶姜戚谢邹喻柏水窦章云苏潘葛奚范彭郎鲁韦昌马苗凤花方俞任袁柳酆鲍史唐费廉岑薛雷贺倪汤滕殷罗毕郝邬安常乐于时傅皮卞齐康伍余元卜顾孟平黄和穆萧尹姚邵湛汪祁毛禹狄米贝明臧计伏成戴谈宋茅庞熊纪舒屈项祝董梁杜阮蓝闵席季秀娟英华慧巧美娜静淑惠珠翠雅芝玉萍红娥玲芬芳燕彩春菊兰凤洁梅琳素云莲真环雪荣爱妹霞香月莺媛艳瑞凡佳嘉琼勤珍贞莉桂娣叶璧璐娅琦晶妍茜秋珊莎锦黛青倩婷姣婉娴瑾颖露瑶怡婵雁蓓纨仪荷丹蓉眉君琴蕊薇菁梦岚苑婕馨瑗琰韵融园艺咏卿聪澜纯毓悦昭冰爽琬茗羽希宁欣飘育滢馥筠柔竹霭凝晓欢霄枫芸菲寒伊亚宜可姬舒影荔枝思丽 伟刚勇毅俊峰强军平保东文辉力明永健世广志义兴良海山仁波宁贵福生龙元全国胜学祥才发武新利清飞彬富顺信子杰涛昌成康星光天达安岩中茂进林有坚和彪博诚先敬震振壮会思群豪心邦承乐绍功松善厚庆磊民友裕河哲江超浩亮政谦亨奇固之轮翰朗伯宏言若鸣朋斌梁栋维启克伦翔旭鹏泽晨辰士以建家致树炎德行时泰盛雄琛钧冠策腾楠榕风航弘,)}</stringProp>
                <stringProp name="Argument.desc">评论内容</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pageNo" elementType="Argument">
                <stringProp name="Argument.name">pageNo</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">页码</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pageSize" elementType="Argument">
                <stringProp name="Argument.name">pageSize</stringProp>
                <stringProp name="Argument.value">20</stringProp>
                <stringProp name="Argument.desc">每页条数</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新增评论" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;titleId&quot;: ${titleId},&#xd;
        &quot;content&quot;: &quot;${content}&quot;,&#xd;
        &quot;type&quot;: ${type}&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/inforeview/add.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-225687012">评论成功！</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="我发出的评论" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="我发出的评论" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;pageSize&quot;: ${pageSize},&#xd;
        &quot;pageNo&quot;: ${pageNo}&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/inforeview/getMyReview.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="471946656">我发出的评论</stringProp>
                  <stringProp name="-2070259289">status&quot;:1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="获取举报类型----ok" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取举报类型" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: &quot;&quot;,&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/inforeport/reportlist.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="621992151">举报类型</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="文章举报----ok 未添加验证" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="titleId" elementType="Argument">
                <stringProp name="Argument.name">titleId</stringProp>
                <stringProp name="Argument.value">10000135</stringProp>
                <stringProp name="Argument.desc">文章id</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="reportContent" elementType="Argument">
                <stringProp name="Argument.name">reportContent</stringProp>
                <stringProp name="Argument.value">1,</stringProp>
                <stringProp name="Argument.desc">举报内容（勾选的举报内容对应的id集）</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="reportElse" elementType="Argument">
                <stringProp name="Argument.name">reportElse</stringProp>
                <stringProp name="Argument.value">4</stringProp>
                <stringProp name="Argument.desc">其他（当勾选其他的时候，举报详情）</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="文章举报" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;titleId&quot;: ${titleId},&#xd;
        &quot;reportContent&quot;: &quot;${reportContent}&quot;,&#xd;
        &quot;reportElse&quot;: &quot;${reportElse}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/inforeport/report.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2095414475">举报成功！</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="资讯-接口-收藏文章----ok 未添加验证" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="titleId" elementType="Argument">
                <stringProp name="Argument.name">titleId</stringProp>
                <stringProp name="Argument.value">1000001</stringProp>
                <stringProp name="Argument.desc">类型 2-视频</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="资讯-接口-收藏文章" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;titleId&quot;: ${titleId}&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/infoCollect/save.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1434926483">收藏资讯成功</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="我发出的评论----ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="pageNo" elementType="Argument">
                <stringProp name="Argument.name">pageNo</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">页码</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pageSize" elementType="Argument">
                <stringProp name="Argument.name">pageSize</stringProp>
                <stringProp name="Argument.value">20</stringProp>
                <stringProp name="Argument.desc">每页条数</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="我发出的评论" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;pageSize&quot;: ${pageSize},&#xd;
        &quot;pageNo&quot;: ${pageNo}&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/inforeview/getMyReview.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="471946656">我发出的评论</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="删除帖子----ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="nId" elementType="Argument">
                <stringProp name="Argument.name">nId</stringProp>
                <stringProp name="Argument.value">100001</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="删除帖子" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;nId&quot;: ${nId}&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/infotitle/delete.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1443786607">删除帖子失败！</stringProp>
                <stringProp name="246471406">status&quot;:-1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="排行榜----ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="pageNo" elementType="Argument">
                <stringProp name="Argument.name">pageNo</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">页码</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pageSize" elementType="Argument">
                <stringProp name="Argument.name">pageSize</stringProp>
                <stringProp name="Argument.value">10</stringProp>
                <stringProp name="Argument.desc">每页条数</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="排行榜" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;pageSize&quot;: ${pageSize},&#xd;
        &quot;pageNo&quot;: ${pageNo}&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/product/rankProductList.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-731385813">totalCount</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="身价测试提交----ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="selectList" elementType="Argument">
                <stringProp name="Argument.name">selectList</stringProp>
                <stringProp name="Argument.value">1-2</stringProp>
                <stringProp name="Argument.desc">选择list</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="身价测试提交" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;selectList&quot;: &quot;${selectList}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/valuation/valuationTest.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3076010">data</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品类型小标签（秒进斗金）----ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="type" elementType="Argument">
                <stringProp name="Argument.name">type</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">类型 2-视频</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pageNo" elementType="Argument">
                <stringProp name="Argument.name">pageNo</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">页码</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pageSize" elementType="Argument">
                <stringProp name="Argument.name">pageSize</stringProp>
                <stringProp name="Argument.value">4</stringProp>
                <stringProp name="Argument.desc">每页条数</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品类型小标签（秒进斗金）" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: &quot;&quot;,&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/product/getProductLab.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="621702890">产品类型</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="身价测试结果----ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="type" elementType="Argument">
                <stringProp name="Argument.name">type</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">类型 2-视频</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pageNo" elementType="Argument">
                <stringProp name="Argument.name">pageNo</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">页码</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pageSize" elementType="Argument">
                <stringProp name="Argument.name">pageSize</stringProp>
                <stringProp name="Argument.value">4</stringProp>
                <stringProp name="Argument.desc">每页条数</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="身价测试结果" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;pageSize&quot;: ${pageSize},&#xd;
        &quot;pageNo&quot;: ${pageNo},&#xd;
        &quot;type&quot;: ${type}&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/valuation/valuationResult.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3076010">data</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="测试身价产品----ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="type" elementType="Argument">
                <stringProp name="Argument.name">type</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">类型 2-视频</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pageNo" elementType="Argument">
                <stringProp name="Argument.name">pageNo</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">页码</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pageSize" elementType="Argument">
                <stringProp name="Argument.name">pageSize</stringProp>
                <stringProp name="Argument.value">4</stringProp>
                <stringProp name="Argument.desc">每页条数</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="测试身价产品" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: &quot;&quot;,&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/product/getSocialProductList.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="621378987">产品列表</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="资讯-获取评论----ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="type" elementType="Argument">
                <stringProp name="Argument.name">type</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">1-文章的评论，2-评论的评论,3-产品的评论</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="nId" elementType="Argument">
                <stringProp name="Argument.name">nId</stringProp>
                <stringProp name="Argument.value">10000004</stringProp>
                <stringProp name="Argument.desc">1-文章编号,2-评论编号，3-产品的编号</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pageNo" elementType="Argument">
                <stringProp name="Argument.name">pageNo</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">页码</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pageSize" elementType="Argument">
                <stringProp name="Argument.name">pageSize</stringProp>
                <stringProp name="Argument.value">10</stringProp>
                <stringProp name="Argument.desc">每页条数</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="资讯-获取评论" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;pageSize&quot;: ${pageSize},&#xd;
        &quot;pageNo&quot;: ${pageNo},&#xd;
        &quot;type&quot;: ${type},&#xd;
        &quot;nId&quot;: ${nId}&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/inforeview/getReview.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1144950">评论</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="会员充值下单----ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="orderType" elementType="Argument">
                <stringProp name="Argument.name">orderType</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">订单类型 1.会员 2.报告</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="vipType" elementType="Argument">
                <stringProp name="Argument.name">vipType</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">VIP类型 1月卡 2季卡 3年卡 4黑名单单次 5信用报告单次</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="payChannel" elementType="Argument">
                <stringProp name="Argument.name">payChannel</stringProp>
                <stringProp name="Argument.value">2</stringProp>
                <stringProp name="Argument.desc">支付类型 1支付宝 2微信</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ip" elementType="Argument">
                <stringProp name="Argument.name">ip</stringProp>
                <stringProp name="Argument.value">196.0.2.23</stringProp>
                <stringProp name="Argument.desc">IP</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="packageSign" elementType="Argument">
                <stringProp name="Argument.name">packageSign</stringProp>
                <stringProp name="Argument.value">WXPay</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="会员充值下单" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;orderType&quot;: &quot;${orderType}&quot;,&#xd;
        &quot;vipType&quot;: &quot;${vipType}&quot;,&#xd;
        &quot;payChannel&quot;: &quot;${payChannel}&quot;,&#xd;
        &quot;ip&quot;: &quot;${ip}&quot;,&#xd;
        &quot;packageSign&quot;: &quot;${packageSign}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/recharge/placeOrder.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2070259290">status&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="信用报告是否有用----ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="resultId" elementType="Argument">
                <stringProp name="Argument.name">resultId</stringProp>
                <stringProp name="Argument.value">1000004</stringProp>
                <stringProp name="Argument.desc">报告ID</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="isUseful" elementType="Argument">
                <stringProp name="Argument.name">isUseful</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">是否有用 0无用 1有用</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="信用报告是否有用" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;resultId&quot;: ${resultId},&#xd;
        &quot;isUseful&quot;: ${isUseful}&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/user/isUseful.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="信用报告----ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="type" elementType="Argument">
                <stringProp name="Argument.name">type</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">0个人中心 1查看历史报告</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="信用报告" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/user/creditReport.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-949331652">status&quot;:&quot;-1</stringProp>
                <stringProp name="231456776">未找到信用报告</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="会员价目列表----ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="type" elementType="Argument">
                <stringProp name="Argument.name">type</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">类型 2-视频</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pageNo" elementType="Argument">
                <stringProp name="Argument.name">pageNo</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">页码</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pageSize" elementType="Argument">
                <stringProp name="Argument.name">pageSize</stringProp>
                <stringProp name="Argument.value">4</stringProp>
                <stringProp name="Argument.desc">每页条数</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="会员价目列表" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;pageSize&quot;: ${pageSize},&#xd;
        &quot;pageNo&quot;: ${pageNo},&#xd;
        &quot;type&quot;: ${type}&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/recharge/vipList.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3076010">data</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="资讯-接口-点赞----ok  未添加验证" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="titleId" elementType="Argument">
                <stringProp name="Argument.name">titleId</stringProp>
                <stringProp name="Argument.value">100001</stringProp>
                <stringProp name="Argument.desc">文章评论的id（评论的评论id/产品的评论id）</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="likeType" elementType="Argument">
                <stringProp name="Argument.name">likeType</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">1-文章评论点赞，2-评论的评论点赞,3-产品的评论</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="资讯-接口-点赞" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;titleId&quot;: ${titleId},&#xd;
        &quot;likeType&quot;: ${likeType}&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/inforeview/addlike.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1983223917">点赞成功！</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="资讯-接口-取消点赞----ok  未添加验证" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="titleId" elementType="Argument">
                <stringProp name="Argument.name">titleId</stringProp>
                <stringProp name="Argument.value">100001</stringProp>
                <stringProp name="Argument.desc">文章评论的id（评论的评论id/产品的评论id）</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="likeType" elementType="Argument">
                <stringProp name="Argument.name">likeType</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">1-文章评论点赞，2-评论的评论点赞,3-产品的评论</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="资讯-接口-取消点赞" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;titleId&quot;: ${titleId},&#xd;
        &quot;likeType&quot;: ${likeType}&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/inforeview/cancelike.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1009777467">取消点赞成功！</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="VIP价目详情----ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="vipType" elementType="Argument">
                <stringProp name="Argument.name">vipType</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">VIP类型 1月卡 2季卡 3年卡 4黑名单 5信用报告</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="VIP价目详情" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;vipType&quot;: ${vipType}&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/recharge/vipDetail.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3076010">data</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="订单-信用报告、黑名单监测保存----ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="username111" elementType="Argument">
                <stringProp name="Argument.name">username111</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.desc">用户姓名</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="idCard111" elementType="Argument">
                <stringProp name="Argument.name">idCard111</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.desc">身份证</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="phone111" elementType="Argument">
                <stringProp name="Argument.name">phone111</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.desc">手机号码</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="privilegeType" elementType="Argument">
                <stringProp name="Argument.name">privilegeType</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.desc">权益类型（0黑名单 1信用报告）	</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="orderId" elementType="Argument">
                <stringProp name="Argument.name">orderId</stringProp>
                <stringProp name="Argument.value">D${__Random(1111111111111,9999999999999,)}</stringProp>
                <stringProp name="Argument.desc">订单ID</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="accountType" elementType="Argument">
                <stringProp name="Argument.name">accountType</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.desc">客户类型（0非会员，1会员）</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="blackBox" elementType="Argument">
                <stringProp name="Argument.name">blackBox</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.desc">设备指纹</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="订单-信用报告、黑名单监测保存" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;userName&quot;: &quot;${username}&quot;,&#xd;
        &quot;idCard&quot;: &quot;${idCard}&quot;,&#xd;
        &quot;phone&quot;: &quot;${phone}&quot;,&#xd;
        &quot;privilegeType&quot;: &quot;${privilegeType}&quot;,&#xd;
        &quot;orderId&quot;: &quot;${orderId}&quot;,&#xd;
        &quot;accountType&quot;: &quot;${accountType}&quot;,&#xd;
        &quot;blackBox&quot;: &quot;${blackBox}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/orderViewReport/orderViewReport.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1043259938">已经没有剩余可用次数，请您花钱购买！</stringProp>
                <stringProp name="246471406">status&quot;:-1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="资讯-接口-取消收藏----ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="titleId" elementType="Argument">
                <stringProp name="Argument.name">titleId</stringProp>
                <stringProp name="Argument.value">100001</stringProp>
                <stringProp name="Argument.desc">文章评论的id（评论的评论id/产品的评论id）</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="资讯-接口-取消收藏" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;titleId&quot;: ${titleId}&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/infoCollect/cancel.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1322857605">取消收藏资讯成功</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="个人中心用户信息----ok" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="个人中心用户信息" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: &quot;&quot;,&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/user/userInfo.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1983223917">点赞成功！</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">responseData</stringProp>
              <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
            <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="个人中心用户信息" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-950083557">status&quot; : 1</stringProp>
                <stringProp name="3076010">data</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="订单-黑名单检测报告查看----json异常" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="订单-黑名单检测报告查看" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: &quot;&quot;,&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/orderViewReport/blacklistReport.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="秒进斗金-会员首页跑马灯----ok" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="秒进斗金-会员首页跑马灯" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: &quot;&quot;,&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/carousel/getCarouselList.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1094873850">请求成功</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="是否会员----ok" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="是否会员" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: &quot;&quot;,&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/user/isVip.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="100481683">isVip</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="是否有权限创建群获取讨论组或聊天室----ok" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="是否有权限创建群或者讨论组或聊天室" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: &quot;&quot;,&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/user/isCreateImGroup.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-498491207">是否有权限创建群聊、讨论组、聊天室</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="我的会员-首页信息----异常抛到前端" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="我的UI有-首页信息" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: &quot;&quot;,&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/vipInfo/vipInfoList.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1983223917">点赞成功！</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="登录用户基本信息-小宝专用（直接调用重新获取）----ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="titleId" elementType="Argument">
                <stringProp name="Argument.name">titleId</stringProp>
                <stringProp name="Argument.value">100001</stringProp>
                <stringProp name="Argument.desc">文章评论的id（评论的评论id/产品的评论id）</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="likeType" elementType="Argument">
                <stringProp name="Argument.name">likeType</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">1-文章评论点赞，2-评论的评论点赞,3-产品的评论</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="登录用户基本信息-小宝专用（直接调用重新获取）" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: &quot;&quot;,&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/user/basicUserInfo.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-266666762">userName</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
                <stringProp name="1299025495">userImgUrl</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="是否有可用次数、是否已有购买历史记录----ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="privilegeType" elementType="Argument">
                <stringProp name="Argument.name">privilegeType</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.desc">权益类型（0黑名单 1信用报告）	</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="是否有可用次数、是否已有购买历史记录" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;privilegeType&quot;: &quot;${privilegeType}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/orderViewReport/isBuyReport.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1451869813">privilegeType</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="IM修改用户昵称----ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="nickName" elementType="Argument">
                <stringProp name="Argument.name">nickName</stringProp>
                <stringProp name="Argument.value">nk${__RandomString(${__Random(3,8,)},0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,)}</stringProp>
                <stringProp name="Argument.desc">im昵称</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="IM修改用户昵称" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;nickName&quot;: &quot;${nickName}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/user/updateUserNickName.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2046203301">更新昵称成功！</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="IM修改用户昵称--检查结果" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="IM修改用户昵称--检查结果" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;nickName&quot;: &quot;${nickName}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/getUserNickName.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1622640641">该昵称已存在！</stringProp>
                  <stringProp name="-2070259290">status&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="资讯-接口-公告列表----ok" enabled="false">
          <stringProp name="TestPlan.comments">需要写提取公共nid</stringProp>
        </GenericController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="pageNo" elementType="Argument">
                <stringProp name="Argument.name">pageNo</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pageSize" elementType="Argument">
                <stringProp name="Argument.name">pageSize</stringProp>
                <stringProp name="Argument.value">10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="资讯-接口-公告列表" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;pageNo&quot;: &quot;${pageNo}&quot;,&#xd;
        &quot;pageSize&quot;: &quot;${pageSize}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/infotitle/notice.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="642386447">公告列表</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="资讯-接口-公共详情----ok" enabled="false">
          <stringProp name="TestPlan.comments">部分返回参数与公共列表不一致</stringProp>
        </GenericController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="nId" elementType="Argument">
                <stringProp name="Argument.name">nId</stringProp>
                <stringProp name="Argument.value">10001625</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">公共主键</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="资讯-接口-公共详情" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;nId&quot;: &quot;${nId}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/infotitle/noticeDetail.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="642835069">公告详情</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="查询用户昵称是否存在----ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="nickName" elementType="Argument">
                <stringProp name="Argument.name">nickName</stringProp>
                <stringProp name="Argument.value">nk${__RandomString(${__Random(3,8,)},0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,)}</stringProp>
                <stringProp name="Argument.desc">im昵称</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询用户昵称是否存在" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;nickName&quot;: &quot;${nickName}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/user/getUserNickName.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1227093758">该昵称可以使用！</stringProp>
                <stringProp name="-1622640641">该昵称已存在！</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">48</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="保存产品已下载（秒进斗金）----ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="productId1" elementType="Argument">
                <stringProp name="Argument.name">productId1</stringProp>
                <stringProp name="Argument.value">${__Random(100000,999999,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productId2" elementType="Argument">
                <stringProp name="Argument.name">productId2</stringProp>
                <stringProp name="Argument.value">${__time(/10000000,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="保存产品已下载" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
      &quot;downloadVos&quot;: [&#xd;
            {&#xd;
                &quot;productId&quot;: &quot;${productId1}&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;productId&quot;: &quot;${productId2}&quot;&#xd;
            }&#xd;
        ]&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/product/saveProductDownLoad.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-685554810">产品下载成功！</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="信用报告获取三个产品----ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="titleId" elementType="Argument">
                <stringProp name="Argument.name">titleId</stringProp>
                <stringProp name="Argument.value">100001</stringProp>
                <stringProp name="Argument.desc">文章评论的id（评论的评论id/产品的评论id）</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="likeType" elementType="Argument">
                <stringProp name="Argument.name">likeType</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">1-文章评论点赞，2-评论的评论点赞,3-产品的评论</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="信用报告获取三个产品" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: &quot;&quot;,&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/product/getUserInfoProduct.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-737333903">个人信用获取三个产品</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="更新方案人数----ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="planName" elementType="Argument">
                <stringProp name="Argument.name">planName</stringProp>
                <stringProp name="Argument.value">100001</stringProp>
                <stringProp name="Argument.desc">方案名称</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="更新方案人数" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;planName&quot;: &quot;${planName}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/product/updateProjectNum.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1713751408">更新方案人数成功</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="返回默认token（生成默认token使用，前端不调用）----ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="titleId" elementType="Argument">
                <stringProp name="Argument.name">titleId</stringProp>
                <stringProp name="Argument.value">100001</stringProp>
                <stringProp name="Argument.desc">文章评论的id（评论的评论id/产品的评论id）</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="likeType" elementType="Argument">
                <stringProp name="Argument.name">likeType</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">1-文章评论点赞，2-评论的评论点赞,3-产品的评论</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="返回默认token（生成默认token使用，前端不调用）" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;11111111111&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/user/getPublicToken.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1983223917">点赞成功！</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="获取字典默认token----ok" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取字典默认token" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: &quot;&quot;,&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/user/getDefultToken.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="182710701">默认token</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
                <stringProp name="956636916">token&quot;:&quot;666392f79cf6407a8475c8f75da36b4c</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="订单-信用报告、黑名单支付前检测----ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="privilegeType" elementType="Argument">
                <stringProp name="Argument.name">privilegeType</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">订单-权益类型</stringProp>
              </elementProp>
              <elementProp name="orderId" elementType="Argument">
                <stringProp name="Argument.name">orderId</stringProp>
                <stringProp name="Argument.value">D${__time(,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="accountType" elementType="Argument">
                <stringProp name="Argument.name">accountType</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">订单-客户类型</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="订单-信用报告、黑名单支付前检测" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;userName&quot;: &quot;${username}&quot;,&#xd;
        &quot;idCard&quot;: &quot;${idCard}&quot;,&#xd;
        &quot;phone&quot;: &quot;${phone}&quot;,&#xd;
        &quot;privilegeType&quot;: &quot;${privilegeType}&quot;,&#xd;
        &quot;orderId&quot;: &quot;${orderId}&quot;,&#xd;
        &quot;accountType&quot;: &quot;${accountType}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/orderViewReport/threeElementsCheck.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1666396479">三要素检测通过！</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="首次免费查看信用报告----ok" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="首次免费查看信用报告" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: &quot;&quot;,&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/user/firstViewReport.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">responseData</stringProp>
              <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
            <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="首次免费查看信用报告" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="删除所有im用户（谨慎使用）-----未调试" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="删除所有im用户（谨慎使用）" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: &quot;&quot;,&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/user/delImUser.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1983223917">点赞成功！</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="秒进斗金所有H5地址----ok" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="秒进斗金所有H5地址" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: &quot;&quot;,&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/app/stepMoneyUrls.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1839557359">baseH5Url</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="更改Im客服添加权限获取加密串----ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="uId" elementType="Argument">
                <stringProp name="Argument.name">uId</stringProp>
                <stringProp name="Argument.value">100001</stringProp>
                <stringProp name="Argument.desc">im用户id</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="更改IM客服添加权限获取加密串" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;uId&quot;: &quot;${uId}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/user/updateImServerAuth.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-147144442">userSig</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="设置默认token到redis----ok" enabled="false">
          <stringProp name="TestPlan.comments">缺少redis验证</stringProp>
        </GenericController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="设置默认token到redis" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: &quot;&quot;,&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/user/addRedisToken.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="修改制定用户的appid----ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="userId" elementType="Argument">
                <stringProp name="Argument.name">userId</stringProp>
                <stringProp name="Argument.value">100001</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="修改制定用户的appid" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;userId&quot;: &quot;${userId}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/user/updateLoginUserAppId.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1983223917">点赞成功！</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="添加默认token用户----ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="userId" elementType="Argument">
                <stringProp name="Argument.name">userId</stringProp>
                <stringProp name="Argument.value">100001</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="添加默认token用户" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/user/saveLoginUser.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="859892052">添加成功</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="保存微信消息----返回404" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="msgSvrId" elementType="Argument">
                <stringProp name="Argument.name">msgSvrId</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">msgSvrId</stringProp>
              </elementProp>
              <elementProp name="type" elementType="Argument">
                <stringProp name="Argument.name">type</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.desc">&quot;1&quot; -&gt; [文字消息|微信自带表情] &quot;3&quot; -&gt; [图片] &quot;34&quot; -&gt; [语音] &quot;47&quot; -&gt; [表情] &quot;50&quot; -&gt; [语音/视频通话] &quot;43&quot; -&gt; [小视频] &quot;49&quot; -&gt; [分享] &quot;48&quot; -&gt; [位置信息] &quot;10000&quot; -&gt; [系统提示信息] else -&gt; [红包转账等]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="isSend" elementType="Argument">
                <stringProp name="Argument.name">isSend</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.desc">类型 1：发送 0：接收 2：系统消息.</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="talker" elementType="Argument">
                <stringProp name="Argument.name">talker</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.desc">会话（某个群获取某个人）</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="content" elementType="Argument">
                <stringProp name="Argument.name">content</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.desc">消息内容</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="imgPath" elementType="Argument">
                <stringProp name="Argument.name">imgPath</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.desc">图片地址</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="createTime" elementType="Argument">
                <stringProp name="Argument.name">createTime</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.desc">发送时间</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="file" elementType="Argument">
                <stringProp name="Argument.name">file</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.desc">聊天文件</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="保存微信消息" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;msgSvrId&quot;: &quot;${msgSvrId}&quot;,&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;isSend&quot;: &quot;${isSend}&quot;,&#xd;
        &quot;talker&quot;: &quot;${talker}&quot;,&#xd;
        &quot;content&quot;: &quot;${content}&quot;,&#xd;
        &quot;imgPath&quot;: &quot;${imgPath}&quot;,&#xd;
        &quot;createTime&quot;: &quot;${createTime}&quot;,&#xd;
        &quot;file&quot;: &quot;${file}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/pay/saveInfo/saveMsgInfo.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1983223917">点赞成功！</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="H5助贷----ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="H5助贷" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;os&quot;: &quot;${os}&quot;,&#xd;
        &quot;channel&quot;: &quot;${channel}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/borrow/save.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="H5获取微信号----ok " enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="userId" elementType="Argument">
                <stringProp name="Argument.name">userId</stringProp>
                <stringProp name="Argument.value">100001</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="H5获取微信号" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: &quot;&quot;,&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/weChat/getAlia.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="750083894">微信号：</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="传微信好友----返回list不能为空" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="jsonArray" elementType="Argument">
                <stringProp name="Argument.name">jsonArray</stringProp>
                <stringProp name="Argument.value">[     {         &quot;wxId&quot;:&quot;wx_idhiodh1321&quot;,         &quot;alial&quot;:&quot;测试&quot;,         &quot;nickName&quot;:&quot;测试文化&quot;,         &quot;userName&quot;:&quot;qwe&quot;     } ]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="传微信好友" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;jsonArray&quot;: ${jsonArray}&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/weChat/getInfo.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1983223917">点赞成功！</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="助贷微信号UV----返回微信号不能为空" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="alial" elementType="Argument">
                <stringProp name="Argument.name">alial</stringProp>
                <stringProp name="Argument.value">wx_idhiodh1321</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">微信号</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="助贷微信号UV" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;alial&quot;: &quot;${alial}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/weChat/saveClicks.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1983223917">点赞成功！</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="助贷切换微信号----返回没有微信号可用" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="alial" elementType="Argument">
                <stringProp name="Argument.name">alial</stringProp>
                <stringProp name="Argument.value">wx_idhiodh1321</stringProp>
                <stringProp name="Argument.desc">微信号</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="助贷切换微信号" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;alial&quot;: &quot;${alial}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/weChat/changeAiala.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1983223917">点赞成功！</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="type" elementType="Argument">
                <stringProp name="Argument.name">type</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="url" elementType="Argument">
                <stringProp name="Argument.name">url</stringProp>
                <stringProp name="Argument.value">www.baidu.com</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productId" elementType="Argument">
                <stringProp name="Argument.name">productId</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="serialNumber" elementType="Argument">
                <stringProp name="Argument.name">serialNumber</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition" elementType="Argument">
                <stringProp name="Argument.name">funPosition</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.desc">首页：0   秒下款/贷款大全：1     信用卡：3    我的专属产品：4         一键获取产品：5    首页热门产品(6)   首页新品产品(7)     新人专享列表 (8)  发现(9)  跑马灯(11)  首页新人专享(12)   分类产品列表(13) 身价测试产品列表(14)，首页猜你想要(15)，排行榜产品列表(16)， 个人中心产品列表(17),挽留产品列表(18),三方案产品详情(19)， 首页新人专享分类(20), 首页闪电贷款分类(21), 首页热门产品分类(22), 首页大额分期分类(23)，三方案产品使用(24),三方案产品1(25),三方案产品2(26),三方案产品3(27)，推送产品详情页_立即拿钱（28),首页最新口子分类_产品详情页(29),    首页闪电贷款分类_产品详情页(30),    首页新人专享分类_产品详情页(31),    首页超低门槛分类_产品详情页(32),    身价测试产品列表_产品详情页(33),    首页猜你想要_产品详情页(34),    个人中心产品列表_产品详情页(35),    产品详情页挽留弹窗_产品详情页(36),黑马_审核资料成功_立即申请(37),黑马_审核资料失败_立即申请(38),黑马_为你推荐_立即申请(39),黑马_贷款排行榜_立即申请(40),黑马_搜索_立即申请(41),黑马_我的贷款_立即申请(42),黑马_失败详情_立即申请(43),贷款联盟_超低利率分类(44),贷款联盟_超低利率分类_产品详情页(45),贷款联盟_新人专享分类(46),贷款联盟_新人专享分类_产品详情页(47),贷款联盟_高通过率分类(48),贷款联盟_高通过率_产品详情页(49),贷款联盟_低门槛贷分类(50),贷款联盟_低门槛贷分类_产品详情页(51),贷款联盟_首页新人专享(52),贷款联盟_首页新人专享_产品详情页(53),贷款联盟_首页新人专享更多推荐(54),贷款联盟_首页新人专享更多推荐_产品详情页(55),贷款联盟_首页新品推荐(56),贷款联盟_首页新品推荐_产品详情页(57),贷款联盟_首页热门推荐(58),贷款联盟_首页热门推荐_产品详情页(59),贷款联盟_贷款大全(60),贷款联盟_贷款大全详情页(61),秒进斗金_最新口子_快速拿钱(62),秒进斗金_闪电贷款_快速拿钱(63),秒进斗金_新人专享_快速拿钱(64),秒进斗金_超低门槛_快速拿钱(65),秒进斗金_首页_快速拿钱(66); </stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="resultStatus" elementType="Argument">
                <stringProp name="Argument.name">resultStatus</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.desc">1：成功 0：失败</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1983223917">点赞成功！</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品是否已下架----ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="productId" elementType="Argument">
                <stringProp name="Argument.name">productId</stringProp>
                <stringProp name="Argument.value">100001</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品是否已下架" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/product/productIsDown.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1180565268">isDown</stringProp>
                <stringProp name="-2070259289">status&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="结果查看" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
          <collectionProp name="UserParameters.names"/>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="1"/>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">false</boolProp>
        </UserParameters>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="公共参数接口测试" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="appkey0" elementType="Argument">
              <stringProp name="Argument.name">appkey0</stringProp>
              <stringProp name="Argument.value">B4B8D7283D1</stringProp>
              <stringProp name="Argument.desc">11位appkey</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appkey1" elementType="Argument">
              <stringProp name="Argument.name">appkey1</stringProp>
              <stringProp name="Argument.value">B4B8D7283D10</stringProp>
              <stringProp name="Argument.desc">12位appkey</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appkey2" elementType="Argument">
              <stringProp name="Argument.name">appkey2</stringProp>
              <stringProp name="Argument.value">B4B8D7283D10B4B8D7283D10B4B8D7283D10</stringProp>
              <stringProp name="Argument.desc">36位appkey</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appkey3" elementType="Argument">
              <stringProp name="Argument.name">appkey3</stringProp>
              <stringProp name="Argument.value">B4B8D7283D10B4B8D7283D10B4B8D7283D10A</stringProp>
              <stringProp name="Argument.desc">37位appkey</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appkey4" elementType="Argument">
              <stringProp name="Argument.name">appkey4</stringProp>
              <stringProp name="Argument.value">DWDSDMKXKSHDWDSW</stringProp>
              <stringProp name="Argument.desc">纯英文appkey</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appkey5" elementType="Argument">
              <stringProp name="Argument.name">appkey5</stringProp>
              <stringProp name="Argument.value">师德师风的水电费</stringProp>
              <stringProp name="Argument.desc">中文字符串appkey</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appkey6" elementType="Argument">
              <stringProp name="Argument.name">appkey6</stringProp>
              <stringProp name="Argument.value">~!@#$%^&amp;*()_+`~]</stringProp>
              <stringProp name="Argument.desc">中文字符串appkey</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appkey7" elementType="Argument">
              <stringProp name="Argument.name">appkey7</stringProp>
              <stringProp name="Argument.value">5562279785578655</stringProp>
              <stringProp name="Argument.desc">int类型appkey</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appkey8" elementType="Argument">
              <stringProp name="Argument.name">appkey8</stringProp>
              <stringProp name="Argument.value">{&quot;aaaaaa&quot;: &quot;${appkey}&quot;}</stringProp>
              <stringProp name="Argument.desc">json格式appkey</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuid0" elementType="Argument">
              <stringProp name="Argument.name">uuid0</stringProp>
              <stringProp name="Argument.value">B4B8D7283D1</stringProp>
              <stringProp name="Argument.desc">11位uuid</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuid1" elementType="Argument">
              <stringProp name="Argument.name">uuid1</stringProp>
              <stringProp name="Argument.value">B4B8D7283D10</stringProp>
              <stringProp name="Argument.desc">12位uuid</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuid2" elementType="Argument">
              <stringProp name="Argument.name">uuid2</stringProp>
              <stringProp name="Argument.value">B4B8D7283D10B4B8D7283D10B4B8D7283D10</stringProp>
              <stringProp name="Argument.desc">36位uuid</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuid3" elementType="Argument">
              <stringProp name="Argument.name">uuid3</stringProp>
              <stringProp name="Argument.value">B4B8D7283D10B4B8D7283D10B4B8D7283D10A</stringProp>
              <stringProp name="Argument.desc">37位uuid</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuid4" elementType="Argument">
              <stringProp name="Argument.name">uuid4</stringProp>
              <stringProp name="Argument.value">DWDSDMKXKSHDWDSW</stringProp>
              <stringProp name="Argument.desc">纯英文uuid</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuid5" elementType="Argument">
              <stringProp name="Argument.name">uuid5</stringProp>
              <stringProp name="Argument.value">师德师风的水电费</stringProp>
              <stringProp name="Argument.desc">中文字符串uuid</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuid6" elementType="Argument">
              <stringProp name="Argument.name">uuid6</stringProp>
              <stringProp name="Argument.value">~!@#$%^&amp;*()_+`~]</stringProp>
              <stringProp name="Argument.desc">中文字符串uuid</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuid7" elementType="Argument">
              <stringProp name="Argument.name">uuid7</stringProp>
              <stringProp name="Argument.value">5562279785578655</stringProp>
              <stringProp name="Argument.desc">int类型uuid</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuid8" elementType="Argument">
              <stringProp name="Argument.name">uuid8</stringProp>
              <stringProp name="Argument.value">{&quot;aaaaaa&quot;: &quot;${uuid}&quot;}</stringProp>
              <stringProp name="Argument.desc">json格式uuid</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="version0" elementType="Argument">
              <stringProp name="Argument.name">version0</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.desc">0位version</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="version1" elementType="Argument">
              <stringProp name="Argument.name">version1</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.desc">1位version</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="version2" elementType="Argument">
              <stringProp name="Argument.name">version2</stringProp>
              <stringProp name="Argument.value">11</stringProp>
              <stringProp name="Argument.desc">2位version</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="version3" elementType="Argument">
              <stringProp name="Argument.name">version3</stringProp>
              <stringProp name="Argument.value">111</stringProp>
              <stringProp name="Argument.desc">3位version</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="version4" elementType="Argument">
              <stringProp name="Argument.name">version4</stringProp>
              <stringProp name="Argument.value">s</stringProp>
              <stringProp name="Argument.desc">纯英文version</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="version5" elementType="Argument">
              <stringProp name="Argument.name">version5</stringProp>
              <stringProp name="Argument.value">师</stringProp>
              <stringProp name="Argument.desc">中文字符串version</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="version6" elementType="Argument">
              <stringProp name="Argument.name">version6</stringProp>
              <stringProp name="Argument.value">~!</stringProp>
              <stringProp name="Argument.desc">特殊字符串version</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="version7" elementType="Argument">
              <stringProp name="Argument.name">version7</stringProp>
              <stringProp name="Argument.value">6</stringProp>
              <stringProp name="Argument.desc">int类型version</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="version8" elementType="Argument">
              <stringProp name="Argument.name">version8</stringProp>
              <stringProp name="Argument.value">{&quot;aaaaaa&quot;: &quot;${version}&quot;}</stringProp>
              <stringProp name="Argument.desc">json格式version</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="os0" elementType="Argument">
              <stringProp name="Argument.name">os0</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.desc">0位os</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="os1" elementType="Argument">
              <stringProp name="Argument.name">os1</stringProp>
              <stringProp name="Argument.value">a</stringProp>
              <stringProp name="Argument.desc">1位os</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="os2" elementType="Argument">
              <stringProp name="Argument.name">os2</stringProp>
              <stringProp name="Argument.value">asdfsdfsad</stringProp>
              <stringProp name="Argument.desc">10位os</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="os3" elementType="Argument">
              <stringProp name="Argument.name">os3</stringProp>
              <stringProp name="Argument.value">asdfsdfsade</stringProp>
              <stringProp name="Argument.desc">11位os</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="os4" elementType="Argument">
              <stringProp name="Argument.name">os4</stringProp>
              <stringProp name="Argument.value">Android</stringProp>
              <stringProp name="Argument.desc">纯英文os</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="os5" elementType="Argument">
              <stringProp name="Argument.name">os5</stringProp>
              <stringProp name="Argument.value">师水电费</stringProp>
              <stringProp name="Argument.desc">中文字符串os</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="os6" elementType="Argument">
              <stringProp name="Argument.name">os6</stringProp>
              <stringProp name="Argument.value">~!@#￥%</stringProp>
              <stringProp name="Argument.desc">特殊字符串os</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="os7" elementType="Argument">
              <stringProp name="Argument.name">os7</stringProp>
              <stringProp name="Argument.value">6645421</stringProp>
              <stringProp name="Argument.desc">int类型os</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="os8" elementType="Argument">
              <stringProp name="Argument.name">os8</stringProp>
              <stringProp name="Argument.value">{&quot;aaaaaa&quot;: &quot;${os}&quot;}</stringProp>
              <stringProp name="Argument.desc">json格式os</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="channel0" elementType="Argument">
              <stringProp name="Argument.name">channel0</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.desc">0位channel</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="channel1" elementType="Argument">
              <stringProp name="Argument.name">channel1</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.desc">1位channel</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="channel2" elementType="Argument">
              <stringProp name="Argument.name">channel2</stringProp>
              <stringProp name="Argument.value">0123456789</stringProp>
              <stringProp name="Argument.desc">10位channel</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="channel3" elementType="Argument">
              <stringProp name="Argument.name">channel3</stringProp>
              <stringProp name="Argument.value">01234567890</stringProp>
              <stringProp name="Argument.desc">11位channel</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="channel4" elementType="Argument">
              <stringProp name="Argument.name">channel4</stringProp>
              <stringProp name="Argument.value">Android</stringProp>
              <stringProp name="Argument.desc">纯英文channel</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="channel5" elementType="Argument">
              <stringProp name="Argument.name">channel5</stringProp>
              <stringProp name="Argument.value">师水电费</stringProp>
              <stringProp name="Argument.desc">中文字符串channel</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="channel6" elementType="Argument">
              <stringProp name="Argument.name">channel6</stringProp>
              <stringProp name="Argument.value">~!@#￥%</stringProp>
              <stringProp name="Argument.desc">特殊字符串channel</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="channel7" elementType="Argument">
              <stringProp name="Argument.name">channel7</stringProp>
              <stringProp name="Argument.value">6645421</stringProp>
              <stringProp name="Argument.desc">int类型channel</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="channel8" elementType="Argument">
              <stringProp name="Argument.name">channel8</stringProp>
              <stringProp name="Argument.value">{&quot;aaaaaa&quot;: &quot;${channel}&quot;}</stringProp>
              <stringProp name="Argument.desc">json格式channel</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="isLogin0" elementType="Argument">
              <stringProp name="Argument.name">isLogin0</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.desc">0位isLogin</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="isLogin1" elementType="Argument">
              <stringProp name="Argument.name">isLogin1</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.desc">1位isLogin</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="isLogin2" elementType="Argument">
              <stringProp name="Argument.name">isLogin2</stringProp>
              <stringProp name="Argument.value">0123456789</stringProp>
              <stringProp name="Argument.desc">10位isLogin</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="isLogin3" elementType="Argument">
              <stringProp name="Argument.name">isLogin3</stringProp>
              <stringProp name="Argument.value">01234567890</stringProp>
              <stringProp name="Argument.desc">11位isLogin</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="isLogin4" elementType="Argument">
              <stringProp name="Argument.name">isLogin4</stringProp>
              <stringProp name="Argument.value">Android</stringProp>
              <stringProp name="Argument.desc">纯英文isLogin</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="isLogin5" elementType="Argument">
              <stringProp name="Argument.name">isLogin5</stringProp>
              <stringProp name="Argument.value">师水电费</stringProp>
              <stringProp name="Argument.desc">中文字符串isLogin</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="isLogin6" elementType="Argument">
              <stringProp name="Argument.name">isLogin6</stringProp>
              <stringProp name="Argument.value">~!@#￥%</stringProp>
              <stringProp name="Argument.desc">特殊字符串isLogin</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="isLogin7" elementType="Argument">
              <stringProp name="Argument.name">isLogin7</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.desc">int类型isLogin</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="isLogin8" elementType="Argument">
              <stringProp name="Argument.name">isLogin8</stringProp>
              <stringProp name="Argument.value">{&quot;aaaaaa&quot;: &quot;${isLogin}&quot;}</stringProp>
              <stringProp name="Argument.desc">json格式isLogin</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="准备测试数据" enabled="false">
          <stringProp name="dataSource">flowsum_jdbc</stringProp>
          <stringProp name="query">UPDATE t_basic_app t set t.`STATUS` = &apos;1&apos; WHERE t.N_ID = 10000165;
UPDATE t_basic_app t set t.`STATUS` = &apos;1&apos; WHERE t.N_ID = 10000166;
UPDATE t_basic_app t set t.`STATUS` = &apos;1&apos; WHERE t.N_ID = 10000167;
UPDATE t_basic_app t set t.`STATUS` = &apos;1&apos; WHERE t.N_ID = 10000168;
UPDATE t_basic_app t set t.`STATUS` = &apos;1&apos; WHERE t.N_ID = 10000169;
UPDATE t_basic_app t set t.`STATUS` = &apos;1&apos; WHERE t.N_ID = 10000170;
UPDATE t_basic_app t set t.`STATUS` = &apos;1&apos; WHERE t.N_ID = 10000171;
UPDATE t_basic_app t set t.`STATUS` = &apos;1&apos; WHERE t.N_ID = 10000172;
UPDATE t_basic_app t set t.`STATUS` = &apos;1&apos; WHERE t.N_ID = 10000173;
</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Callable Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
        </JDBCSampler>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="发送验证接口" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="发送验证码--正常" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="发送验证码" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="发送验证码" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询发送短信验证码" enabled="true">
              <stringProp name="dataSource">db_sms_test</stringProp>
              <stringProp name="query">select CONTENT from t_sms_record_detail where SIGN = &apos;安卓测试&apos; AND PHONE = &apos;${phone0}&apos; GROUP BY CREATE_TIME DESC LIMIT 1</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="处理短信验证码" enabled="true">
              <stringProp name="BeanShellSampler.query">


public static String testAccount() throws Exception {

	String ss = &quot;${aaa_1}&quot;;
	//获取验证码
	String resp = ss.substring(4,10);
     //System.out.println(ss.substring(5,10));
	 return resp;
}
	//设置短信验证码到verCode参数里面
  vars.put(&quot;verCode&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--多余参数-------------多余参数未判断，请求正常" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--多余参数" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;,&#xd;
    &quot;test&quot;: &quot;aaaa&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--多余参数" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--appKey为空" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--appKey为空" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="942080398">appKey不能为空</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--appKey为空格" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--appKey为空格" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot; &quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="942080398">appKey不能为空</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--appKey为NULL----接口文档正则=[a-z0-9A-Z-_]{12,36}，实际可以通过" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--appKey为NULL" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;NULL&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--appKey为NULL" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--appKey对应app不存在" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="发送验证码--appKey对应app不存在" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}aa&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1391219748">app不存在</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--appKey长度为11位----接口文档为12--36位，实际测试结果可以正常发送" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--appKey长度为11位" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey0}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1391219748">app不存在</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--appKey长度为11位" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--appKey长度为12位" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--appKey长度为12位" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey1}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1391219748">app不存在</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--appKey长度为12位" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--appKey长度为36位" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--appKey长度为36位" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey2}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1391219748">app不存在</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--appKey长度为36位" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--appKey长度为37位----接口文档为12--36位，实际测试结果可以正常发送" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--appKey长度为37位" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey3}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1391219748">app不存在</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--appKey长度为37位" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--appKey为纯英文" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--appKey为纯英文" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey4}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1391219748">app不存在</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--appKey为纯英文" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--appKey为中文字符串----接口文档为正则=[a-z0-9A-Z-_]{12,36}，实际可以通过" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--appKey为中文字符串" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey5}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1391219748">app不存在</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--appKey为中文字符串" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--appKey为特殊字符----接口文档为正则=[a-z0-9A-Z-_]{12,36}，实际可以通过" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--appKey为特殊字符" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey6}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1391219748">app不存在</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--appKey为特殊字符" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--appKey类型为int----接口文档为string类型，实际可以通过" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--appKey类型为int" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: ${appkey7},&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1391219748">app不存在</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--appKey类型为int" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--appKey为json" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--appKey为json" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: ${appkey8},&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="246471406">status&quot;:-1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--appKey参数名错误" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--appKey参数名错误" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey11&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="942080398">appKey不能为空</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--appKey参数缺失" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--appKey参数缺失" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
//    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="942080398">appKey不能为空</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--uuid为空" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--uuid为空" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2059820469">uuid不能为空</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--uuid为空格" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--uuid为空格" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot; &quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2059820469">uuid不能为空</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--uuid为NULL----接口文档正则=[a-z0-9A-Z-_]{12,36}，实际可以通过" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--uuid为NULL" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;NULL&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--uuid为NULL" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--uuid不满足正则----接口文档正则=[a-z0-9A-Z-_]{12,36}，实际可以通过" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--uuid不满足正则" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}!&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1391219748">app不存在</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--uuid不满足正则" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--uuid长度为11位----接口文档为12--36位，实际测试结果可以正常发送" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--uuid长度为11位" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid0}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1391219748">app不存在</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--uuid长度为11位" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--uuid长度为12位" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--uuid长度为12位" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid1}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1391219748">app不存在</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--uuid长度为12位" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--uuid长度为36位" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--uuid长度为36位" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid2}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1391219748">app不存在</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--uuid长度为36位" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--uuid长度为37位----接口文档为12--36位，实际测试结果可以正常发送" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--uuid长度为37位" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid3}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1391219748">app不存在</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--uuid长度为37位" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--uuid为纯英文" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--uuid为纯英文" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid4}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1391219748">app不存在</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--uuid为纯英文" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--uuid为中文字符串----接口文档为正则=[a-z0-9A-Z-_]{12,36}，实际可以通过" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--uuid为中文字符串" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid5}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1391219748">app不存在</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--uuid为中文字符串" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--uuid为特殊字符----接口文档为正则=[a-z0-9A-Z-_]{12,36}，实际可以通过" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--uuid为特殊字符" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid6}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1391219748">app不存在</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--uuid为特殊字符" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--uuid类型为int----接口文档为string类型，实际可以通过" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--uuid类型为int" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: ${uuid7},&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1391219748">app不存在</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--uuid类型为int" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--uuid为json----异常抛到前端" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--uuid为json" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: ${uuid8},&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-949331652">status&quot;:&quot;-1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--uuid参数名错误" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--uuid参数名错误" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid11&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2059820469">uuid不能为空</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--uuid参数缺失" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--uuid参数缺失" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
//    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2059820469">uuid不能为空</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--version为空" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--version为空" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1314125032">version不能为空</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--version为空格" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--version为空格" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot; &quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1314125032">version不能为空</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--version为NULL----接口文档正则=[0-9]{1,2}，实际可以通过" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--version为NULL" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;NULL&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--version为NULL" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--version不满足正则----接口文档正则=[0-9]{1,2}，实际可以通过" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--version不满足正则" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}!!&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1391219748">app不存在</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--version不满足正则" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--version长度为0位" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--version长度为0位" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version0}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1314125032">version不能为空</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--version长度为1位" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--version长度为1位" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version1}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--version长度为1位" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--version长度为2位" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--version长度为2位" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version2}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1391219748">app不存在</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--version长度为2位" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--version长度为3位----接口文档正则=[0-9]{1,2}，实际可以通过" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--version长度为3位" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version3}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--version长度为3位" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--version为纯英文----接口文档正则=[0-9]{1,2}，实际可以通过" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--version为纯英文" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version4}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1391219748">app不存在</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--version为纯英文" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--version为中文字符串----接口文档正则=[0-9]{1,2}，实际可以通过" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--version为中文字符串" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version5}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1391219748">app不存在</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--version为中文字符串" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--version为特殊字符----接口文档正则=[0-9]{1,2}，实际可以通过" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--version为特殊字符" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version6}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1391219748">app不存在</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--version为特殊字符" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--version类型为int----接口文档为string类型，实际可以通过" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--version类型为int" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: ${version7},&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1391219748">app不存在</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--version类型为int" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--version为json----异常抛到前端" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--version为json" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: ${version8},&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-949331652">status&quot;:&quot;-1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--version参数名错误" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--version参数名错误" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version11&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1314125032">version不能为空</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--version参数缺失" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--version参数缺失" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
//    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1314125032">version不能为空</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--os为空" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--os为空" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-383287308">os不能为空</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--os为空格" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--os为空格" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot; &quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-383287308">os不能为空</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--os为NULL----接口文档为平台 Ios/Android，实际可以通过" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--os为NULL" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;NULL&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--os为NULL" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--os参数错误----接口文档为平台 Ios/Android，实际可以通过" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--os参数错误" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}!！&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1391219748">app不存在</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--os参数错误" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--os长度为0位" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--os长度为0位" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os0}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-383287308">os不能为空</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--os长度为1位----接口文档描述为：平台 Ios/Android，实际可以通过" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--os长度为1位" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os1}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--os长度为1位" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--os长度为10位----接口文档未定义长度，测试边界为1--10位----接口文档描述为：平台 Ios/Android，实际可以通过" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--os长度为10位" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os2}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1391219748">app不存在</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--os长度为10位" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--os长度为11位----接口文档未定义长度，测试边界为1--10位----接口文档描述为：平台 Ios/Android，实际可以通过" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--os长度为11位" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os3}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1391219748">app不存在</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--os长度为11位" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--os为纯英文" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--os为纯英文" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os4}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1391219748">app不存在</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--os为纯英文" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--os为中文字符串----接口文档描述为：平台 Ios/Android，实际可以通过" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--os为中文字符串" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os5}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1391219748">app不存在</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--os为中文字符串" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--os为特殊字符----接口文档描述为：平台 Ios/Android，实际可以通过" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--os为特殊字符" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os6}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1391219748">app不存在</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--os为特殊字符" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--os类型为int----接口文档描述为：平台 Ios/Android，实际可以通过" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--os类型为int" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: ${os7},&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1391219748">app不存在</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--os类型为int" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--os为json----异常抛到前端" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--os为json" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: ${os8},&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-949331652">status&quot;:&quot;-1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--os参数名错误" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--os参数名错误" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os11&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-383287308">os不能为空</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--os参数缺失" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--os参数缺失" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
//    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-383287308">os不能为空</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--channel为空" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--channel为空" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: &quot;&quot;,&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="899172243">channel不能为空</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--channel为空格" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--channel为空格" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: &quot; &quot;,&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="899172243">channel不能为空</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--channel为NULL----异常抛到前端" enabled="false">
            <stringProp name="TestPlan.comments">{&quot;msg&quot;:&quot;JSON parse error: Cannot deserialize value of type `java.lang.Long` from String \&quot;NULL\&quot;: not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String \&quot;NULL\&quot;: not a valid Long value\n at [Source: (PushbackInputStream); line: 1, column: 294] (through reference chain: com.houhan.hh.flowsum.module.service.api.command.CommonParamCommand[\&quot;channel\&quot;])&quot;,
&quot;data&quot;:{&quot;path&quot;:&quot;/api/user/sendVerCode.action&quot;,&quot;type&quot;:&quot;HttpMessageNotReadableException&quot;,&quot;class&quot;:&quot;org.springframework.http.converter.HttpMessageNotReadableException&quot;},&quot;status&quot;:&quot;-1&quot;}</stringProp>
          </GenericController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--channel为NULL" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: &quot;NULL&quot;,&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="false">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--channel为NULL" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--channel参数错误----异常抛到前端" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--channel参数错误" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: &quot;${channel}!@&quot;,&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1391219748">app不存在</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="false">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--channel参数错误" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--channel长度为0位" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--channel长度为0位" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: &quot;${channel0}&quot;,&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="899172243">channel不能为空</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--channel长度为1位" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--channel长度为1位" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel1},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--channel长度为1位" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--channel长度为10位----接口文档未定义长度，测试边界为1---10位" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--channel长度为10位" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel2},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1391219748">app不存在</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--channel长度为10位" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--channel长度为11位" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--channel长度为11位" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel3},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1391219748">app不存在</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--channel长度为11位" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--channel为纯英文----异常抛到前端" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--channel为纯英文" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: &quot;${channel4}&quot;,&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1391219748">app不存在</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="false">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--channel为纯英文" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--channel为中文字符串----异常抛到前端" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--channel为中文字符串" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: &quot;${channel5}&quot;,&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1391219748">app不存在</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="false">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--channel为中文字符串" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--channel为特殊字符----异常抛到前端" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--channel为特殊字符" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: &quot;${channel6}&quot;,&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1391219748">app不存在</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="false">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--channel为特殊字符" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--channel类型为int" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--channel类型为int" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel7},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1391219748">app不存在</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--channel类型为int" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--channel为json----异常抛到前端" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--channel为json" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel8},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-949331652">status&quot;:&quot;-1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--channel参数名错误" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--channel参数名错误" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel11&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="899172243">channel不能为空</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--channel参数缺失" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--channel参数缺失" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
//    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="899172243">channel不能为空</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--isLogin为空----接口文档必填项，实际可以通过" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--isLogin为空" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--isLogin为空" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--isLogin为空格----接口文档为必填，实际可以通过" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--isLogin为空格" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot; &quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--isLogin为空格" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--isLogin为NULL----异常抛到前端" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--isLogin为NULL" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;NULL&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="false">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--isLogin为NULL" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--isLogin参数错误----异常抛到前端" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--isLogin参数错误" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: &quot;${channel}!@&quot;,&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1391219748">app不存在</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="false">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--channel参数错误" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--isLogin长度为0位----接口文档为必填，实际可以通过" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--isLogin长度为0位" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;${isLogin0}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="899172243">channel不能为空</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--isLogin长度为1位" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--isLogin长度为1位" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: ${isLogin1}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--isLogin长度为1位" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--isLogin长度为10位----接口文档未定义长度，测试边界为1---10位" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--isLogin长度为10位" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;${isLogin2}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1391219748">app不存在</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--isLogin长度为10位" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--isLogin长度为11位" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--isLogin长度为11位" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;${isLogin3}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1391219748">app不存在</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--isLogin长度为11位" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--isLogin为纯英文----异常抛到前端" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--isLogin为纯英文" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;${isLogin4}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1391219748">app不存在</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="false">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--isLogin为纯英文" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--isLogin为中文字符串----异常抛到前端" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--isLogin为中文字符串" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;${isLogin5}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1391219748">app不存在</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="false">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--channel为中文字符串" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--isLogin为特殊字符----异常抛到前端" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--isLogin为特殊字符" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;${isLogin6}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1391219748">app不存在</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="false">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--channel为特殊字符" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--isLogin类型为int" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--isLogin类型为int" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: ${isLogin7}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1391219748">app不存在</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--isLogin类型为int" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--isLogin为json----异常抛到前端" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--isLogin为json" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: ${isLogin8}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-949331652">status&quot;:&quot;-1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--isLogin参数名错误----接口文档必填项，实际可以通过" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--isLogin参数名错误" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin!!!&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="84170991">isLogin不能为空</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--isLogin参数名错误" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共参数--发送验证码--isLogin参数缺失----接口文档必填项，实际可以通过" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="公共参数--发送验证码--isLogin参数缺失" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
//    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="84170991">isLogin不能为空</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="公共参数--发送验证码--isLogin参数缺失" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="清理测试数据" enabled="false">
          <stringProp name="dataSource">flowsum_jdbc</stringProp>
          <stringProp name="query">UPDATE t_basic_app t set t.`STATUS` = &apos;-1&apos; WHERE t.N_ID = 10000165;
UPDATE t_basic_app t set t.`STATUS` = &apos;-1&apos; WHERE t.N_ID = 10000166;
UPDATE t_basic_app t set t.`STATUS` = &apos;-1&apos; WHERE t.N_ID = 10000167;
UPDATE t_basic_app t set t.`STATUS` = &apos;-1&apos; WHERE t.N_ID = 10000168;
UPDATE t_basic_app t set t.`STATUS` = &apos;-1&apos; WHERE t.N_ID = 10000169;
UPDATE t_basic_app t set t.`STATUS` = &apos;-1&apos; WHERE t.N_ID = 10000170;
UPDATE t_basic_app t set t.`STATUS` = &apos;-1&apos; WHERE t.N_ID = 10000171;
UPDATE t_basic_app t set t.`STATUS` = &apos;-1&apos; WHERE t.N_ID = 10000172;
UPDATE t_basic_app t set t.`STATUS` = &apos;-1&apos; WHERE t.N_ID = 10000173;
</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Callable Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
        </JDBCSampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="发送验证码接口测试-----ok" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">正常手机号码未按照手机号码段做穷举测试（短信会正常发送，节省成本考虑）</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="phone1" elementType="Argument">
              <stringProp name="Argument.name">phone1</stringProp>
              <stringProp name="Argument.value">130${__Random(11111111,99999999,)}</stringProp>
              <stringProp name="Argument.desc">手机号${__time(/100,)}固定130开头手机号</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="发送验证码--ok" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="发送验证码--正常" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="发送验证码" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="发送验证码" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询发送短信验证码" enabled="true">
              <stringProp name="dataSource">db_sms_test</stringProp>
              <stringProp name="query">select CONTENT from t_sms_record_detail where SIGN = &apos;安卓测试&apos; AND PHONE = &apos;${phone0}&apos; GROUP BY CREATE_TIME DESC LIMIT 1</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="处理短信验证码" enabled="true">
              <stringProp name="BeanShellSampler.query">


public static String testAccount() throws Exception {

	String ss = &quot;${aaa_1}&quot;;
	//获取验证码
	String resp = ss.substring(4,10);
     //System.out.println(ss.substring(5,10));
	 return resp;
}
	//设置短信验证码到verCode参数里面
  vars.put(&quot;verCode&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="发送验证码--手机号码为空" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="发送验证码--手机号码为空" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-403973506">phone不能为空</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="发送验证码--手机号码为空格" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="发送验证码--手机号码为空格" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot; &quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-403973506">phone不能为空</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="发送验证码--手机号码为NULL" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="发送验证码--手机号码为NULL" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;NULL&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="发送验证码--手机号码为NULL" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="612180730">status&quot; : -1</stringProp>
                  <stringProp name="-1784779461">msg&quot; : &quot;请输入正确的手机号码！</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="发送验证码--手机号码格式错误" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="发送验证码--手机号码格式错误" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;5${__time(/1000,)}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="发送验证码--手机号码格式错误" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="612180730">status&quot; : -1</stringProp>
                  <stringProp name="-1784779461">msg&quot; : &quot;请输入正确的手机号码！</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="发送验证码--手机号码长度为10位" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="发送验证码--手机号码长度为10位" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${__time(/1000,)}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="发送验证码--手机号码长度为10位" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="612180730">status&quot; : -1</stringProp>
                  <stringProp name="-1784779461">msg&quot; : &quot;请输入正确的手机号码！</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="发送验证码--手机号码长度为12位" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="发送验证码--手机号码长度为12位" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;1${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="发送验证码--手机号码长度为12位" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="612180730">status&quot; : -1</stringProp>
                  <stringProp name="-1784779461">msg&quot; : &quot;请输入正确的手机号码！</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="发送验证码--手机号码为英文" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="发送验证码--手机号码长度为英文" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;asdasdassev&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="发送验证码--手机号码长度为英文" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="612180730">status&quot; : -1</stringProp>
                  <stringProp name="-1784779461">msg&quot; : &quot;请输入正确的手机号码！</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="发送验证码--手机号码为中文字符串" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="发送验证码--手机号码长度为中文字符串" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;水电费水电费我人人水电&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="发送验证码--手机号码长度为中文字符串" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="612180730">status&quot; : -1</stringProp>
                  <stringProp name="-1784779461">msg&quot; : &quot;请输入正确的手机号码！</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="发送验证码--手机号码为特殊字符" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="发送验证码--手机号码长度为特殊字符" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;~!@#$%^&amp;*()&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="发送验证码--手机号码长度为特殊字符" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="612180730">status&quot; : -1</stringProp>
                  <stringProp name="-1784779461">msg&quot; : &quot;请输入正确的手机号码！</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="发送验证码--手机号码类型为int-------------接口文档为string，实际结果可以成功发送验证码" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="发送验证码--手机号码类型为int" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: ${phone0}&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="发送验证码--手机号码类型为int" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询发送短信验证码" enabled="true">
              <stringProp name="dataSource">db_sms_test</stringProp>
              <stringProp name="query">select CONTENT from t_sms_record_detail where SIGN = &apos;安卓测试&apos; AND PHONE = &apos;${phone0}&apos; GROUP BY CREATE_TIME DESC LIMIT 1</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="处理短信验证码" enabled="true">
              <stringProp name="BeanShellSampler.query">


public static String testAccount() throws Exception {

	String ss = &quot;${aaa_1}&quot;;
	//获取验证码
	String resp = ss.substring(4,10);
     //System.out.println(ss.substring(5,10));
	 return resp;
}
	//设置短信验证码到verCode参数里面
  vars.put(&quot;verCode&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="发送验证码--手机号码类型为json-------------异常抛到前端" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="发送验证码--手机号码类型为json" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: {&#xd;
            &quot;aaaaaa&quot;: &quot;${phone0}&quot;&#xd;
        }&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-949331652">status&quot;:&quot;-1</stringProp>
                  <stringProp name="731341603">JSON parse error</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="发送验证码--手机号码参数名错误" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="发送验证码--手机号码参数名错误" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone1&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-403973506">phone不能为空</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="发送验证码--手机号码参数缺失" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="发送验证码--手机号码参数缺失" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;aaaa&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-403973506">phone不能为空</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="发送验证码--多余参数-------------多余参数未判断，请求正常" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="发送验证码--多余参数" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone0}&quot;,&#xd;
        &quot;aaaaa&quot;: &quot;${phone0}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseData</stringProp>
                <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="发送验证码--多余参数" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询发送短信验证码" enabled="true">
              <stringProp name="dataSource">db_sms_test</stringProp>
              <stringProp name="query">select CONTENT from t_sms_record_detail where SIGN = &apos;安卓测试&apos; AND PHONE = &apos;${phone0}&apos; GROUP BY CREATE_TIME DESC LIMIT 1</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="处理短信验证码" enabled="true">
              <stringProp name="BeanShellSampler.query">


public static String testAccount() throws Exception {

	String ss = &quot;${aaa_1}&quot;;
	//获取验证码
	String resp = ss.substring(4,10);
     //System.out.println(ss.substring(5,10));
	 return resp;
}
	//设置短信验证码到verCode参数里面
  vars.put(&quot;verCode&quot;,testAccount());</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="结果查看" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="登录接口测试" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="phone1" elementType="Argument">
              <stringProp name="Argument.name">phone1</stringProp>
              <stringProp name="Argument.value">130${__Random(11111111,99999999,)}</stringProp>
              <stringProp name="Argument.desc">手机号${__time(/100,)}固定130开头手机号</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="verCode0" elementType="Argument">
              <stringProp name="Argument.name">verCode0</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="type" elementType="Argument">
              <stringProp name="Argument.name">type</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.desc">0：一键登陆 1：普通登陆</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="onekey" elementType="Argument">
              <stringProp name="Argument.name">onekey</stringProp>
              <stringProp name="Argument.value">111</stringProp>
              <stringProp name="Argument.desc">一键登录参数：1.appId、当前APP对应的appid,SDK传入; 2.accessToken、运营商token,SDK传入; 3.telecom、运营商，SDK传入; 4.timestamp、UNIX时间戳，毫秒级，SDK传入; 5.randoms</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="shanyankey" elementType="Argument">
              <stringProp name="Argument.name">shanyankey</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.desc">解密key</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="loginType" elementType="Argument">
              <stringProp name="Argument.name">loginType</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.desc">1：登陆留资 0：直接登陆</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userName" elementType="Argument">
              <stringProp name="Argument.name">userName</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.desc">用户名，留资用</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userIdCard" elementType="Argument">
              <stringProp name="Argument.name">userIdCard</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.desc">身份证，留资用</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="发送验证码--ok" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="发送验证码" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone1}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">responseData</stringProp>
              <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
            <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="发送验证码" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询发送短信验证码" enabled="true">
            <stringProp name="dataSource">db_sms_test</stringProp>
            <stringProp name="query">select CONTENT from t_sms_record_detail where SIGN = &apos;安卓测试&apos; AND PHONE = &apos;${phone1}&apos; GROUP BY CREATE_TIME DESC LIMIT 1</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="variableNames">aaa</stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
          </JDBCSampler>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="处理短信验证码" enabled="true">
            <stringProp name="BeanShellSampler.query">


public static String testAccount() throws Exception {

	String ss = &quot;${aaa_1}&quot;;
	//获取验证码
	String resp = ss.substring(4,10);
     //System.out.println(ss.substring(5,10));
	 return resp;
}
	//设置短信验证码到verCode参数里面
  vars.put(&quot;verCode&quot;,testAccount());</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="登录--ok" enabled="true"/>
        <hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="请求明文加密" enabled="false">
            <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        // params组装接口文档中所定义的接口参数
	   String params = 	&quot;{&apos;appKey&apos;: &apos;${appkey}&apos;,&apos;uuid&apos;: &apos;${uuid}&apos;,&apos;version&apos;: &apos;${version}&apos;,&apos;os&apos;: &apos;${os}&apos;,&apos;channel&apos;: ${channel},&apos;token&apos;: &apos;&apos;,&apos;data&apos;: {&apos;phone&apos;: &apos;${phone1}&apos;,&apos;verCode&apos;: &apos;${verCode}&apos;,&apos;type&apos;: &apos;${type}&apos;,&apos;onekey&apos;: &apos;${onekey}&apos;,&apos;shanyankey&apos;: &apos;${shanyankey}&apos;,&apos;loginType&apos;: &apos;${loginType}&apos;,&apos;userName&apos;: &apos;${userName}&apos;,&apos;userIdCard&apos;: &apos;${userIdCard}&apos;},&apos;latitude&apos;: &apos;&apos;,&apos;longitude&apos;: &apos;&apos;,&apos;isLogin&apos;: &apos;&apos;}&quot;;
        
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.ENCRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jiaMi = encr.encryptOrDecrypt(aesKey,privateKey,params,type);

        return jiaMi;
}

  vars.put(&quot;req&quot;,testAccount());</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="登录" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone1}&quot;,&#xd;
        &quot;verCode&quot;: &quot;${verCode}&quot;,&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;onekey&quot;: &quot;${onekey}&quot;,&#xd;
        &quot;shanyankey&quot;: &quot;${shanyankey}&quot;,&#xd;
        &quot;loginType&quot;: &quot;${loginType}&quot;,&#xd;
        &quot;userName&quot;: &quot;${userName}&quot;,&#xd;
        &quot;userIdCard&quot;: &quot;${userIdCard}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/user/login.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">responseData</stringProp>
              <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
            <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="登录" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                <stringProp name="110541305">token</stringProp>
                <stringProp name="1802657171">phone&quot; : &quot;${phone1}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;

String lgreq=(String) vars.get(&quot;res&quot;);
JSONObject jsonObj=JSONObject.parseObject(lgreq);
//System.out.println(jsonObj.get(&quot;data&quot;));
JSONObject jsonObj2=(JSONObject) jsonObj.get(&quot;data&quot;);
 //System.out.println(jsonObj2.get(&quot;active_code_serial_no&quot;));
String s=(String) jsonObj2.get(&quot;token&quot;);
String s1=(String) jsonObj2.get(&quot;userId&quot;);
vars.put(&quot;token&quot;,s);
vars.put(&quot;userId&quot;,s);
//log.info(active_code_serial_no);
//System.out.println(s);
 		
</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="秒进斗金pvuv接口----灰度环境" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="appkey" elementType="Argument">
              <stringProp name="Argument.name">appkey</stringProp>
              <stringProp name="Argument.value">6E4FF719F64CEF04</stringProp>
              <stringProp name="Argument.desc">测试appkey-秒下款</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="channel" elementType="Argument">
              <stringProp name="Argument.name">channel</stringProp>
              <stringProp name="Argument.value">14</stringProp>
              <stringProp name="Argument.desc">渠道id，安智</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="token" elementType="Argument">
              <stringProp name="Argument.name">token</stringProp>
              <stringProp name="Argument.value">a628801dcfe942089f6c013bcb200f0d</stringProp>
              <stringProp name="Argument.desc">调试token，过期登录重新获取</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="productId" elementType="Argument">
              <stringProp name="Argument.name">productId</stringProp>
              <stringProp name="Argument.value">10000600</stringProp>
              <stringProp name="Argument.desc">产品Id--临时测试产品id</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="username" elementType="Argument">
              <stringProp name="Argument.name">username</stringProp>
              <stringProp name="Argument.value">${__RandomString(2,赵钱孙李周吴郑王冯陈褚卫蒋沈韩杨朱秦尤许何吕施张孔曹严华金魏陶姜戚谢邹喻柏水窦章云苏潘葛奚范彭郎鲁韦昌马苗凤花方俞任袁柳酆鲍史唐费廉岑薛雷贺倪汤滕殷罗毕郝邬安常乐于时傅皮卞齐康伍余元卜顾孟平黄和穆萧尹姚邵湛汪祁毛禹狄米贝明臧计伏成戴谈宋茅庞熊纪舒屈项祝董梁杜阮蓝闵席季秀娟英华慧巧美娜静淑惠珠翠雅芝玉萍红娥玲芬芳燕彩春菊兰凤洁梅琳素云莲真环雪荣爱妹霞香月莺媛艳瑞凡佳嘉琼勤珍贞莉桂娣叶璧璐娅琦晶妍茜秋珊莎锦黛青倩婷姣婉娴瑾颖露瑶怡婵雁蓓纨仪荷丹蓉眉君琴蕊薇菁梦岚苑婕馨瑗琰韵融园艺咏卿聪澜纯毓悦昭冰爽琬茗羽希宁欣飘育滢馥筠柔竹霭凝晓欢霄枫芸菲寒伊亚宜可姬舒影荔枝思丽 伟刚勇毅俊峰强军平保东文辉力明永健世广志义兴良海山仁波宁贵福生龙元全国胜学祥才发武新利清飞彬富顺信子杰涛昌成康星光天达安岩中茂进林有坚和彪博诚先敬震振壮会思群豪心邦承乐绍功松善厚庆磊民友裕河哲江超浩亮政谦亨奇固之轮翰朗伯宏言若鸣朋斌梁栋维启克伦翔旭鹏泽晨辰士以建家致树炎德行时泰盛雄琛钧冠策腾楠榕风航弘,)}</stringProp>
              <stringProp name="Argument.desc">真实姓名</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="app_id" elementType="Argument">
              <stringProp name="Argument.name">app_id</stringProp>
              <stringProp name="Argument.value">10000008</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">appid----后续需要与appkey自动关联</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="数据库配置_灰度库" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="enviorment" elementType="Argument">
              <stringProp name="Argument.name">enviorment</stringProp>
              <stringProp name="Argument.value">灰度</stringProp>
              <stringProp name="Argument.desc">所属环境</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="connDataBaseURL_sms111" elementType="Argument">
              <stringProp name="Argument.name">connDataBaseURL_sms111</stringProp>
              <stringProp name="Argument.value">jdbc:mysql://172.16.0.8:3306/db_sms_test?useUnicode=true&amp;characterEncoding=UTF-8&amp;allowMultiQueries=true</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">测试短信数据库</stringProp>
            </elementProp>
            <elementProp name="connDataBaseAcct" elementType="Argument">
              <stringProp name="Argument.name">connDataBaseAcct</stringProp>
              <stringProp name="Argument.value">root</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="connDataBasePwd" elementType="Argument">
              <stringProp name="Argument.name">connDataBasePwd</stringProp>
              <stringProp name="Argument.value">123456</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">密码</stringProp>
            </elementProp>
            <elementProp name="connDataBaseURL_flowsum" elementType="Argument">
              <stringProp name="Argument.name">connDataBaseURL_flowsum</stringProp>
              <stringProp name="Argument.value">jdbc:mysql://172.16.0.8:3306/flowsum?useUnicode=true&amp;characterEncoding=UTF-8&amp;allowMultiQueries=true</stringProp>
              <stringProp name="Argument.desc">测试flowsum数据库</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="connDataBaseURL_dklm" elementType="Argument">
              <stringProp name="Argument.name">connDataBaseURL_dklm</stringProp>
              <stringProp name="Argument.value">jdbc:mysql://172.16.0.8:3306/db_dklm?useUnicode=true&amp;characterEncoding=UTF-8&amp;allowMultiQueries=true</stringProp>
              <stringProp name="Argument.desc">测试贷款联盟数据库</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="connDataBaseAcct_dklm" elementType="Argument">
              <stringProp name="Argument.name">connDataBaseAcct_dklm</stringProp>
              <stringProp name="Argument.value">root</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="connDataBasePwd_dklm" elementType="Argument">
              <stringProp name="Argument.name">connDataBasePwd_dklm</stringProp>
              <stringProp name="Argument.value">123456</stringProp>
              <stringProp name="Argument.desc">密码</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="dklm----jdbc连接" enabled="true">
          <stringProp name="dataSource">db_dklm</stringProp>
          <stringProp name="poolMax">0</stringProp>
          <stringProp name="timeout">10000</stringProp>
          <stringProp name="trimInterval">60000</stringProp>
          <boolProp name="autocommit">true</boolProp>
          <stringProp name="transactionIsolation">DEFAULT</stringProp>
          <boolProp name="keepAlive">true</boolProp>
          <stringProp name="connectionAge">5000</stringProp>
          <stringProp name="checkQuery">select 1</stringProp>
          <stringProp name="dbUrl">${connDataBaseURL_dklm}</stringProp>
          <stringProp name="driver">com.mysql.jdbc.Driver</stringProp>
          <stringProp name="username">${connDataBaseAcct_dklm}</stringProp>
          <stringProp name="password">${connDataBasePwd_dklm}</stringProp>
          <boolProp name="preinit">false</boolProp>
          <stringProp name="initQuery"></stringProp>
          <stringProp name="connectionProperties"></stringProp>
        </JDBCDataSource>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="发送验证码--ok" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="发送验证码" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">responseData</stringProp>
              <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
            <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="发送验证码" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询发送短信验证码" enabled="true">
            <stringProp name="dataSource">db_sms_test</stringProp>
            <stringProp name="query">select CONTENT from t_sms_record_detail where SIGN = &apos;安卓测试&apos; AND PHONE = &apos;${phone}&apos; GROUP BY CREATE_TIME DESC LIMIT 1</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="variableNames">aaa</stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
          </JDBCSampler>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="处理短信验证码" enabled="true">
            <stringProp name="BeanShellSampler.query">


public static String testAccount() throws Exception {

	String ss = &quot;${aaa_1}&quot;;
	//获取验证码
	String resp = ss.substring(4,10);
     //System.out.println(ss.substring(5,10));
	 return resp;
}
	//设置短信验证码到verCode参数里面
  vars.put(&quot;verCode&quot;,testAccount());</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="登录--ok" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="verCode" elementType="Argument">
                <stringProp name="Argument.name">verCode</stringProp>
                <stringProp name="Argument.value">207970</stringProp>
                <stringProp name="Argument.desc">短信验证码</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="type" elementType="Argument">
                <stringProp name="Argument.name">type</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">0：一键登陆 1：普通登陆	</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="onekey" elementType="Argument">
                <stringProp name="Argument.name">onekey</stringProp>
                <stringProp name="Argument.value">111</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">一键登录参数：1.appId、当前APP对应的appid,SDK传入; 2.accessToken、运营商token,SDK传入; 3.telecom、运营商，SDK传入; 4.timestamp、UNIX时间戳，毫秒级，SDK传入; 5.randoms	随机数，SDK传入; 6.sign	签名，SDK传入; 7.version、SDK版本号，SDK传入; 8.device、设备型号</stringProp>
              </elementProp>
              <elementProp name="shanyankey" elementType="Argument">
                <stringProp name="Argument.name">shanyankey</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.desc">解密key</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="loginType" elementType="Argument">
                <stringProp name="Argument.name">loginType</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.desc">1：登陆留资 0：直接登陆</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="userName" elementType="Argument">
                <stringProp name="Argument.name">userName</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">用户名，留资用</stringProp>
              </elementProp>
              <elementProp name="userIdCard" elementType="Argument">
                <stringProp name="Argument.name">userIdCard</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.desc">身份证，留资用</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="请求明文加密" enabled="false">
            <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        // params组装接口文档中所定义的接口参数
	   String params = 	&quot;{&apos;appKey&apos;: &apos;${appkey}&apos;,&apos;uuid&apos;: &apos;${uuid}&apos;,&apos;version&apos;: &apos;${version}&apos;,&apos;os&apos;: &apos;${os}&apos;,&apos;channel&apos;: ${channel},&apos;token&apos;: &apos;&apos;,&apos;data&apos;: {&apos;phone&apos;: &apos;${phone}&apos;,&apos;verCode&apos;: &apos;${verCode}&apos;,&apos;type&apos;: &apos;${type}&apos;,&apos;onekey&apos;: &apos;${onekey}&apos;,&apos;shanyankey&apos;: &apos;${shanyankey}&apos;,&apos;loginType&apos;: &apos;${loginType}&apos;,&apos;userName&apos;: &apos;${userName}&apos;,&apos;userIdCard&apos;: &apos;${userIdCard}&apos;},&apos;latitude&apos;: &apos;&apos;,&apos;longitude&apos;: &apos;&apos;,&apos;isLogin&apos;: &apos;&apos;}&quot;;
        
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.ENCRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jiaMi = encr.encryptOrDecrypt(aesKey,privateKey,params,type);

        return jiaMi;
}

  vars.put(&quot;req&quot;,testAccount());</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="登录" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone}&quot;,&#xd;
        &quot;verCode&quot;: &quot;${verCode}&quot;,&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;onekey&quot;: &quot;${onekey}&quot;,&#xd;
        &quot;shanyankey&quot;: &quot;${shanyankey}&quot;,&#xd;
        &quot;loginType&quot;: &quot;${loginType}&quot;,&#xd;
        &quot;userName&quot;: &quot;${userName}&quot;,&#xd;
        &quot;userIdCard&quot;: &quot;${userIdCard}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/user/login.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">responseData</stringProp>
              <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="登录" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone}&quot;,&#xd;
        &quot;verCode&quot;: &quot;251078&quot;,&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;onekey&quot;: &quot;${onekey}&quot;,&#xd;
        &quot;shanyankey&quot;: &quot;${shanyankey}&quot;,&#xd;
        &quot;loginType&quot;: &quot;${loginType}&quot;,&#xd;
        &quot;userName&quot;: &quot;${userName}&quot;,&#xd;
        &quot;userIdCard&quot;: &quot;${userIdCard}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/user/login.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">responseData</stringProp>
              <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
            <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="登录" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                <stringProp name="110541305">token</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;

String lgreq=(String) vars.get(&quot;res&quot;);
JSONObject jsonObj=JSONObject.parseObject(lgreq);
//System.out.println(jsonObj.get(&quot;data&quot;));
JSONObject jsonObj2=(JSONObject) jsonObj.get(&quot;data&quot;);
 //System.out.println(jsonObj2.get(&quot;active_code_serial_no&quot;));
String s=(String) jsonObj2.get(&quot;token&quot;);
String s1=String.valueOf(jsonObj2.get(&quot;userId&quot;));
vars.put(&quot;token&quot;,s);
vars.put(&quot;userId&quot;,s1);
//log.info(active_code_serial_no);
//System.out.println(s);
 		
</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计" enabled="true"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="type" elementType="Argument">
                <stringProp name="Argument.name">type</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.desc">0 统计产品 1 统计信用卡</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="targetControl" elementType="Argument">
                <stringProp name="Argument.name">targetControl</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.desc">值和type一样</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="url" elementType="Argument">
                <stringProp name="Argument.name">url</stringProp>
                <stringProp name="Argument.value">www.baidu.com</stringProp>
                <stringProp name="Argument.desc">申请链接</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cardId" elementType="Argument">
                <stringProp name="Argument.name">cardId</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.desc">信用卡id type=1 必填</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productId1" elementType="Argument">
                <stringProp name="Argument.name">productId1</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.desc">产品id type=0 必填</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="serialNumber" elementType="Argument">
                <stringProp name="Argument.name">serialNumber</stringProp>
                <stringProp name="Argument.value">${__Random(1,10,)}</stringProp>
                <stringProp name="Argument.desc">产品序号  大于1正整数，表示产品位置</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition" elementType="Argument">
                <stringProp name="Argument.name">funPosition</stringProp>
                <stringProp name="Argument.value">5</stringProp>
                <stringProp name="Argument.desc">首页：0   秒下款/贷款大全：1     信用卡：3    我的专属产品：4         一键获取产品：5    首页热门产品(6)   首页新品产品(7)     新人专享列表 (8)  发现(9)  跑马灯(11)  首页新人专享(12)   分类产品列表(13) 身价测试产品列表(14)，首页猜你想要(15)，排行榜产品列表(16)， 个人中心产品列表(17),挽留产品列表(18),三方案产品详情(19)， 首页新人专享分类(20), 首页闪电贷款分类(21), 首页热门产品分类(22), 首页大额分期分类(23)，三方案产品使用(24),三方案产品1(25),三方案产品2(26),三方案产品3(27)，推送产品详情页_立即拿钱（28）,首页最新口子分类_产品详情页(29),    首页闪电贷款分类_产品详情页(30),    首页新人专享分类_产品详情页(31),    首页超低门槛分类_产品详情页(32),    身价测试产品列表_产品详情页(33),    首页猜你想要_产品详情页(34),    个人中心产品列表_产品详情页(35),    产品详情页挽留弹窗_产品详情页(36)，黑马_审核资料成功_立即申请(37),黑马_审核资料失败_立即申请(38),黑马_为你推荐_立即申请(39),黑马_贷款排行榜_立即申请(40),黑马_搜索_立即申请(41),黑马_我的贷款_立即申请(42),黑马_失败详情_立即申请(43); </stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="describe" elementType="Argument">
                <stringProp name="Argument.name">describe</stringProp>
                <stringProp name="Argument.value">test</stringProp>
                <stringProp name="Argument.desc">统计描述</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="time" elementType="Argument">
                <stringProp name="Argument.name">time</stringProp>
                <stringProp name="Argument.value">${__time(YYYY-MM-DD,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">获取当天时间，时间格式为：YYYY-MM-DD</stringProp>
              </elementProp>
              <elementProp name="funPosition00" elementType="Argument">
                <stringProp name="Argument.name">funPosition00</stringProp>
                <stringProp name="Argument.value">0 </stringProp>
                <stringProp name="Argument.desc">首页</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition01" elementType="Argument">
                <stringProp name="Argument.name">funPosition01</stringProp>
                <stringProp name="Argument.value">1 </stringProp>
                <stringProp name="Argument.desc">秒下款/贷款大全</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition02" elementType="Argument">
                <stringProp name="Argument.name">funPosition02</stringProp>
                <stringProp name="Argument.value">2 </stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition03" elementType="Argument">
                <stringProp name="Argument.name">funPosition03</stringProp>
                <stringProp name="Argument.value">3 </stringProp>
                <stringProp name="Argument.desc">信用卡</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition04" elementType="Argument">
                <stringProp name="Argument.name">funPosition04</stringProp>
                <stringProp name="Argument.value">4 </stringProp>
                <stringProp name="Argument.desc">我的专属产品</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition05" elementType="Argument">
                <stringProp name="Argument.name">funPosition05</stringProp>
                <stringProp name="Argument.value">5 </stringProp>
                <stringProp name="Argument.desc">一键获取产品</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition06" elementType="Argument">
                <stringProp name="Argument.name">funPosition06</stringProp>
                <stringProp name="Argument.value">6 </stringProp>
                <stringProp name="Argument.desc">首页热门产品</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition07" elementType="Argument">
                <stringProp name="Argument.name">funPosition07</stringProp>
                <stringProp name="Argument.value">7 </stringProp>
                <stringProp name="Argument.desc">首页新品产品</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition08" elementType="Argument">
                <stringProp name="Argument.name">funPosition08</stringProp>
                <stringProp name="Argument.value">8 </stringProp>
                <stringProp name="Argument.desc">新人专享列表</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition09" elementType="Argument">
                <stringProp name="Argument.name">funPosition09</stringProp>
                <stringProp name="Argument.value">9 </stringProp>
                <stringProp name="Argument.desc">发现</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition10" elementType="Argument">
                <stringProp name="Argument.name">funPosition10</stringProp>
                <stringProp name="Argument.value">10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition11" elementType="Argument">
                <stringProp name="Argument.name">funPosition11</stringProp>
                <stringProp name="Argument.value">11</stringProp>
                <stringProp name="Argument.desc">跑马灯</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition12" elementType="Argument">
                <stringProp name="Argument.name">funPosition12</stringProp>
                <stringProp name="Argument.value">12</stringProp>
                <stringProp name="Argument.desc">首页新人专享</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition13" elementType="Argument">
                <stringProp name="Argument.name">funPosition13</stringProp>
                <stringProp name="Argument.value">13</stringProp>
                <stringProp name="Argument.desc">分类产品列表</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition14" elementType="Argument">
                <stringProp name="Argument.name">funPosition14</stringProp>
                <stringProp name="Argument.value">14</stringProp>
                <stringProp name="Argument.desc">身价测试产品列表</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition15" elementType="Argument">
                <stringProp name="Argument.name">funPosition15</stringProp>
                <stringProp name="Argument.value">15</stringProp>
                <stringProp name="Argument.desc">首页猜你想要</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition16" elementType="Argument">
                <stringProp name="Argument.name">funPosition16</stringProp>
                <stringProp name="Argument.value">16</stringProp>
                <stringProp name="Argument.desc">排行榜产品列表</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition17" elementType="Argument">
                <stringProp name="Argument.name">funPosition17</stringProp>
                <stringProp name="Argument.value">17</stringProp>
                <stringProp name="Argument.desc">个人中心产品列表</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition18" elementType="Argument">
                <stringProp name="Argument.name">funPosition18</stringProp>
                <stringProp name="Argument.value">18</stringProp>
                <stringProp name="Argument.desc">挽留产品列表</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition19" elementType="Argument">
                <stringProp name="Argument.name">funPosition19</stringProp>
                <stringProp name="Argument.value">19</stringProp>
                <stringProp name="Argument.desc">三方案产品详情</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition20" elementType="Argument">
                <stringProp name="Argument.name">funPosition20</stringProp>
                <stringProp name="Argument.value">20</stringProp>
                <stringProp name="Argument.desc">首页新人专享分类</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition21" elementType="Argument">
                <stringProp name="Argument.name">funPosition21</stringProp>
                <stringProp name="Argument.value">21</stringProp>
                <stringProp name="Argument.desc">首页闪电贷款分类</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition22" elementType="Argument">
                <stringProp name="Argument.name">funPosition22</stringProp>
                <stringProp name="Argument.value">22</stringProp>
                <stringProp name="Argument.desc">首页热门产品分类</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition23" elementType="Argument">
                <stringProp name="Argument.name">funPosition23</stringProp>
                <stringProp name="Argument.value">23</stringProp>
                <stringProp name="Argument.desc">首页大额分期分类</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition24" elementType="Argument">
                <stringProp name="Argument.name">funPosition24</stringProp>
                <stringProp name="Argument.value">24</stringProp>
                <stringProp name="Argument.desc">三方案产品使用</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition25" elementType="Argument">
                <stringProp name="Argument.name">funPosition25</stringProp>
                <stringProp name="Argument.value">25</stringProp>
                <stringProp name="Argument.desc">三方案产品1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition26" elementType="Argument">
                <stringProp name="Argument.name">funPosition26</stringProp>
                <stringProp name="Argument.value">26</stringProp>
                <stringProp name="Argument.desc">三方案产品2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition27" elementType="Argument">
                <stringProp name="Argument.name">funPosition27</stringProp>
                <stringProp name="Argument.value">27</stringProp>
                <stringProp name="Argument.desc">三方案产品3</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition28" elementType="Argument">
                <stringProp name="Argument.name">funPosition28</stringProp>
                <stringProp name="Argument.value">28</stringProp>
                <stringProp name="Argument.desc">推送产品详情页_立即拿钱</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition29" elementType="Argument">
                <stringProp name="Argument.name">funPosition29</stringProp>
                <stringProp name="Argument.value">29</stringProp>
                <stringProp name="Argument.desc">首页最新口子分类_产品详情页</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition30" elementType="Argument">
                <stringProp name="Argument.name">funPosition30</stringProp>
                <stringProp name="Argument.value">30</stringProp>
                <stringProp name="Argument.desc">首页闪电贷款分类_产品详情页</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition31" elementType="Argument">
                <stringProp name="Argument.name">funPosition31</stringProp>
                <stringProp name="Argument.value">31</stringProp>
                <stringProp name="Argument.desc">首页新人专享分类_产品详情页</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition32" elementType="Argument">
                <stringProp name="Argument.name">funPosition32</stringProp>
                <stringProp name="Argument.value">32</stringProp>
                <stringProp name="Argument.desc">首页超低门槛分类_产品详情页</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition33" elementType="Argument">
                <stringProp name="Argument.name">funPosition33</stringProp>
                <stringProp name="Argument.value">33</stringProp>
                <stringProp name="Argument.desc">身价测试产品列表_产品详情页</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition34" elementType="Argument">
                <stringProp name="Argument.name">funPosition34</stringProp>
                <stringProp name="Argument.value">34</stringProp>
                <stringProp name="Argument.desc">首页猜你想要_产品详情页</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition35" elementType="Argument">
                <stringProp name="Argument.name">funPosition35</stringProp>
                <stringProp name="Argument.value">35</stringProp>
                <stringProp name="Argument.desc">个人中心产品列表_产品详情页</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition36" elementType="Argument">
                <stringProp name="Argument.name">funPosition36</stringProp>
                <stringProp name="Argument.value">36</stringProp>
                <stringProp name="Argument.desc">产品详情页挽留弹窗_产品详情页</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition37" elementType="Argument">
                <stringProp name="Argument.name">funPosition37</stringProp>
                <stringProp name="Argument.value">37</stringProp>
                <stringProp name="Argument.desc">黑马_审核资料成功_立即申请</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition38" elementType="Argument">
                <stringProp name="Argument.name">funPosition38</stringProp>
                <stringProp name="Argument.value">38</stringProp>
                <stringProp name="Argument.desc">黑马_审核资料失败_立即申请</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition39" elementType="Argument">
                <stringProp name="Argument.name">funPosition39</stringProp>
                <stringProp name="Argument.value">39</stringProp>
                <stringProp name="Argument.desc">黑马_为你推荐_立即申请</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition40" elementType="Argument">
                <stringProp name="Argument.name">funPosition40</stringProp>
                <stringProp name="Argument.value">40</stringProp>
                <stringProp name="Argument.desc">黑马_贷款排行榜_立即申请</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition41" elementType="Argument">
                <stringProp name="Argument.name">funPosition41</stringProp>
                <stringProp name="Argument.value">41</stringProp>
                <stringProp name="Argument.desc">黑马_搜索_立即申请</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition42" elementType="Argument">
                <stringProp name="Argument.name">funPosition42</stringProp>
                <stringProp name="Argument.value">42</stringProp>
                <stringProp name="Argument.desc">黑马_我的贷款_立即申请</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition43" elementType="Argument">
                <stringProp name="Argument.name">funPosition43</stringProp>
                <stringProp name="Argument.value">43</stringProp>
                <stringProp name="Argument.desc">黑马_失败详情_立即申请</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition44" elementType="Argument">
                <stringProp name="Argument.name">funPosition44</stringProp>
                <stringProp name="Argument.value">44</stringProp>
                <stringProp name="Argument.desc">贷款联盟_超低利率分类</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition45" elementType="Argument">
                <stringProp name="Argument.name">funPosition45</stringProp>
                <stringProp name="Argument.value">45</stringProp>
                <stringProp name="Argument.desc">贷款联盟_超低利率分类_产品详情页</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition46" elementType="Argument">
                <stringProp name="Argument.name">funPosition46</stringProp>
                <stringProp name="Argument.value">46</stringProp>
                <stringProp name="Argument.desc">贷款联盟_新人专享分类</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition47" elementType="Argument">
                <stringProp name="Argument.name">funPosition47</stringProp>
                <stringProp name="Argument.value">47</stringProp>
                <stringProp name="Argument.desc">贷款联盟_新人专享分类_产品详情页</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition48" elementType="Argument">
                <stringProp name="Argument.name">funPosition48</stringProp>
                <stringProp name="Argument.value">48</stringProp>
                <stringProp name="Argument.desc">贷款联盟_高通过率分类</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition49" elementType="Argument">
                <stringProp name="Argument.name">funPosition49</stringProp>
                <stringProp name="Argument.value">49</stringProp>
                <stringProp name="Argument.desc">贷款联盟_高通过率_产品详情页</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition50" elementType="Argument">
                <stringProp name="Argument.name">funPosition50</stringProp>
                <stringProp name="Argument.value">50</stringProp>
                <stringProp name="Argument.desc">贷款联盟_低门槛贷分类</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition51" elementType="Argument">
                <stringProp name="Argument.name">funPosition51</stringProp>
                <stringProp name="Argument.value">51</stringProp>
                <stringProp name="Argument.desc">贷款联盟_低门槛贷分类_产品详情页</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition52" elementType="Argument">
                <stringProp name="Argument.name">funPosition52</stringProp>
                <stringProp name="Argument.value">52</stringProp>
                <stringProp name="Argument.desc">贷款联盟_首页新人专享</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition53" elementType="Argument">
                <stringProp name="Argument.name">funPosition53</stringProp>
                <stringProp name="Argument.value">53</stringProp>
                <stringProp name="Argument.desc">贷款联盟_首页新人专享_产品详情页</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition54" elementType="Argument">
                <stringProp name="Argument.name">funPosition54</stringProp>
                <stringProp name="Argument.value">54</stringProp>
                <stringProp name="Argument.desc">贷款联盟_首页新人专享更多推荐</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition55" elementType="Argument">
                <stringProp name="Argument.name">funPosition55</stringProp>
                <stringProp name="Argument.value">55</stringProp>
                <stringProp name="Argument.desc">贷款联盟_首页新人专享更多推荐_产品详情页</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition56" elementType="Argument">
                <stringProp name="Argument.name">funPosition56</stringProp>
                <stringProp name="Argument.value">56</stringProp>
                <stringProp name="Argument.desc">贷款联盟_首页新品推荐</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition57" elementType="Argument">
                <stringProp name="Argument.name">funPosition57</stringProp>
                <stringProp name="Argument.value">57</stringProp>
                <stringProp name="Argument.desc">贷款联盟_首页新品推荐_产品详情页</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition58" elementType="Argument">
                <stringProp name="Argument.name">funPosition58</stringProp>
                <stringProp name="Argument.value">58</stringProp>
                <stringProp name="Argument.desc">贷款联盟_首页热门推荐</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition59" elementType="Argument">
                <stringProp name="Argument.name">funPosition59</stringProp>
                <stringProp name="Argument.value">59</stringProp>
                <stringProp name="Argument.desc">贷款联盟_首页热门推荐_产品详情页</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition60" elementType="Argument">
                <stringProp name="Argument.name">funPosition60</stringProp>
                <stringProp name="Argument.value">60</stringProp>
                <stringProp name="Argument.desc">贷款联盟_贷款大全</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition61" elementType="Argument">
                <stringProp name="Argument.name">funPosition61</stringProp>
                <stringProp name="Argument.value">61</stringProp>
                <stringProp name="Argument.desc">贷款联盟_贷款大全详情页</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition62" elementType="Argument">
                <stringProp name="Argument.name">funPosition62</stringProp>
                <stringProp name="Argument.value">62</stringProp>
                <stringProp name="Argument.desc">秒进斗金_最新口子_快速拿钱</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition63" elementType="Argument">
                <stringProp name="Argument.name">funPosition63</stringProp>
                <stringProp name="Argument.value">63</stringProp>
                <stringProp name="Argument.desc">秒进斗金_闪电贷款_快速拿钱</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition64" elementType="Argument">
                <stringProp name="Argument.name">funPosition64</stringProp>
                <stringProp name="Argument.value">64</stringProp>
                <stringProp name="Argument.desc">秒进斗金_新人专享_快速拿钱</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition65" elementType="Argument">
                <stringProp name="Argument.name">funPosition65</stringProp>
                <stringProp name="Argument.value">65</stringProp>
                <stringProp name="Argument.desc">秒进斗金_超低门槛_快速拿钱</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition66" elementType="Argument">
                <stringProp name="Argument.name">funPosition66</stringProp>
                <stringProp name="Argument.value">66</stringProp>
                <stringProp name="Argument.desc">秒进斗金_首页_快速拿钱</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="判断是否第一次请求" enabled="true">
            <stringProp name="dataSource">db_dklm</stringProp>
            <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;10000600&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="variableNames">bbb</stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
          </JDBCSampler>
          <hashTree/>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----调试" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="TestPlan.comments">循环2次，第一次uv，第二次pv</stringProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----0  首页" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition00}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition00}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----1  秒下款/贷款大全" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition01}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition01}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----3  信用卡" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition03}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition03}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----4  我的专属产品" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition04}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition04}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----5  一键获取产品" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition05}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition05}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----6  首页热门产品" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition06}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition06}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----7  首页新品产品" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition07}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition07}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----8  新人专享列表" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition08}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition08}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----9  发现" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition09}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition09}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----11  跑马灯" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition11}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition11}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----12  首页新人专享" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition12}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition12}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----13  分类产品列表" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition13}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition13}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----14  身价测试产品列表" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition14}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition14}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----15  首页猜你想要" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition15}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition15}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----16  排行榜产品列表" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition16}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition16}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----17  个人中心产品列表" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition17}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition17}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----18  挽留产品列表" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition18}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition18}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----19  三方案产品详情" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition19}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition19}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----20  首页新人专享分类" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition20}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition20}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----21  首页闪电贷款分类" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition21}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition21}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----22  首页热门产品分类" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition22}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition22}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----23  首页大额分期分类" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition23}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition23}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----24  三方案产品使用" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition24}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition24}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----25  三方案产品1" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition25}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition25}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----26  三方案产品2" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition26}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition26}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----27  三方案产品3" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition27}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition27}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----28  推送产品详情页_立即拿钱" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition28}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition28}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----29  首页最新口子分类_产品详情页" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition29}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition29}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----30  首页闪电贷款分类_产品详情页" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition30}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition30}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----31  首页新人专享分类_产品详情页" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition31}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition31}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----32  首页超低门槛分类_产品详情页" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition32}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition32}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----33  身价测试产品列表_产品详情页" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition33}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition33}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----34  首页猜你想要_产品详情页" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition34}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition34}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----35  个人中心产品列表_产品详情页" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition35}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition35}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----36  产品详情页挽留弹窗_产品详情页" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition36}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition36}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----37  黑马_审核资料成功_立即申请" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition37}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition37}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----38  黑马_审核资料失败_立即申请" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition38}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition38}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----39  黑马_为你推荐_立即申请" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition39}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition39}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----40  黑马_贷款排行榜_立即申请" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition40}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition40}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----41  黑马_搜索_立即申请" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition41}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition41}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----42  黑马_我的贷款_立即申请" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition42}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition42}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----43  黑马_失败详情_立即申请" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition43}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition43}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----44  贷款联盟_超低利率分类" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition44}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition44}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----45  贷款联盟_超低利率分类_产品详情页" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition45}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition45}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----46  贷款联盟_新人专享分类" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition46}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition46}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----47  贷款联盟_新人专享分类_产品详情页" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition47}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition47}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----48  贷款联盟_高通过率分类" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition48}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition48}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----49  贷款联盟_高通过率_产品详情页" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition49}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition49}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----50  贷款联盟_低门槛贷分类" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition50}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition50}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----51  贷款联盟_低门槛贷分类_产品详情页" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition51}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition51}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----52  贷款联盟_首页新人专享" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition52}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition52}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----53  贷款联盟_首页新人专享_产品详情页" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition53}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition53}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----54  贷款联盟_首页新人专享更多推荐" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition54}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition54}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----55  贷款联盟_首页新人专享更多推荐_产品详情页" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition55}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition55}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----56  贷款联盟_首页新品推荐" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition56}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition56}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----57  贷款联盟_首页新品推荐_产品详情页" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition57}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition57}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----58  贷款联盟_首页热门推荐" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition58}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition58}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----59  贷款联盟_首页热门推荐_产品详情页" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition59}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition59}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----60  贷款联盟_贷款大全" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition60}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition60}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----61  贷款联盟_贷款大全详情页" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition61}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition61}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----62  秒进斗金_最新口子_快速拿钱" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition62}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition62}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----63  秒进斗金_闪电贷款_快速拿钱" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition63}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition63}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----64  秒进斗金_新人专享_快速拿钱" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition64}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition64}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----65  秒进斗金_超低门槛_快速拿钱" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition65}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition65}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="产品PVUV统计----66  秒进斗金_首页_快速拿钱" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="第一次访问统计uv量" enabled="true">
              <stringProp name="TestPlan.comments">判定是否第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} == 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="产品PVUV统计--第一次访问，统计为uv量" enabled="true">
                <stringProp name="TestPlan.comments">第一次访问判定条件：同一个app包（相同appkey和appid），同一个产品（相同productId），同一个访问ip（既同一个用户），每天的第一次访问(每天判定一次)</stringProp>
              </OnceOnlyController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition66}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT `STATUS` FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID = &apos;${productId}&apos;  AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为uv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1236967802">aaa_1=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非第一次访问统计pv量" enabled="true">
              <stringProp name="TestPlan.comments">判定不是第一次访问</stringProp>
              <stringProp name="IfController.condition">${bbb_1} != 0</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="产品PVUV统计--非第一次访问，统计为pv" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="产品PVUV统计--统计pv" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;cardId&quot;: &quot;${cardId}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition66}&quot;,&#xd;
        &quot;describe&quot;: &quot;${describe}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/app/pvuv.action</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2070259289">status&quot;:1</stringProp>
                      <stringProp name="-950083557">status&quot; : 1</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">48</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取pvuv数据库数据" enabled="true">
                  <stringProp name="dataSource">db_dklm</stringProp>
                  <stringProp name="query">SELECT count(1) FROM t_case_pv_uv_item_2_detail WHERE APP_ID = &apos;${app_id}&apos; AND PRODUCT_ID=&apos;${productId}&apos; AND IP = &apos;${ip_add}&apos; AND CREATE_TIME LIKE &apos;${time}%&apos; ORDER BY CREATE_TIME DESC LIMIT 1;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">aaa</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="产品PVUV统计结果处理" enabled="true">
                  <stringProp name="BeanShellSampler.query">import java.lang.Integer;
import java.lang.String;

public static String testAccount() throws Exception {
//	Integer i,j;
	Integer i=Integer.valueOf(${aaa_1}).intValue();
	Integer j=Integer.valueOf(${bbb_1}).intValue();
    if (i &gt; j){
//    if (${aaa_1} &gt; ${bbb_1}){
	    //设置res为成功状态:0  //pv增加
         return &quot;0&quot;;
    }else{
	    //设置res为失败状态：1 //pv未增加
         return &quot;1&quot;;
    }
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="产品PVUV统计--统计为pv" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="108402739">res=0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----位置点坐标对应含义需要重新弄" enabled="false"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="type" elementType="Argument">
                <stringProp name="Argument.name">type</stringProp>
                <stringProp name="Argument.value">2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">1、2 、3、4       </stringProp>
              </elementProp>
              <elementProp name="url" elementType="Argument">
                <stringProp name="Argument.name">url</stringProp>
                <stringProp name="Argument.value">www.baidu.com</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productId" elementType="Argument">
                <stringProp name="Argument.name">productId</stringProp>
                <stringProp name="Argument.value">10000600</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">测试产品id</stringProp>
              </elementProp>
              <elementProp name="serialNumber" elementType="Argument">
                <stringProp name="Argument.name">serialNumber</stringProp>
                <stringProp name="Argument.value">5</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition" elementType="Argument">
                <stringProp name="Argument.name">funPosition</stringProp>
                <stringProp name="Argument.value">34</stringProp>
                <stringProp name="Argument.desc">首页：0   秒下款/贷款大全：1     信用卡：3    我的专属产品：4         一键获取产品：5    首页热门产品(6)   首页新品产品(7)     新人专享列表 (8)  发现(9)  跑马灯(11)  首页新人专享(12)   分类产品列表(13) 身价测试产品列表(14)，首页猜你想要(15)，排行榜产品列表(16)， 个人中心产品列表(17),挽留产品列表(18),三方案产品详情(19)， 首页新人专享分类(20), 首页闪电贷款分类(21), 首页热门产品分类(22), 首页大额分期分类(23)，三方案产品使用(24),三方案产品1(25),三方案产品2(26),三方案产品3(27)，推送产品详情页_立即拿钱（28),首页最新口子分类_产品详情页(29),    首页闪电贷款分类_产品详情页(30),    首页新人专享分类_产品详情页(31),    首页超低门槛分类_产品详情页(32),    身价测试产品列表_产品详情页(33),    首页猜你想要_产品详情页(34),    个人中心产品列表_产品详情页(35),    产品详情页挽留弹窗_产品详情页(36),黑马_审核资料成功_立即申请(37),黑马_审核资料失败_立即申请(38),黑马_为你推荐_立即申请(39),黑马_贷款排行榜_立即申请(40),黑马_搜索_立即申请(41),黑马_我的贷款_立即申请(42),黑马_失败详情_立即申请(43),贷款联盟_超低利率分类(44),贷款联盟_超低利率分类_产品详情页(45),贷款联盟_新人专享分类(46),贷款联盟_新人专享分类_产品详情页(47),贷款联盟_高通过率分类(48),贷款联盟_高通过率_产品详情页(49),贷款联盟_低门槛贷分类(50),贷款联盟_低门槛贷分类_产品详情页(51),贷款联盟_首页新人专享(52),贷款联盟_首页新人专享_产品详情页(53),贷款联盟_首页新人专享更多推荐(54),贷款联盟_首页新人专享更多推荐_产品详情页(55),贷款联盟_首页新品推荐(56),贷款联盟_首页新品推荐_产品详情页(57),贷款联盟_首页热门推荐(58),贷款联盟_首页热门推荐_产品详情页(59),贷款联盟_贷款大全(60),贷款联盟_贷款大全详情页(61),秒进斗金_最新口子_快速拿钱(62),秒进斗金_闪电贷款_快速拿钱(63),秒进斗金_新人专享_快速拿钱(64),秒进斗金_超低门槛_快速拿钱(65),秒进斗金_首页_快速拿钱(66); </stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="resultStatus" elementType="Argument">
                <stringProp name="Argument.name">resultStatus</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.desc">1：成功 0：失败</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="resultStatus00" elementType="Argument">
                <stringProp name="Argument.name">resultStatus00</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.desc">甲方请求状态  成功</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="resultStatus01" elementType="Argument">
                <stringProp name="Argument.name">resultStatus01</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.desc">甲方请求状态  失败</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition00" elementType="Argument">
                <stringProp name="Argument.name">funPosition00</stringProp>
                <stringProp name="Argument.value">0 </stringProp>
                <stringProp name="Argument.desc">首页</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition01" elementType="Argument">
                <stringProp name="Argument.name">funPosition01</stringProp>
                <stringProp name="Argument.value">1 </stringProp>
                <stringProp name="Argument.desc">秒下款/贷款大全</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition02" elementType="Argument">
                <stringProp name="Argument.name">funPosition02</stringProp>
                <stringProp name="Argument.value">2 </stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition03" elementType="Argument">
                <stringProp name="Argument.name">funPosition03</stringProp>
                <stringProp name="Argument.value">3 </stringProp>
                <stringProp name="Argument.desc">信用卡</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition04" elementType="Argument">
                <stringProp name="Argument.name">funPosition04</stringProp>
                <stringProp name="Argument.value">4 </stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">我的专属产品</stringProp>
              </elementProp>
              <elementProp name="funPosition05" elementType="Argument">
                <stringProp name="Argument.name">funPosition05</stringProp>
                <stringProp name="Argument.value">5 </stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">一键获取产品</stringProp>
              </elementProp>
              <elementProp name="funPosition06" elementType="Argument">
                <stringProp name="Argument.name">funPosition06</stringProp>
                <stringProp name="Argument.value">6 </stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">首页热门产品</stringProp>
              </elementProp>
              <elementProp name="funPosition07" elementType="Argument">
                <stringProp name="Argument.name">funPosition07</stringProp>
                <stringProp name="Argument.value">7 </stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">首页新品产品</stringProp>
              </elementProp>
              <elementProp name="funPosition08" elementType="Argument">
                <stringProp name="Argument.name">funPosition08</stringProp>
                <stringProp name="Argument.value">8 </stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">新人专享列表</stringProp>
              </elementProp>
              <elementProp name="funPosition09" elementType="Argument">
                <stringProp name="Argument.name">funPosition09</stringProp>
                <stringProp name="Argument.value">9 </stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">发现</stringProp>
              </elementProp>
              <elementProp name="funPosition10" elementType="Argument">
                <stringProp name="Argument.name">funPosition10</stringProp>
                <stringProp name="Argument.value">10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="funPosition11" elementType="Argument">
                <stringProp name="Argument.name">funPosition11</stringProp>
                <stringProp name="Argument.value">11</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">跑马灯</stringProp>
              </elementProp>
              <elementProp name="funPosition12" elementType="Argument">
                <stringProp name="Argument.name">funPosition12</stringProp>
                <stringProp name="Argument.value">12</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">首页新人专享</stringProp>
              </elementProp>
              <elementProp name="funPosition13" elementType="Argument">
                <stringProp name="Argument.name">funPosition13</stringProp>
                <stringProp name="Argument.value">13</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">分类产品列表</stringProp>
              </elementProp>
              <elementProp name="funPosition14" elementType="Argument">
                <stringProp name="Argument.name">funPosition14</stringProp>
                <stringProp name="Argument.value">14</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">身价测试产品列表</stringProp>
              </elementProp>
              <elementProp name="funPosition15" elementType="Argument">
                <stringProp name="Argument.name">funPosition15</stringProp>
                <stringProp name="Argument.value">15</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">首页猜你想要</stringProp>
              </elementProp>
              <elementProp name="funPosition16" elementType="Argument">
                <stringProp name="Argument.name">funPosition16</stringProp>
                <stringProp name="Argument.value">16</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">排行榜产品列表</stringProp>
              </elementProp>
              <elementProp name="funPosition17" elementType="Argument">
                <stringProp name="Argument.name">funPosition17</stringProp>
                <stringProp name="Argument.value">17</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">个人中心产品列表</stringProp>
              </elementProp>
              <elementProp name="funPosition18" elementType="Argument">
                <stringProp name="Argument.name">funPosition18</stringProp>
                <stringProp name="Argument.value">18</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">挽留产品列表</stringProp>
              </elementProp>
              <elementProp name="funPosition19" elementType="Argument">
                <stringProp name="Argument.name">funPosition19</stringProp>
                <stringProp name="Argument.value">19</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">三方案产品详情</stringProp>
              </elementProp>
              <elementProp name="funPosition20" elementType="Argument">
                <stringProp name="Argument.name">funPosition20</stringProp>
                <stringProp name="Argument.value">20</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">首页新人专享分类</stringProp>
              </elementProp>
              <elementProp name="funPosition21" elementType="Argument">
                <stringProp name="Argument.name">funPosition21</stringProp>
                <stringProp name="Argument.value">21</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">首页闪电贷款分类</stringProp>
              </elementProp>
              <elementProp name="funPosition22" elementType="Argument">
                <stringProp name="Argument.name">funPosition22</stringProp>
                <stringProp name="Argument.value">22</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">首页热门产品分类</stringProp>
              </elementProp>
              <elementProp name="funPosition23" elementType="Argument">
                <stringProp name="Argument.name">funPosition23</stringProp>
                <stringProp name="Argument.value">23</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">首页大额分期分类</stringProp>
              </elementProp>
              <elementProp name="funPosition24" elementType="Argument">
                <stringProp name="Argument.name">funPosition24</stringProp>
                <stringProp name="Argument.value">24</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">三方案产品使用</stringProp>
              </elementProp>
              <elementProp name="funPosition25" elementType="Argument">
                <stringProp name="Argument.name">funPosition25</stringProp>
                <stringProp name="Argument.value">25</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">三方案产品1</stringProp>
              </elementProp>
              <elementProp name="funPosition26" elementType="Argument">
                <stringProp name="Argument.name">funPosition26</stringProp>
                <stringProp name="Argument.value">26</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">三方案产品2</stringProp>
              </elementProp>
              <elementProp name="funPosition27" elementType="Argument">
                <stringProp name="Argument.name">funPosition27</stringProp>
                <stringProp name="Argument.value">27</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">三方案产品3</stringProp>
              </elementProp>
              <elementProp name="funPosition28" elementType="Argument">
                <stringProp name="Argument.name">funPosition28</stringProp>
                <stringProp name="Argument.value">28</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">推送产品详情页_立即拿钱</stringProp>
              </elementProp>
              <elementProp name="funPosition29" elementType="Argument">
                <stringProp name="Argument.name">funPosition29</stringProp>
                <stringProp name="Argument.value">29</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">首页最新口子分类_产品详情页</stringProp>
              </elementProp>
              <elementProp name="funPosition30" elementType="Argument">
                <stringProp name="Argument.name">funPosition30</stringProp>
                <stringProp name="Argument.value">30</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">首页闪电贷款分类_产品详情页</stringProp>
              </elementProp>
              <elementProp name="funPosition31" elementType="Argument">
                <stringProp name="Argument.name">funPosition31</stringProp>
                <stringProp name="Argument.value">31</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">首页新人专享分类_产品详情页</stringProp>
              </elementProp>
              <elementProp name="funPosition32" elementType="Argument">
                <stringProp name="Argument.name">funPosition32</stringProp>
                <stringProp name="Argument.value">32</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">首页超低门槛分类_产品详情页</stringProp>
              </elementProp>
              <elementProp name="funPosition33" elementType="Argument">
                <stringProp name="Argument.name">funPosition33</stringProp>
                <stringProp name="Argument.value">33</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">身价测试产品列表_产品详情页</stringProp>
              </elementProp>
              <elementProp name="funPosition34" elementType="Argument">
                <stringProp name="Argument.name">funPosition34</stringProp>
                <stringProp name="Argument.value">34</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">首页猜你想要_产品详情页</stringProp>
              </elementProp>
              <elementProp name="funPosition35" elementType="Argument">
                <stringProp name="Argument.name">funPosition35</stringProp>
                <stringProp name="Argument.value">35</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">个人中心产品列表_产品详情页</stringProp>
              </elementProp>
              <elementProp name="funPosition36" elementType="Argument">
                <stringProp name="Argument.name">funPosition36</stringProp>
                <stringProp name="Argument.value">36</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">产品详情页挽留弹窗_产品详情页</stringProp>
              </elementProp>
              <elementProp name="funPosition37" elementType="Argument">
                <stringProp name="Argument.name">funPosition37</stringProp>
                <stringProp name="Argument.value">37</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">黑马_审核资料成功_立即申请</stringProp>
              </elementProp>
              <elementProp name="funPosition38" elementType="Argument">
                <stringProp name="Argument.name">funPosition38</stringProp>
                <stringProp name="Argument.value">38</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">黑马_审核资料失败_立即申请</stringProp>
              </elementProp>
              <elementProp name="funPosition39" elementType="Argument">
                <stringProp name="Argument.name">funPosition39</stringProp>
                <stringProp name="Argument.value">39</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">黑马_为你推荐_立即申请</stringProp>
              </elementProp>
              <elementProp name="funPosition40" elementType="Argument">
                <stringProp name="Argument.name">funPosition40</stringProp>
                <stringProp name="Argument.value">40</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">黑马_贷款排行榜_立即申请</stringProp>
              </elementProp>
              <elementProp name="funPosition41" elementType="Argument">
                <stringProp name="Argument.name">funPosition41</stringProp>
                <stringProp name="Argument.value">41</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">黑马_搜索_立即申请</stringProp>
              </elementProp>
              <elementProp name="funPosition42" elementType="Argument">
                <stringProp name="Argument.name">funPosition42</stringProp>
                <stringProp name="Argument.value">42</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">黑马_我的贷款_立即申请</stringProp>
              </elementProp>
              <elementProp name="funPosition43" elementType="Argument">
                <stringProp name="Argument.name">funPosition43</stringProp>
                <stringProp name="Argument.value">43</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">黑马_失败详情_立即申请</stringProp>
              </elementProp>
              <elementProp name="funPosition44" elementType="Argument">
                <stringProp name="Argument.name">funPosition44</stringProp>
                <stringProp name="Argument.value">44</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">贷款联盟_超低利率分类</stringProp>
              </elementProp>
              <elementProp name="funPosition45" elementType="Argument">
                <stringProp name="Argument.name">funPosition45</stringProp>
                <stringProp name="Argument.value">45</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">贷款联盟_超低利率分类_产品详情页</stringProp>
              </elementProp>
              <elementProp name="funPosition46" elementType="Argument">
                <stringProp name="Argument.name">funPosition46</stringProp>
                <stringProp name="Argument.value">46</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">贷款联盟_新人专享分类</stringProp>
              </elementProp>
              <elementProp name="funPosition47" elementType="Argument">
                <stringProp name="Argument.name">funPosition47</stringProp>
                <stringProp name="Argument.value">47</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">贷款联盟_新人专享分类_产品详情页</stringProp>
              </elementProp>
              <elementProp name="funPosition48" elementType="Argument">
                <stringProp name="Argument.name">funPosition48</stringProp>
                <stringProp name="Argument.value">48</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">贷款联盟_高通过率分类</stringProp>
              </elementProp>
              <elementProp name="funPosition49" elementType="Argument">
                <stringProp name="Argument.name">funPosition49</stringProp>
                <stringProp name="Argument.value">49</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">贷款联盟_高通过率_产品详情页</stringProp>
              </elementProp>
              <elementProp name="funPosition50" elementType="Argument">
                <stringProp name="Argument.name">funPosition50</stringProp>
                <stringProp name="Argument.value">50</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">贷款联盟_低门槛贷分类</stringProp>
              </elementProp>
              <elementProp name="funPosition51" elementType="Argument">
                <stringProp name="Argument.name">funPosition51</stringProp>
                <stringProp name="Argument.value">51</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">贷款联盟_低门槛贷分类_产品详情页</stringProp>
              </elementProp>
              <elementProp name="funPosition52" elementType="Argument">
                <stringProp name="Argument.name">funPosition52</stringProp>
                <stringProp name="Argument.value">52</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">贷款联盟_首页新人专享</stringProp>
              </elementProp>
              <elementProp name="funPosition53" elementType="Argument">
                <stringProp name="Argument.name">funPosition53</stringProp>
                <stringProp name="Argument.value">53</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">贷款联盟_首页新人专享_产品详情页</stringProp>
              </elementProp>
              <elementProp name="funPosition54" elementType="Argument">
                <stringProp name="Argument.name">funPosition54</stringProp>
                <stringProp name="Argument.value">54</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">贷款联盟_首页新人专享更多推荐</stringProp>
              </elementProp>
              <elementProp name="funPosition55" elementType="Argument">
                <stringProp name="Argument.name">funPosition55</stringProp>
                <stringProp name="Argument.value">55</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">贷款联盟_首页新人专享更多推荐_产品详情页</stringProp>
              </elementProp>
              <elementProp name="funPosition56" elementType="Argument">
                <stringProp name="Argument.name">funPosition56</stringProp>
                <stringProp name="Argument.value">56</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">贷款联盟_首页新品推荐</stringProp>
              </elementProp>
              <elementProp name="funPosition57" elementType="Argument">
                <stringProp name="Argument.name">funPosition57</stringProp>
                <stringProp name="Argument.value">57</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">贷款联盟_首页新品推荐_产品详情页</stringProp>
              </elementProp>
              <elementProp name="funPosition58" elementType="Argument">
                <stringProp name="Argument.name">funPosition58</stringProp>
                <stringProp name="Argument.value">58</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">贷款联盟_首页热门推荐</stringProp>
              </elementProp>
              <elementProp name="funPosition59" elementType="Argument">
                <stringProp name="Argument.name">funPosition59</stringProp>
                <stringProp name="Argument.value">59</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">贷款联盟_首页热门推荐_产品详情页</stringProp>
              </elementProp>
              <elementProp name="funPosition60" elementType="Argument">
                <stringProp name="Argument.name">funPosition60</stringProp>
                <stringProp name="Argument.value">60</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">贷款联盟_贷款大全</stringProp>
              </elementProp>
              <elementProp name="funPosition61" elementType="Argument">
                <stringProp name="Argument.name">funPosition61</stringProp>
                <stringProp name="Argument.value">61</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">贷款联盟_贷款大全详情页</stringProp>
              </elementProp>
              <elementProp name="funPosition62" elementType="Argument">
                <stringProp name="Argument.name">funPosition62</stringProp>
                <stringProp name="Argument.value">62</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">秒进斗金_最新口子_快速拿钱</stringProp>
              </elementProp>
              <elementProp name="funPosition63" elementType="Argument">
                <stringProp name="Argument.name">funPosition63</stringProp>
                <stringProp name="Argument.value">63</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">秒进斗金_闪电贷款_快速拿钱</stringProp>
              </elementProp>
              <elementProp name="funPosition64" elementType="Argument">
                <stringProp name="Argument.name">funPosition64</stringProp>
                <stringProp name="Argument.value">64</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">秒进斗金_新人专享_快速拿钱</stringProp>
              </elementProp>
              <elementProp name="funPosition65" elementType="Argument">
                <stringProp name="Argument.name">funPosition65</stringProp>
                <stringProp name="Argument.value">65</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">秒进斗金_超低门槛_快速拿钱</stringProp>
              </elementProp>
              <elementProp name="funPosition66" elementType="Argument">
                <stringProp name="Argument.name">funPosition66</stringProp>
                <stringProp name="Argument.value">66</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">秒进斗金_首页_快速拿钱</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----调试" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="460420173">aaa_1=${resultStatus}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----0    首页，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition00}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1983223917">点赞成功！</stringProp>
                  <stringProp name="-2070259289">status&quot;:1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition00} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----1    秒下款/贷款大全，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition01}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition01} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----3    信用卡，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition03}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition03} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----4    我的专属产品，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition04}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition04} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----5    一键获取产品，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition05}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition05} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----6    首页热门产品，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition06}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition06} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----7    首页新品产品，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition07}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition07} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----8    新人专享列表，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition08}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition08} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----9    发现，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition09}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition09} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----11    跑马灯， 甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition11}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition11} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----12    首页新人专享，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition12}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition12} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----13    分类产品列表，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition13}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition13} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----14    身价测试产品列表，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition14}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition14} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----15    首页猜你想要，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition15}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition15} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----16    排行榜产品列表，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition16}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition16} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----17    个人中心产品列表，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition17}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition17} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----18    挽留产品列表，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition18}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition18} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----19    三方案产品详情，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition19}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition19} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----20    首页新人专享分类，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition20}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition20} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----21    首页闪电贷款分类，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition21}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition21} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----22    首页热门产品分类，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition22}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition22} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----23    首页大额分期分类，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition23}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition23} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----24    三方案产品使用，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition24}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition24} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----25    三方案产品1，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition25}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition25} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----26    三方案产品2，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition26}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition26} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----27    三方案产品3，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition27}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition27} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----28    推送产品详情页_立即拿钱，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition28}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition28} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----29    首页最新口子分类_产品详情页，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition29}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition29} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----30    首页闪电贷款分类_产品详情页，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition30}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition30} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----31    首页新人专享分类_产品详情页，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition31}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition31} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----32    首页超低门槛分类_产品详情页，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition32}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition32} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----33    身价测试产品列表_产品详情页，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition33}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition33} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----34    首页猜你想要_产品详情页，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition34}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition34} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----35    个人中心产品列表_产品详情页，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition35}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition35} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----36    产品详情页挽留弹窗_产品详情页，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition36}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition36} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----37    黑马_审核资料成功_立即申请，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition37}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition37} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----38    黑马_审核资料失败_立即申请，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition38}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition38} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----39    黑马_为你推荐_立即申请，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition39}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition39} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----40    黑马_贷款排行榜_立即申请，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition40}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition40} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----41    黑马_搜索_立即申请，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition41}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition41} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----42    黑马_我的贷款_立即申请，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition42}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition42} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----43    黑马_失败详情_立即申请，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition43}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition43} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----44    贷款联盟_超低利率分类，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition44}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition44} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----45    贷款联盟_超低利率分类_产品详情页，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition45}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition45} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----46    贷款联盟_新人专享分类，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition46}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition46} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----47    贷款联盟_新人专享分类_产品详情页，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition47}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition47} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----48    贷款联盟_高通过率分类，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition48}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition48} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----49    贷款联盟_高通过率_产品详情页，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition49}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition49} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----50    贷款联盟_低门槛贷分类，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition50}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition50} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----51    贷款联盟_低门槛贷分类_产品详情页，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition51}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition51} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----52    贷款联盟_首页新人专享，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition52}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition52} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----53    贷款联盟_首页新人专享_产品详情页，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition53}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition53} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----54    贷款联盟_首页新人专享更多推荐，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition54}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition54} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----55    贷款联盟_首页新人专享更多推荐_产品详情页，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition55}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition55} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----56    贷款联盟_首页新品推荐，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition56}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition56} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----57    贷款联盟_首页新品推荐_产品详情页，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition57}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition57} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----58    贷款联盟_首页热门推荐，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition58}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition58} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----59    贷款联盟_首页热门推荐_产品详情页，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition59}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition59} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----60    贷款联盟_贷款大全，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition60}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition60} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----61    贷款联盟_贷款大全详情页，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition61}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition61} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----62    秒进斗金_最新口子_快速拿钱，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition62}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition62} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----63    秒进斗金_闪电贷款_快速拿钱，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition63}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition63} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----64    秒进斗金_新人专享_快速拿钱，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition64}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition64} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----65    秒进斗金_超低门槛_快速拿钱，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition65}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition65} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----66    秒进斗金_首页_快速拿钱，甲方请求状态成功" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition66}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus00}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition66} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082381">aaa_1=${resultStatus00}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----0    首页，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition00}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1983223917">点赞成功！</stringProp>
                  <stringProp name="-2070259289">status&quot;:1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition00} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----1    秒下款/贷款大全，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition01}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition01} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----3    信用卡，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition03}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition03} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----4    我的专属产品，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition04}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition04} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----5    一键获取产品，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition05}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition05} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----6    首页热门产品，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition06}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition06} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----7    首页新品产品，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition07}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition07} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----8    新人专享列表，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition08}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition08} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----9    发现，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition09}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition09} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----11    跑马灯， 甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition11}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition11} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----12    首页新人专享，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition12}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition12} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----13    分类产品列表，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition13}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition13} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----14    身价测试产品列表，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition14}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition14} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----15    首页猜你想要，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition15}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition15} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----16    排行榜产品列表，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition16}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition16} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----17    个人中心产品列表，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition17}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition17} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----18    挽留产品列表，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition18}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition18} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----19    三方案产品详情，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition19}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition19} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----20    首页新人专享分类，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition20}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition20} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----21    首页闪电贷款分类，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition21}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition21} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----22    首页热门产品分类，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition22}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition22} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----23    首页大额分期分类，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition23}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition23} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----24    三方案产品使用，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition24}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition24} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----25    三方案产品1，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition25}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition25} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----26    三方案产品2，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition26}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition26} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----27    三方案产品3，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition27}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition27} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----28    推送产品详情页_立即拿钱，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition28}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition28} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----29    首页最新口子分类_产品详情页，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition29}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition29} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----30    首页闪电贷款分类_产品详情页，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition30}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition30} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----31    首页新人专享分类_产品详情页，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition31}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition31} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----32    首页超低门槛分类_产品详情页，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition32}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition32} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----33    身价测试产品列表_产品详情页，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition33}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition33} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----34    首页猜你想要_产品详情页，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition34}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition34} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----35    个人中心产品列表_产品详情页，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition35}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition35} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----36    产品详情页挽留弹窗_产品详情页，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition36}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition36} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----37    黑马_审核资料成功_立即申请，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition37}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition37} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----38    黑马_审核资料失败_立即申请，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition38}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition38} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----39    黑马_为你推荐_立即申请，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition39}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition39} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----40    黑马_贷款排行榜_立即申请，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition40}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition40} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----41    黑马_搜索_立即申请，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition41}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition41} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----42    黑马_我的贷款_立即申请，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition42}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition42} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----43    黑马_失败详情_立即申请，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition43}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition43} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----44    贷款联盟_超低利率分类，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition44}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition44} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----45    贷款联盟_超低利率分类_产品详情页，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition45}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition45} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----46    贷款联盟_新人专享分类，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition46}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition46} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----47    贷款联盟_新人专享分类_产品详情页，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition47}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition47} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----48    贷款联盟_高通过率分类，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition48}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition48} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----49    贷款联盟_高通过率_产品详情页，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition49}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition49} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----50    贷款联盟_低门槛贷分类，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition50}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition50} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----51    贷款联盟_低门槛贷分类_产品详情页，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition51}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition51} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----52    贷款联盟_首页新人专享，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition52}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition52} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----53    贷款联盟_首页新人专享_产品详情页，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition53}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition53} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----54    贷款联盟_首页新人专享更多推荐，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition54}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition54} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----55    贷款联盟_首页新人专享更多推荐_产品详情页，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition55}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition55} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----56    贷款联盟_首页新品推荐，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition56}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition56} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----57    贷款联盟_首页新品推荐_产品详情页，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition57}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition57} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----58    贷款联盟_首页热门推荐，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition58}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition58} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----59    贷款联盟_首页热门推荐_产品详情页，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition59}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition59} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----60    贷款联盟_贷款大全，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition60}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition60} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----61    贷款联盟_贷款大全详情页，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition61}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition61} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----62    秒进斗金_最新口子_快速拿钱，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition62}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition62} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----63    秒进斗金_闪电贷款_快速拿钱，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition63}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition63} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----64    秒进斗金_新人专享_快速拿钱，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition64}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition64} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----65    秒进斗金_超低门槛_快速拿钱，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition65}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition65} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="按收费方式：产品统计----66    秒进斗金_首页_快速拿钱，甲方请求状态失败" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;${token}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;url&quot;: &quot;${url}&quot;,&#xd;
        &quot;productId&quot;: &quot;${productId}&quot;,&#xd;
        &quot;serialNumber&quot;: &quot;${serialNumber}&quot;,&#xd;
        &quot;funPosition&quot;: &quot;${funPosition66}&quot;,&#xd;
        &quot;resultStatus&quot;: &quot;${resultStatus01}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">172.16.0.7</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/app/pvuvItem.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询产品统计结果" enabled="true">
              <stringProp name="dataSource">db_dklm</stringProp>
              <stringProp name="query">select RESULT_STATUS from t_case_pv_uv_item_detail WHERE APP_ID = &apos;${app_id}&apos; AND FUN_POSITION=${funPosition66} ORDER BY CREATE_TIME DESC LIMIT 1; </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">aaa</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="按收费方式：产品统计" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="82082412">aaa_1=${resultStatus01}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="结果查看" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="Backend Listener" enabled="false">
        <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="influxdbMetricsSender" elementType="Argument">
              <stringProp name="Argument.name">influxdbMetricsSender</stringProp>
              <stringProp name="Argument.value">org.apache.jmeter.visualizers.backend.influxdb.HttpMetricsSender</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="influxdbUrl" elementType="Argument">
              <stringProp name="Argument.name">influxdbUrl</stringProp>
              <stringProp name="Argument.value">http://172.16.0.61:8086/write?db=jmeter</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="application" elementType="Argument">
              <stringProp name="Argument.name">application</stringProp>
              <stringProp name="Argument.value">test</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="measurement" elementType="Argument">
              <stringProp name="Argument.name">measurement</stringProp>
              <stringProp name="Argument.value">jmeter</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="summaryOnly" elementType="Argument">
              <stringProp name="Argument.name">summaryOnly</stringProp>
              <stringProp name="Argument.value">false</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="samplersRegex" elementType="Argument">
              <stringProp name="Argument.name">samplersRegex</stringProp>
              <stringProp name="Argument.value">^[^#_].*</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="percentiles" elementType="Argument">
              <stringProp name="Argument.name">percentiles</stringProp>
              <stringProp name="Argument.value">50;90;95;99</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="testTitle" elementType="Argument">
              <stringProp name="Argument.name">testTitle</stringProp>
              <stringProp name="Argument.value">${_TestPlanName}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="eventTags" elementType="Argument">
              <stringProp name="Argument.name">eventTags</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </elementProp>
        <stringProp name="classname">org.apache.jmeter.visualizers.backend.influxdb.InfluxdbBackendListenerClient</stringProp>
      </BackendListener>
      <hashTree/>
      <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="Backend Listener" enabled="false">
        <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="influxdbMetricsSender" elementType="Argument">
              <stringProp name="Argument.name">influxdbMetricsSender</stringProp>
              <stringProp name="Argument.value">org.apache.jmeter.visualizers.backend.influxdb.HttpMetricsSender</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="influxdbUrl" elementType="Argument">
              <stringProp name="Argument.name">influxdbUrl</stringProp>
              <stringProp name="Argument.value">http://172.16.0.61:8086/write?db=jmeter</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="application" elementType="Argument">
              <stringProp name="Argument.name">application</stringProp>
              <stringProp name="Argument.value">test</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="measurement" elementType="Argument">
              <stringProp name="Argument.name">measurement</stringProp>
              <stringProp name="Argument.value">jmeter</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="summaryOnly" elementType="Argument">
              <stringProp name="Argument.name">summaryOnly</stringProp>
              <stringProp name="Argument.value">false</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="samplersRegex" elementType="Argument">
              <stringProp name="Argument.name">samplersRegex</stringProp>
              <stringProp name="Argument.value">^[^#_].*</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="percentiles" elementType="Argument">
              <stringProp name="Argument.name">percentiles</stringProp>
              <stringProp name="Argument.value">90;95;99</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="testTitle" elementType="Argument">
              <stringProp name="Argument.name">testTitle</stringProp>
              <stringProp name="Argument.value">${_TestPlanName}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="eventTags" elementType="Argument">
              <stringProp name="Argument.name">eventTags</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </elementProp>
        <stringProp name="classname">org.apache.jmeter.visualizers.backend.influxdb.InfluxdbBackendListenerClient</stringProp>
      </BackendListener>
      <hashTree/>
      <SetupThreadGroup guiclass="SetupThreadGroupGui" testclass="SetupThreadGroup" testname="setUp Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </SetupThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="发送验证码--ok" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="发送验证码" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone11}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/user/sendVerCode.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">responseData</stringProp>
              <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
            <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="发送验证码" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询发送短信验证码" enabled="true">
            <stringProp name="dataSource">db_sms_test</stringProp>
            <stringProp name="query">select CONTENT from t_sms_record_detail where SIGN = &apos;安卓测试&apos; AND PHONE = &apos;${phone11}&apos; GROUP BY CREATE_TIME DESC LIMIT 1</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="variableNames">aaa</stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
          </JDBCSampler>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="处理短信验证码" enabled="true">
            <stringProp name="BeanShellSampler.query">


public static String testAccount() throws Exception {

	String ss = &quot;${aaa_1}&quot;;
	//获取验证码
	String resp = ss.substring(4,10);
     //System.out.println(ss.substring(5,10));
	 return resp;
}
	//设置短信验证码到verCode参数里面
  vars.put(&quot;verCode&quot;,testAccount());</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="登录--ok" enabled="true"/>
        <hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="请求明文加密" enabled="false">
            <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        // params组装接口文档中所定义的接口参数
	   String params = 	&quot;{&apos;appKey&apos;: &apos;${appkey}&apos;,&apos;uuid&apos;: &apos;${uuid}&apos;,&apos;version&apos;: &apos;${version}&apos;,&apos;os&apos;: &apos;${os}&apos;,&apos;channel&apos;: ${channel},&apos;token&apos;: &apos;&apos;,&apos;data&apos;: {&apos;phone&apos;: &apos;${phone1}&apos;,&apos;verCode&apos;: &apos;${verCode}&apos;,&apos;type&apos;: &apos;${type}&apos;,&apos;onekey&apos;: &apos;${onekey}&apos;,&apos;shanyankey&apos;: &apos;${shanyankey}&apos;,&apos;loginType&apos;: &apos;${loginType}&apos;,&apos;userName&apos;: &apos;${userName}&apos;,&apos;userIdCard&apos;: &apos;${userIdCard}&apos;},&apos;latitude&apos;: &apos;&apos;,&apos;longitude&apos;: &apos;&apos;,&apos;isLogin&apos;: &apos;&apos;}&quot;;
        
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.ENCRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jiaMi = encr.encryptOrDecrypt(aesKey,privateKey,params,type);

        return jiaMi;
}

  vars.put(&quot;req&quot;,testAccount());</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="登录" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appKey&quot;: &quot;${appkey}&quot;,&#xd;
    &quot;uuid&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;${version}&quot;,&#xd;
    &quot;os&quot;: &quot;${os}&quot;,&#xd;
    &quot;channel&quot;: ${channel},&#xd;
    &quot;token&quot;: &quot;&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;phone&quot;: &quot;${phone11}&quot;,&#xd;
        &quot;verCode&quot;: &quot;${verCode}&quot;,&#xd;
        &quot;type&quot;: &quot;${type}&quot;,&#xd;
        &quot;onekey&quot;: &quot;${onekey}&quot;,&#xd;
        &quot;shanyankey&quot;: &quot;${shanyankey}&quot;,&#xd;
        &quot;loginType&quot;: &quot;${loginType}&quot;,&#xd;
        &quot;userName&quot;: &quot;${userName}&quot;,&#xd;
        &quot;userIdCard&quot;: &quot;${userIdCard}&quot;&#xd;
    },&#xd;
    &quot;latitude&quot;: &quot;&quot;,&#xd;
    &quot;longitude&quot;: &quot;&quot;,&#xd;
    &quot;isLogin&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/user/login.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">responseData</stringProp>
              <stringProp name="RegexExtractor.regex">responseData&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="响应解密" enabled="true">
            <stringProp name="BeanShellSampler.query">import com.houhan.decrypt.EncryptType;
import com.houhan.framework.core.tool.RsaEncryptAesTool;
import com.houhan.decrypt.EncryptDecrypt;

public static String testAccount() throws Exception {
       //aes密钥
        String aesKey = &quot;${aeskey}&quot;;
        //密钥
        String privateKey = &quot;${privatekey}&quot;;
        //加解密类型 ENCRYPT加密；DECRYPT 解密
        Integer type = EncryptType.DECRYPT.getValue();
        //进行解密
        //encryptOrDecrypt(ase密钥,密钥,需要加解密内容，加解密类型)
        EncryptDecrypt encr = new EncryptDecrypt();
        String jieMi = encr.encryptOrDecrypt(aesKey,privateKey,&quot;${responseData}&quot;,type);

        return jieMi;
}

  vars.put(&quot;res&quot;,testAccount());</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="登录" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-856238407">&quot;status&quot; : 1</stringProp>
                <stringProp name="110541305">token</stringProp>
                <stringProp name="47795222">phone&quot; : &quot;${phone11}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;

String lgreq=(String) vars.get(&quot;res&quot;);
JSONObject jsonObj=JSONObject.parseObject(lgreq);
//System.out.println(jsonObj.get(&quot;data&quot;));
JSONObject jsonObj2=(JSONObject) jsonObj.get(&quot;data&quot;);
 //System.out.println(jsonObj2.get(&quot;active_code_serial_no&quot;));
String s=(String) jsonObj2.get(&quot;token&quot;);
String s1=(String) jsonObj2.get(&quot;phone&quot;);

props.put(&quot;token&quot;,s);
props.put(&quot;phone_rank&quot;,s1);

 		
</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="在数据库中增加排行榜测试数据" enabled="true"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="在数据库中增加排行榜测试数据" enabled="true">
            <stringProp name="dataSource">flowsum_jdbc</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">#若想再增加数据量，增加N_ID,并且增加“排行榜测试数据构造0”末尾的数字
INSERT INTO `flowsum`.`t_basic_cms_product` 
(`N_ID`, `COMP_ID`, `CREATE_BY`, `CREATE_TIME`, `MODI_BY`, 
`MODI_TIME`, `ORG_ID`, `SORT_NUM`, `STATUS`, `APPLICATION_MATERIALS`, 
`APPLICATION_PROCEDURE`, `APPLY_NUM`, `APPLY_URL`, `DL_TIME`, `FEATURE`,
 `IMG_URL`, `IS_FULL`, `IS_RECOMMEND`, `LABEL1`, `LABEL2`, `MONEY_MAX`, 
`MONEY_MIN`, `NAME`, `OL_TIME`, `PASS_RATE`, `PRODUCT_DESCRIPTION`, `RATE`, 
`RATE_TYPE`, `SHOW_LOCATION`, `SUBTITLE`, `TERM_MAX`, `TERM_MIN`, `TERM_TYPE`, 
`STR0`, `STR1`, `product_type`, `product_level`, `uv_rate`, `apply_rate`, `loan_rate`, 
`manager_url`, `manager_username`, `manager_psw`, `manager_channel`, `android_download_url`,
 `ios_download_type`, `ios_download_url`, `android_download_type2`, `ios_bundle_id`, `android_bundle_id`,
 `JOINT_LOGIN`, `LOGIN_PASS`, `PRODUCT_TAG`, `is_Big_Product`, `private_Key`, `public_Key`, `PARTNER_ID`, 
`PRODUCT_LINK`, `CHECK_STATUS`, `adver`, `apply_condition`, `harry_Time`, `new_guidance`, `details`, 
`money_Increasing`, `term_Increasing`, `big_Url`, `product_Shape`, `is_hot`, `DISPLAY_POSITION_MIAO`,
 `CHECK_IMG_URL`, `CHECK_NAME`, `CHECK_PARTNER_ID`, `CHECK_PRODUCT_LINK`, `CHECK_PRODUCT_SHAPE`, 
`CHECK_PRODUCT_TYPE`, `CHECK_SUBTITLE`, `HAS_VIDEO`, `VIDEO_URL`, `PRODUCT_BIG_PICTURE`, `HOT_WHETHER_ANDROID`,
 `HOT_WHETHER_IOS`, `NEWCOMER_ANDROID`, `NEWCOMER_IOS`, `NEW_WHETHER_ANDROID`, `NEW_WHETHER_IOS`, `UV_PRICE`,
 `MILEAGE_STATUS`, `TARGET_CONTROL`, `SOLD_OUT_TIME`, `COMPLETE_TARGET`, `DARK_HORSE_ANDROID`, `DARK_HORSE_IOS`) 
VALUES (&apos;30000000&apos;, &apos;10000000&apos;, &apos;1&apos;, &apos;2020-02-10 23:43:20&apos;, &apos;1&apos;, &apos;2020-02-10 23:43:24&apos;, 
&apos;222&apos;, &apos;1&apos;, &apos;2&apos;, &apos;231233&apos;, &apos;&lt;p&gt;452&lt;/p&gt;&apos;, &apos;567&apos;, &apos;http://www.baidu.com&apos;, NULL, NULL,
 &apos;https://jkqb-jsb-test.oss-cn-shanghai.aliyuncs.com/530/8e0e16c4-ad38-4659-a663-abfdf3fc2555.png&apos;, 
&apos;0&apos;, NULL, &apos;推荐&apos;, NULL, &apos;20000.00&apos;, &apos;10000.00&apos;, &apos;排行榜测试数据构造0&apos;, NULL, &apos;5.0&apos;, &apos;23536234&apos;,
 &apos;67.00&apos;, NULL, &apos;3&apos;, NULL, &apos;23253&apos;, &apos;56&apos;, &apos;1&apos;, NULL, NULL, &apos;2&apos;, NULL, NULL, NULL, NULL, NULL, NULL,
 NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, &apos;1&apos;, NULL, NULL, NULL, NULL, NULL, &apos;10000071&apos;, 
&apos;https://jin.baidu.com/mkt/cloan/guide?code=0122huoke01&amp;channel=JXJhuoke&amp;spot=daikuandaohang-201808101&apos;,
 &apos;2&apos;, &apos;53245234&apos;, NULL, &apos;56&apos;, &apos;&lt;p&gt;234&lt;/p&gt;&apos;, &apos;&lt;p&gt;面向人群：生意人,上班族,自由职业者,其他,&lt;/p&gt;&lt;p&gt;审核方式：
全自动审批&lt;/p&gt;&lt;p&gt;到账方式：银行卡&lt;/p&gt;&lt;p&gt;服务费用：234&lt;/p&gt;&lt;p&gt;实际到账：全额到账&lt;/p&gt;&lt;p&gt;还款方式：分期还款&lt;/p&gt;&lt;p&gt;提前提款：
可以，收取违约金&lt;/p&gt;&lt;p&gt;预期算法：23&lt;/p&gt;&lt;p&gt;查验征信：否&lt;/p&gt;&lt;p&gt;能否提额：是&lt;/p&gt;&apos;, NULL, &apos;45&apos;, NULL, &apos;1&apos;, NULL, NULL, 
&apos;https://jkqb-jsb-test.oss-cn-shanghai.aliyuncs.com/530/35b9d1a7-66b6-4b66-a623-053a067625ae.png&apos;, &apos;产品名称&apos;, 
&apos;10000071&apos;, &apos;https://jin.baidu.com/mkt/cloan/guide?code=0122huoke01&amp;channel=JXJhuoke&amp;spot=daikuandaohang-201808101&apos;,
 &apos;1&apos;, &apos;2&apos;, &apos;43532532&apos;, &apos;0&apos;, NULL, &apos;https://hh-rgd.oss-cn-shanghai.aliyuncs.com/pic/41978fb0-5bf3-415a-a114-383f6cafcd07.png&apos;, 
&apos;1&apos;, &apos;1&apos;, &apos;1&apos;, &apos;1&apos;, &apos;1&apos;, &apos;1&apos;, &apos;1.00&apos;, &apos;0&apos;, &apos;2&apos;, &apos;2020-02-10 23:50:50&apos;, &apos;1&apos;, NULL, NULL),

(&apos;30000001&apos;, &apos;10000000&apos;, &apos;1&apos;, &apos;2020-02-10 23:43:20&apos;, &apos;1&apos;, &apos;2020-02-10 23:43:24&apos;, 
&apos;222&apos;, &apos;1&apos;, &apos;2&apos;, &apos;231233&apos;, &apos;&lt;p&gt;452&lt;/p&gt;&apos;, &apos;567&apos;, &apos;http://www.baidu.com&apos;, NULL, NULL,
 &apos;https://jkqb-jsb-test.oss-cn-shanghai.aliyuncs.com/530/8e0e16c4-ad38-4659-a663-abfdf3fc2555.png&apos;, 
&apos;0&apos;, NULL, &apos;推荐&apos;, NULL, &apos;20000.00&apos;, &apos;10000.00&apos;, &apos;排行榜测试数据构造1&apos;, NULL, &apos;5.0&apos;, &apos;23536234&apos;,
 &apos;67.00&apos;, NULL, &apos;3&apos;, NULL, &apos;23253&apos;, &apos;56&apos;, &apos;1&apos;, NULL, NULL, &apos;2&apos;, NULL, NULL, NULL, NULL, NULL, NULL,
 NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, &apos;1&apos;, NULL, NULL, NULL, NULL, NULL, &apos;10000071&apos;, 
&apos;https://jin.baidu.com/mkt/cloan/guide?code=0122huoke01&amp;channel=JXJhuoke&amp;spot=daikuandaohang-201808101&apos;,
 &apos;2&apos;, &apos;53245234&apos;, NULL, &apos;56&apos;, &apos;&lt;p&gt;234&lt;/p&gt;&apos;, &apos;&lt;p&gt;面向人群：生意人,上班族,自由职业者,其他,&lt;/p&gt;&lt;p&gt;审核方式：
全自动审批&lt;/p&gt;&lt;p&gt;到账方式：银行卡&lt;/p&gt;&lt;p&gt;服务费用：234&lt;/p&gt;&lt;p&gt;实际到账：全额到账&lt;/p&gt;&lt;p&gt;还款方式：分期还款&lt;/p&gt;&lt;p&gt;提前提款：
可以，收取违约金&lt;/p&gt;&lt;p&gt;预期算法：23&lt;/p&gt;&lt;p&gt;查验征信：否&lt;/p&gt;&lt;p&gt;能否提额：是&lt;/p&gt;&apos;, NULL, &apos;45&apos;, NULL, &apos;1&apos;, NULL, NULL, 
&apos;https://jkqb-jsb-test.oss-cn-shanghai.aliyuncs.com/530/35b9d1a7-66b6-4b66-a623-053a067625ae.png&apos;, &apos;产品名称&apos;, 
&apos;10000071&apos;, &apos;https://jin.baidu.com/mkt/cloan/guide?code=0122huoke01&amp;channel=JXJhuoke&amp;spot=daikuandaohang-201808101&apos;,
 &apos;1&apos;, &apos;2&apos;, &apos;43532532&apos;, &apos;0&apos;, NULL, &apos;https://hh-rgd.oss-cn-shanghai.aliyuncs.com/pic/41978fb0-5bf3-415a-a114-383f6cafcd07.png&apos;, 
&apos;1&apos;, &apos;1&apos;, &apos;1&apos;, &apos;1&apos;, &apos;1&apos;, &apos;1&apos;, &apos;1.00&apos;, &apos;0&apos;, &apos;2&apos;, &apos;2020-02-10 23:50:50&apos;, &apos;1&apos;, NULL, NULL),
(&apos;30000002&apos;, &apos;10000000&apos;, &apos;1&apos;, &apos;2020-02-10 23:43:20&apos;, &apos;1&apos;, &apos;2020-02-10 23:43:24&apos;, 
&apos;222&apos;, &apos;1&apos;, &apos;2&apos;, &apos;231233&apos;, &apos;&lt;p&gt;452&lt;/p&gt;&apos;, &apos;567&apos;, &apos;http://www.baidu.com&apos;, NULL, NULL,
 &apos;https://jkqb-jsb-test.oss-cn-shanghai.aliyuncs.com/530/8e0e16c4-ad38-4659-a663-abfdf3fc2555.png&apos;, 
&apos;0&apos;, NULL, &apos;推荐&apos;, NULL, &apos;20000.00&apos;, &apos;10000.00&apos;, &apos;排行榜测试数据构造2&apos;, NULL, &apos;5.0&apos;, &apos;23536234&apos;,
 &apos;67.00&apos;, NULL, &apos;3&apos;, NULL, &apos;23253&apos;, &apos;56&apos;, &apos;1&apos;, NULL, NULL, &apos;2&apos;, NULL, NULL, NULL, NULL, NULL, NULL,
 NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, &apos;1&apos;, NULL, NULL, NULL, NULL, NULL, &apos;10000071&apos;, 
&apos;https://jin.baidu.com/mkt/cloan/guide?code=0122huoke01&amp;channel=JXJhuoke&amp;spot=daikuandaohang-201808101&apos;,
 &apos;2&apos;, &apos;53245234&apos;, NULL, &apos;56&apos;, &apos;&lt;p&gt;234&lt;/p&gt;&apos;, &apos;&lt;p&gt;面向人群：生意人,上班族,自由职业者,其他,&lt;/p&gt;&lt;p&gt;审核方式：
全自动审批&lt;/p&gt;&lt;p&gt;到账方式：银行卡&lt;/p&gt;&lt;p&gt;服务费用：234&lt;/p&gt;&lt;p&gt;实际到账：全额到账&lt;/p&gt;&lt;p&gt;还款方式：分期还款&lt;/p&gt;&lt;p&gt;提前提款：
可以，收取违约金&lt;/p&gt;&lt;p&gt;预期算法：23&lt;/p&gt;&lt;p&gt;查验征信：否&lt;/p&gt;&lt;p&gt;能否提额：是&lt;/p&gt;&apos;, NULL, &apos;45&apos;, NULL, &apos;1&apos;, NULL, NULL, 
&apos;https://jkqb-jsb-test.oss-cn-shanghai.aliyuncs.com/530/35b9d1a7-66b6-4b66-a623-053a067625ae.png&apos;, &apos;产品名称&apos;, 
&apos;10000071&apos;, &apos;https://jin.baidu.com/mkt/cloan/guide?code=0122huoke01&amp;channel=JXJhuoke&amp;spot=daikuandaohang-201808101&apos;,
 &apos;1&apos;, &apos;2&apos;, &apos;43532532&apos;, &apos;0&apos;, NULL, &apos;https://hh-rgd.oss-cn-shanghai.aliyuncs.com/pic/41978fb0-5bf3-415a-a114-383f6cafcd07.png&apos;, 
&apos;1&apos;, &apos;1&apos;, &apos;1&apos;, &apos;1&apos;, &apos;1&apos;, &apos;1&apos;, &apos;1.00&apos;, &apos;0&apos;, &apos;2&apos;, &apos;2020-02-10 23:50:50&apos;, &apos;1&apos;, NULL, NULL);

#若想再增加数据量，product_id（与上表的N_ID一一对应）,他们的排序号sort_number不能一样
INSERT INTO `flowsum`.`t_product_rank`
 (`product_id`, `app_id`, `label`, `lending_index`, `up_down`, `publish_time`, `STR0`, 
`STR1`, `COMP_ID`, `CREATE_BY`, `CREATE_TIME`, `MODI_BY`, `MODI_TIME`, `ORG_ID`, `SORT_NUM`, `STATUS`, 
`IS_HAND_OPERATE`, `POSITION_ID`) 
VALUES (&apos;30000000&apos;, &apos;10000042&apos;, &apos;熟&apos;, &apos;55.00&apos;, &apos;22&apos;, &apos;2020-02-10 23:38:43&apos;,
 NULL, NULL, &apos;10000000&apos;, &apos;1&apos;, &apos;2020-02-10 23:36:52&apos;, &apos;1&apos;, &apos;2020-02-10 23:37:01&apos;, &apos;222&apos;, &apos;99&apos;, &apos;1&apos;, NULL, NULL),
(&apos;30000001&apos;, &apos;10000042&apos;, &apos;熟&apos;, &apos;55.00&apos;, &apos;22&apos;, &apos;2020-02-10 23:38:43&apos;,
 NULL, NULL, &apos;10000000&apos;, &apos;1&apos;, &apos;2020-02-10 23:36:52&apos;, &apos;1&apos;, &apos;2020-02-10 23:37:01&apos;, &apos;222&apos;, &apos;98&apos;, &apos;1&apos;, NULL, NULL),
(&apos;30000002&apos;, &apos;10000042&apos;, &apos;熟&apos;, &apos;55.00&apos;, &apos;22&apos;, &apos;2020-02-10 23:38:43&apos;,
 NULL, NULL, &apos;10000000&apos;, &apos;1&apos;, &apos;2020-02-10 23:36:52&apos;, &apos;1&apos;, &apos;2020-02-10 23:37:01&apos;, &apos;222&apos;, &apos;97&apos;, &apos;1&apos;, NULL, NULL);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="排行榜" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="排行榜" enabled="true"/>
        <hashTree>
          <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">172.16.3.40</stringProp>
            <stringProp name="HTTPSampler.port">8762</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">api/product/rankProductList.action</stringProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </ConfigTestElement>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="接口关键参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="pageNo" elementType="Argument">
                <stringProp name="Argument.name">pageNo</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pageSize" elementType="Argument">
                <stringProp name="Argument.name">pageSize</stringProp>
                <stringProp name="Argument.value">10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">正常请求的参数值 </stringProp>
              </elementProp>
              <elementProp name="pageNo1" elementType="Argument">
                <stringProp name="Argument.name">pageNo1</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pageSize1" elementType="Argument">
                <stringProp name="Argument.name">pageSize1</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">当页码和页面容量都为0时，接口报错</stringProp>
              </elementProp>
              <elementProp name="pageNo2" elementType="Argument">
                <stringProp name="Argument.name">pageNo2</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pageSize2" elementType="Argument">
                <stringProp name="Argument.name">pageSize2</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">当页面容量都为0时，接口报错</stringProp>
              </elementProp>
              <elementProp name="pageSize3" elementType="Argument">
                <stringProp name="Argument.name">pageSize3</stringProp>
                <stringProp name="Argument.value">2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pageNo3" elementType="Argument">
                <stringProp name="Argument.name">pageNo3</stringProp>
                <stringProp name="Argument.value">2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">产品个数大于等于3个，能正常返回数据</stringProp>
              </elementProp>
              <elementProp name="pageNo4" elementType="Argument">
                <stringProp name="Argument.name">pageNo4</stringProp>
                <stringProp name="Argument.value">100</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">产品个数小于100个，接口</stringProp>
              </elementProp>
              <elementProp name="pageSize4" elementType="Argument">
                <stringProp name="Argument.name">pageSize4</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="排行榜产品、排序测试" enabled="true"/>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="生成sql所需的变量startline" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">pageno=vars.get(&quot;pageNo&quot;);
pagesize=vars.get(&quot;pageSize&quot;);
int pageno=Integer.parseInt(pageno);
int pagesize=Integer.parseInt(pagesize);
temp=(pageno-1)*pagesize;
System.out.println(temp);
vars.put(&quot;startline&quot;,temp.toString())</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="正常请求接口得到response" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;appKey&quot;: &quot;${appkey}&quot;, &#xd;
  &quot;uuid&quot;: &quot;${uuid}&quot;, &#xd;
  &quot;version&quot;: &quot;${version}&quot;, &#xd;
  &quot;os&quot;: &quot;${os}&quot;, &#xd;
  &quot;channel&quot;: &quot;${channel}&quot;, &#xd;
  &quot;token&quot;: &quot;${__P(token,)}&quot;, &#xd;
  &quot;data&quot;: {&#xd;
    &quot;phone&quot;: ${__P(phone_rank,)}, &#xd;
    &quot;pageNo&quot;: ${pageNo}, &#xd;
    &quot;pageSize&quot;: ${pageSize}, &#xd;
    &quot;type&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="获取响应的数据存入变量中" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">String temp = prev.getResponseDataAsString();
vars.put(&quot;product_rank_res&quot;,temp);
//System.out.println(temp);</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="通过sql查询数据库中的数据" enabled="true">
              <stringProp name="dataSource">flowsum_jdbc</stringProp>
              <stringProp name="query">select p.name productName from t_product_rank r,t_basic_cms_product p  where r.product_id = p.n_id and app_id = ${appid} and r.STATUS=1 and p.STATUS=2 order by r.sort_num,r.create_time desc limit ${startline},${pageSize};</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as Object</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable">product_rank</stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="正常请求接口时返口" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;

//将响应的字符串转换成json对象
String lgreq=(String) vars.get(&quot;product_rank_res&quot;);
//System.out.println(lgreq);
JSONObject json_response=JSONObject.parseObject(lgreq);
//System.out.println(json_response.get(&quot;data&quot;));
JSONObject json_response_data=(JSONObject) json_response.get(&quot;data&quot;);
//System.out.println(json_response_data.get(&quot;content&quot;));
JSONArray json_response_data_content_arry = json_response_data.getJSONArray(&quot;content&quot;);
int len_res=json_response_data_content_arry.size();

//查询数据的数据
Object sql_response_obj= vars.getObject(&quot;product_rank&quot;);
String sql_response_str =sql_response_obj.toString();
//System.out.println(sql_response_str);
String[] list=sql_response_str.split(&quot;,&quot;);
int len=list.length;

//System.out.println(len);

if(len&gt;0&amp;&amp;len==len_res){
	for(int i=0;i&lt;len;i++){
	//遍历sql查询出的数据
	String productnameFromSql=sql_response_obj.get(i).get(&quot;productName&quot;).toString();
     //System.out.println(productname);
     //遍历接口返回的数据
	JSONObject productInJson = (JSONObject) json_response_data_content_arry.get(i);
     String productfrominterface=productInJson.get(&quot;productName&quot;);
//	String productfrominterface=&quot;13456&quot;;
	//System.out.println(productfrominterface);
	//通过比较得出接口返回的产品名称顺序及内容是否正确
	if (!productnameFromSql.equals(productfrominterface)){
		Failure=true;
		FailureMessage=&quot;接口返加产品名称出错！&quot;;
		break;
			}
		}
	}
else if(len!=len_res){
	
	Failure=true;
	FailureMessage=&quot;接口返加产品数量出错！&quot;;
	
	}
















</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="页码为0，产品列表为0，接口返回状态码为-1" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="页码为0，产品列表为0，接口返回状态码为-1" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;appKey&quot;: &quot;${appkey}&quot;, &#xd;
  &quot;uuid&quot;: &quot;${uuid}&quot;, &#xd;
  &quot;version&quot;: &quot;${version}&quot;, &#xd;
  &quot;os&quot;: &quot;${os}&quot;, &#xd;
  &quot;channel&quot;: &quot;${channel}&quot;, &#xd;
  &quot;token&quot;: &quot;${token}&quot;, &#xd;
  &quot;data&quot;: {&#xd;
    &quot;phone&quot;: ${phone}, &#xd;
    &quot;pageNo&quot;: ${pageNo1}, &#xd;
    &quot;pageSize&quot;: ${pageSize1}, &#xd;
    &quot;type&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-750277752">&quot;status&quot;:&quot;-1&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="页码为1，产品列表为0，接口返回状态码为-1" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="页码为1，产品列表为0，接口返回状态码为-1" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;appKey&quot;: &quot;${appkey}&quot;, &#xd;
  &quot;uuid&quot;: &quot;${uuid}&quot;, &#xd;
  &quot;version&quot;: &quot;${version}&quot;, &#xd;
  &quot;os&quot;: &quot;${os}&quot;, &#xd;
  &quot;channel&quot;: &quot;${channel}&quot;, &#xd;
  &quot;token&quot;: &quot;${token}&quot;, &#xd;
  &quot;data&quot;: {&#xd;
    &quot;phone&quot;: ${phone}, &#xd;
    &quot;pageNo&quot;: ${pageNo2}, &#xd;
    &quot;pageSize&quot;: ${pageSize2}, &#xd;
    &quot;type&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-750277752">&quot;status&quot;:&quot;-1&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="页码为2，产品列表为2，产品、排序测试" enabled="true"/>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="生成sql所需的变量startline" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">pageno=vars.get(&quot;pageNo3&quot;);
pagesize=vars.get(&quot;pageSize3&quot;);
int pageno=Integer.parseInt(pageno);
int pagesize=Integer.parseInt(pagesize);
temp=(pageno-1)*pagesize;
System.out.println(temp);
vars.put(&quot;startline&quot;,temp.toString())</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="正常请求接口时返口" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;

//将响应的字符串转换成json对象
String lgreq=(String) vars.get(&quot;product_rank_res&quot;);
//System.out.println(lgreq);
JSONObject json_response=JSONObject.parseObject(lgreq);
//System.out.println(json_response.get(&quot;data&quot;));
JSONObject json_response_data=(JSONObject) json_response.get(&quot;data&quot;);
//System.out.println(json_response_data.get(&quot;content&quot;));
JSONArray json_response_data_content_arry = json_response_data.getJSONArray(&quot;content&quot;);
int len_res=json_response_data_content_arry.size();

//查询数据的数据
Object sql_response_obj= vars.getObject(&quot;product_rank&quot;);
String sql_response_str =sql_response_obj.toString();
//System.out.println(sql_response_str);
String[] list=sql_response_str.split(&quot;,&quot;);
int len=list.length;

//System.out.println(len);

if(len&gt;0&amp;&amp;len==len_res){
	for(int i=0;i&lt;len;i++){
	//遍历sql查询出的数据
	String productnameFromSql=sql_response_obj.get(i).get(&quot;productName&quot;).toString();
     //System.out.println(productname);
     //遍历接口返回的数据
	JSONObject productInJson = (JSONObject) json_response_data_content_arry.get(i);
	String productfrominterface=productInJson.get(&quot;productName&quot;);
//	String productfrominterface=&quot;13456&quot;;
	//System.out.println(productfrominterface);
	//通过比较得出接口返回的产品名称顺序及内容是否正确
	if (!productnameFromSql.equals(productfrominterface)){
		Failure=true;
		FailureMessage=&quot;接口返加产品名称出错！&quot;;
		break;
			}
		}
	}
else if(len!=len_res){
	
	Failure=true;
	FailureMessage=&quot;接口返加产品数量出错！&quot;;
	
	}
















</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="通过sql查询数据库中的数据" enabled="true">
              <stringProp name="dataSource">flowsum_jdbc</stringProp>
              <stringProp name="query">select p.name productName from t_product_rank r,t_basic_cms_product p  where r.product_id = p.n_id and app_id = ${appid} and r.STATUS=1 and p.STATUS=2 order by r.sort_num,r.create_time desc limit ${startline},${pageSize3};</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as Object</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable">product_rank</stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCPostProcessor>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="页码为2，产品列表为2" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;appKey&quot;: &quot;${appkey}&quot;, &#xd;
  &quot;uuid&quot;: &quot;${uuid}&quot;, &#xd;
  &quot;version&quot;: &quot;${version}&quot;, &#xd;
  &quot;os&quot;: &quot;${os}&quot;, &#xd;
  &quot;channel&quot;: &quot;${channel}&quot;, &#xd;
  &quot;token&quot;: &quot;${__P(token,)}&quot;, &#xd;
  &quot;data&quot;: {&#xd;
    &quot;phone&quot;: ${__P(phone_rank,)}, &#xd;
    &quot;pageNo&quot;: ${pageNo3}, &#xd;
    &quot;pageSize&quot;: ${pageSize3}, &#xd;
    &quot;type&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="获取响应的数据存入变量中" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">String temp = prev.getResponseDataAsString();
vars.put(&quot;product_rank_res&quot;,temp);
//System.out.println(temp);</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="页码为，产品列表为2，产品、排序测试" enabled="true"/>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="生成sql所需的变量startline" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">pageno=vars.get(&quot;pageNo4&quot;);
pagesize=vars.get(&quot;pageSize4&quot;);
int pageno=Integer.parseInt(pageno);
int pagesize=Integer.parseInt(pagesize);
temp=(pageno-1)*pagesize;
System.out.println(temp);
vars.put(&quot;startline&quot;,temp.toString())</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="页码为100，产品列表为1（排行榜产品个数大于3小于100），返回产品列表为空" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;appKey&quot;: &quot;${appkey}&quot;, &#xd;
  &quot;uuid&quot;: &quot;${uuid}&quot;, &#xd;
  &quot;version&quot;: &quot;${version}&quot;, &#xd;
  &quot;os&quot;: &quot;${os}&quot;, &#xd;
  &quot;channel&quot;: &quot;${channel}&quot;, &#xd;
  &quot;token&quot;: &quot;${__P(token,)}&quot;, &#xd;
  &quot;data&quot;: {&#xd;
    &quot;phone&quot;: ${__P(phone_rank,)}, &#xd;
    &quot;pageNo&quot;: ${pageNo4}, &#xd;
    &quot;pageSize&quot;: ${pageSize4}, &#xd;
    &quot;type&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="获取响应的数据存入变量中" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">String temp = prev.getResponseDataAsString();
vars.put(&quot;product_rank_res&quot;,temp);
//System.out.println(temp);</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="通过sql查询数据库中的数据" enabled="true">
              <stringProp name="dataSource">flowsum_jdbc</stringProp>
              <stringProp name="query">select p.name productName from t_product_rank r,t_basic_cms_product p  where r.product_id = p.n_id and app_id = ${appid} and r.STATUS=1 and p.STATUS=2 order by r.sort_num,r.create_time desc limit ${startline},${pageSize4};</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as Object</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable">product_rank</stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="正常请求接口时返口" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;

//将响应的字符串转换成json对象
String lgreq=(String) vars.get(&quot;product_rank_res&quot;);
//System.out.println(lgreq);
JSONObject json_response=JSONObject.parseObject(lgreq);
//System.out.println(json_response.get(&quot;data&quot;));
JSONObject json_response_data=(JSONObject) json_response.get(&quot;data&quot;);
//System.out.println(json_response_data.get(&quot;content&quot;));
JSONArray json_response_data_content_arry = json_response_data.getJSONArray(&quot;content&quot;);
int len_res=json_response_data_content_arry.size();
//System.out.println(&quot;******&quot;);
//System.out.println(len_res);
if (len_res!=0){
	Failure=true;
	FailureMessage=&quot;接口返回产品列表应该为空&quot;;
	}









</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <PostThreadGroup guiclass="PostThreadGroupGui" testclass="PostThreadGroup" testname="tearDown Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </PostThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="清除排行榜测试数据" enabled="true"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="清除排行榜测试数据" enabled="true">
            <stringProp name="dataSource">flowsum_jdbc</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">DELETE from `flowsum`.`t_product_rank` where product_id&gt;=30000000 and product_id&lt;=30000002;
delete from `flowsum`.`t_basic_cms_product`  where n_id&gt;=30000000 and n_id&lt;=30000002;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
